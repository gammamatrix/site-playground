<?xml version="1.0" encoding="UTF-8"?>
<crap_result>
  <project/>
  <timestamp>2024-03-13 20:52:26</timestamp>
  <stats>
    <name>Method Crap Stats</name>
    <methodCount>231</methodCount>
    <crapMethodCount>6</crapMethodCount>
    <crapLoad>75</crapLoad>
    <totalCrap>1699.12</totalCrap>
    <crapMethodPercent>2.6</crapMethodPercent>
  </stats>
  <methods>
    <method>
      <package>App\Providers</package>
      <className>App\Providers\AppServiceProvider</className>
      <methodName>register</methodName>
      <methodSignature>register(): void</methodSignature>
      <fullMethod>register(): void</fullMethod>
      <crap>1</crap>
      <complexity>1</complexity>
      <coverage>100</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package>App\Providers</package>
      <className>App\Providers\AppServiceProvider</className>
      <methodName>boot</methodName>
      <methodSignature>boot(): void</methodSignature>
      <fullMethod>boot(): void</fullMethod>
      <crap>1</crap>
      <complexity>1</complexity>
      <coverage>100</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package>Playground\Test\Feature\Http\Controllers\Resource\Playground</package>
      <className>Playground\Test\Feature\Http\Controllers\Resource\Playground\CreateJsonTrait</className>
      <methodName>getGetFqdn</methodName>
      <methodSignature>getGetFqdn(): string</methodSignature>
      <fullMethod>getGetFqdn(): string</fullMethod>
      <crap>0</crap>
      <complexity>0</complexity>
      <coverage>0</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package>Playground\Test\Feature\Http\Controllers\Resource\Playground</package>
      <className>Playground\Test\Feature\Http\Controllers\Resource\Playground\CreateJsonTrait</className>
      <methodName>getPackageInfo</methodName>
      <methodSignature>getPackageInfo(): array</methodSignature>
      <fullMethod>getPackageInfo(): array</fullMethod>
      <crap>0</crap>
      <complexity>0</complexity>
      <coverage>0</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package>Playground\Test\Feature\Http\Controllers\Resource\Playground</package>
      <className>Playground\Test\Feature\Http\Controllers\Resource\Playground\CreateJsonTrait</className>
      <methodName>getStructureCreate</methodName>
      <methodSignature>getStructureCreate(): array</methodSignature>
      <fullMethod>getStructureCreate(): array</fullMethod>
      <crap>0</crap>
      <complexity>0</complexity>
      <coverage>0</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package>Playground\Test\Feature\Http\Controllers\Resource\Playground</package>
      <className>Playground\Test\Feature\Http\Controllers\Resource\Playground\CreateJsonTrait</className>
      <methodName>test_json_guest_cannot_get_create_info</methodName>
      <methodSignature>test_json_guest_cannot_get_create_info()</methodSignature>
      <fullMethod>test_json_guest_cannot_get_create_info()</fullMethod>
      <crap>2</crap>
      <complexity>1</complexity>
      <coverage>0</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package>Playground\Test\Feature\Http\Controllers\Resource\Playground</package>
      <className>Playground\Test\Feature\Http\Controllers\Resource\Playground\CreateJsonTrait</className>
      <methodName>test_json_admin_can_get_create_info</methodName>
      <methodSignature>test_json_admin_can_get_create_info()</methodSignature>
      <fullMethod>test_json_admin_can_get_create_info()</fullMethod>
      <crap>2</crap>
      <complexity>1</complexity>
      <coverage>0</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package>Playground\Test\Feature\Http\Controllers\Resource\Playground</package>
      <className>Playground\Test\Feature\Http\Controllers\Resource\Playground\CreateJsonTrait</className>
      <methodName>test_json_get_create_info_as_admin_with_invalid_parameter_and_fail_validation</methodName>
      <methodSignature>test_json_get_create_info_as_admin_with_invalid_parameter_and_fail_validation()</methodSignature>
      <fullMethod>test_json_get_create_info_as_admin_with_invalid_parameter_and_fail_validation()</fullMethod>
      <crap>2</crap>
      <complexity>1</complexity>
      <coverage>0</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package>Playground\Test\Feature\Http\Controllers\Resource\Playground</package>
      <className>Playground\Test\Feature\Http\Controllers\Resource\Playground\CreateTrait</className>
      <methodName>getGetFqdn</methodName>
      <methodSignature>getGetFqdn(): string</methodSignature>
      <fullMethod>getGetFqdn(): string</fullMethod>
      <crap>0</crap>
      <complexity>0</complexity>
      <coverage>0</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package>Playground\Test\Feature\Http\Controllers\Resource\Playground</package>
      <className>Playground\Test\Feature\Http\Controllers\Resource\Playground\CreateTrait</className>
      <methodName>getPackageInfo</methodName>
      <methodSignature>getPackageInfo(): array</methodSignature>
      <fullMethod>getPackageInfo(): array</fullMethod>
      <crap>0</crap>
      <complexity>0</complexity>
      <coverage>0</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package>Playground\Test\Feature\Http\Controllers\Resource\Playground</package>
      <className>Playground\Test\Feature\Http\Controllers\Resource\Playground\CreateTrait</className>
      <methodName>test_guest_cannot_render_create_view</methodName>
      <methodSignature>test_guest_cannot_render_create_view()</methodSignature>
      <fullMethod>test_guest_cannot_render_create_view()</fullMethod>
      <crap>2</crap>
      <complexity>1</complexity>
      <coverage>0</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package>Playground\Test\Feature\Http\Controllers\Resource\Playground</package>
      <className>Playground\Test\Feature\Http\Controllers\Resource\Playground\CreateTrait</className>
      <methodName>test_admin_can_render_create_view</methodName>
      <methodSignature>test_admin_can_render_create_view()</methodSignature>
      <fullMethod>test_admin_can_render_create_view()</fullMethod>
      <crap>2</crap>
      <complexity>1</complexity>
      <coverage>0</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package>Playground\Test\Feature\Http\Controllers\Resource\Playground</package>
      <className>Playground\Test\Feature\Http\Controllers\Resource\Playground\CreateTrait</className>
      <methodName>test_admin_can_render_create_view_with_return_url</methodName>
      <methodSignature>test_admin_can_render_create_view_with_return_url()</methodSignature>
      <fullMethod>test_admin_can_render_create_view_with_return_url()</fullMethod>
      <crap>2</crap>
      <complexity>1</complexity>
      <coverage>0</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package>Playground\Test\Feature\Http\Controllers\Resource\Playground</package>
      <className>Playground\Test\Feature\Http\Controllers\Resource\Playground\CreateTrait</className>
      <methodName>test_create_view_as_admin_with_invalid_parameter_and_fail_validation_and_redirect</methodName>
      <methodSignature>test_create_view_as_admin_with_invalid_parameter_and_fail_validation_and_redirect()</methodSignature>
      <fullMethod>test_create_view_as_admin_with_invalid_parameter_and_fail_validation_and_redirect()</fullMethod>
      <crap>2</crap>
      <complexity>1</complexity>
      <coverage>0</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package>Playground\Test\Feature\Http\Controllers\Resource\Playground</package>
      <className>Playground\Test\Feature\Http\Controllers\Resource\Playground\DestroyJsonTrait</className>
      <methodName>getGetFqdn</methodName>
      <methodSignature>getGetFqdn(): string</methodSignature>
      <fullMethod>getGetFqdn(): string</fullMethod>
      <crap>0</crap>
      <complexity>0</complexity>
      <coverage>0</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package>Playground\Test\Feature\Http\Controllers\Resource\Playground</package>
      <className>Playground\Test\Feature\Http\Controllers\Resource\Playground\DestroyJsonTrait</className>
      <methodName>getPackageInfo</methodName>
      <methodSignature>getPackageInfo(): array</methodSignature>
      <fullMethod>getPackageInfo(): array</fullMethod>
      <crap>0</crap>
      <complexity>0</complexity>
      <coverage>0</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package>Playground\Test\Feature\Http\Controllers\Resource\Playground</package>
      <className>Playground\Test\Feature\Http\Controllers\Resource\Playground\DestroyJsonTrait</className>
      <methodName>test_json_guest_cannot_destroy</methodName>
      <methodSignature>test_json_guest_cannot_destroy()</methodSignature>
      <fullMethod>test_json_guest_cannot_destroy()</fullMethod>
      <crap>2</crap>
      <complexity>1</complexity>
      <coverage>0</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package>Playground\Test\Feature\Http\Controllers\Resource\Playground</package>
      <className>Playground\Test\Feature\Http\Controllers\Resource\Playground\DestroyJsonTrait</className>
      <methodName>test_json_destroy_as_admin_and_succeed</methodName>
      <methodSignature>test_json_destroy_as_admin_and_succeed()</methodSignature>
      <fullMethod>test_json_destroy_as_admin_and_succeed()</fullMethod>
      <crap>2</crap>
      <complexity>1</complexity>
      <coverage>0</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package>Playground\Test\Feature\Http\Controllers\Resource\Playground</package>
      <className>Playground\Test\Feature\Http\Controllers\Resource\Playground\DestroyJsonTrait</className>
      <methodName>test_json_destroy_as_admin_and_succeed_with_force_delete</methodName>
      <methodSignature>test_json_destroy_as_admin_and_succeed_with_force_delete()</methodSignature>
      <fullMethod>test_json_destroy_as_admin_and_succeed_with_force_delete()</fullMethod>
      <crap>2</crap>
      <complexity>1</complexity>
      <coverage>0</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package>Playground\Test\Feature\Http\Controllers\Resource\Playground</package>
      <className>Playground\Test\Feature\Http\Controllers\Resource\Playground\DestroyJsonTrait</className>
      <methodName>test_json_destroy_as_admin_and_succeed_with_no_content</methodName>
      <methodSignature>test_json_destroy_as_admin_and_succeed_with_no_content()</methodSignature>
      <fullMethod>test_json_destroy_as_admin_and_succeed_with_no_content()</fullMethod>
      <crap>2</crap>
      <complexity>1</complexity>
      <coverage>0</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package>Playground\Test\Feature\Http\Controllers\Resource\Playground</package>
      <className>Playground\Test\Feature\Http\Controllers\Resource\Playground\DestroyJsonTrait</className>
      <methodName>test_json_destroy_as_admin_and_succeed_and_ignore_redirect</methodName>
      <methodSignature>test_json_destroy_as_admin_and_succeed_and_ignore_redirect()</methodSignature>
      <fullMethod>test_json_destroy_as_admin_and_succeed_and_ignore_redirect()</fullMethod>
      <crap>2</crap>
      <complexity>1</complexity>
      <coverage>0</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package>Playground\Test\Feature\Http\Controllers\Resource\Playground</package>
      <className>Playground\Test\Feature\Http\Controllers\Resource\Playground\DestroyJsonTrait</className>
      <methodName>test_json_destroy_as_user_and_get_denied_and_no_force_delete_allowed</methodName>
      <methodSignature>test_json_destroy_as_user_and_get_denied_and_no_force_delete_allowed()</methodSignature>
      <fullMethod>test_json_destroy_as_user_and_get_denied_and_no_force_delete_allowed()</fullMethod>
      <crap>2</crap>
      <complexity>1</complexity>
      <coverage>0</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package>Playground\Test\Feature\Http\Controllers\Resource\Playground</package>
      <className>Playground\Test\Feature\Http\Controllers\Resource\Playground\DestroyTrait</className>
      <methodName>getGetFqdn</methodName>
      <methodSignature>getGetFqdn(): string</methodSignature>
      <fullMethod>getGetFqdn(): string</fullMethod>
      <crap>0</crap>
      <complexity>0</complexity>
      <coverage>0</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package>Playground\Test\Feature\Http\Controllers\Resource\Playground</package>
      <className>Playground\Test\Feature\Http\Controllers\Resource\Playground\DestroyTrait</className>
      <methodName>getPackageInfo</methodName>
      <methodSignature>getPackageInfo(): array</methodSignature>
      <fullMethod>getPackageInfo(): array</fullMethod>
      <crap>0</crap>
      <complexity>0</complexity>
      <coverage>0</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package>Playground\Test\Feature\Http\Controllers\Resource\Playground</package>
      <className>Playground\Test\Feature\Http\Controllers\Resource\Playground\DestroyTrait</className>
      <methodName>test_guest_cannot_destroy</methodName>
      <methodSignature>test_guest_cannot_destroy()</methodSignature>
      <fullMethod>test_guest_cannot_destroy()</fullMethod>
      <crap>2</crap>
      <complexity>1</complexity>
      <coverage>0</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package>Playground\Test\Feature\Http\Controllers\Resource\Playground</package>
      <className>Playground\Test\Feature\Http\Controllers\Resource\Playground\DestroyTrait</className>
      <methodName>test_destroy_as_admin_and_succeed</methodName>
      <methodSignature>test_destroy_as_admin_and_succeed()</methodSignature>
      <fullMethod>test_destroy_as_admin_and_succeed()</fullMethod>
      <crap>2</crap>
      <complexity>1</complexity>
      <coverage>0</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package>Playground\Test\Feature\Http\Controllers\Resource\Playground</package>
      <className>Playground\Test\Feature\Http\Controllers\Resource\Playground\DestroyTrait</className>
      <methodName>test_destroy_as_admin_and_succeed_with_force_delete</methodName>
      <methodSignature>test_destroy_as_admin_and_succeed_with_force_delete()</methodSignature>
      <fullMethod>test_destroy_as_admin_and_succeed_with_force_delete()</fullMethod>
      <crap>2</crap>
      <complexity>1</complexity>
      <coverage>0</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package>Playground\Test\Feature\Http\Controllers\Resource\Playground</package>
      <className>Playground\Test\Feature\Http\Controllers\Resource\Playground\DestroyTrait</className>
      <methodName>test_destroy_as_admin_and_succeed_with_redirect_to_index_with_trash</methodName>
      <methodSignature>test_destroy_as_admin_and_succeed_with_redirect_to_index_with_trash()</methodSignature>
      <fullMethod>test_destroy_as_admin_and_succeed_with_redirect_to_index_with_trash()</fullMethod>
      <crap>2</crap>
      <complexity>1</complexity>
      <coverage>0</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package>Playground\Test\Feature\Http\Controllers\Resource\Playground</package>
      <className>Playground\Test\Feature\Http\Controllers\Resource\Playground\DestroyTrait</className>
      <methodName>test_destroy_as_user_and_get_denied_and_no_force_delete_allowed</methodName>
      <methodSignature>test_destroy_as_user_and_get_denied_and_no_force_delete_allowed()</methodSignature>
      <fullMethod>test_destroy_as_user_and_get_denied_and_no_force_delete_allowed()</fullMethod>
      <crap>2</crap>
      <complexity>1</complexity>
      <coverage>0</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package>Playground\Test\Feature\Http\Controllers\Resource\Playground</package>
      <className>Playground\Test\Feature\Http\Controllers\Resource\Playground\EditJsonTrait</className>
      <methodName>getGetFqdn</methodName>
      <methodSignature>getGetFqdn(): string</methodSignature>
      <fullMethod>getGetFqdn(): string</fullMethod>
      <crap>0</crap>
      <complexity>0</complexity>
      <coverage>0</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package>Playground\Test\Feature\Http\Controllers\Resource\Playground</package>
      <className>Playground\Test\Feature\Http\Controllers\Resource\Playground\EditJsonTrait</className>
      <methodName>getPackageInfo</methodName>
      <methodSignature>getPackageInfo(): array</methodSignature>
      <fullMethod>getPackageInfo(): array</fullMethod>
      <crap>0</crap>
      <complexity>0</complexity>
      <coverage>0</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package>Playground\Test\Feature\Http\Controllers\Resource\Playground</package>
      <className>Playground\Test\Feature\Http\Controllers\Resource\Playground\EditJsonTrait</className>
      <methodName>getStructureEdit</methodName>
      <methodSignature>getStructureEdit(): array</methodSignature>
      <fullMethod>getStructureEdit(): array</fullMethod>
      <crap>0</crap>
      <complexity>0</complexity>
      <coverage>0</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package>Playground\Test\Feature\Http\Controllers\Resource\Playground</package>
      <className>Playground\Test\Feature\Http\Controllers\Resource\Playground\EditJsonTrait</className>
      <methodName>test_json_guest_cannot_get_edit_info</methodName>
      <methodSignature>test_json_guest_cannot_get_edit_info()</methodSignature>
      <fullMethod>test_json_guest_cannot_get_edit_info()</fullMethod>
      <crap>2</crap>
      <complexity>1</complexity>
      <coverage>0</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package>Playground\Test\Feature\Http\Controllers\Resource\Playground</package>
      <className>Playground\Test\Feature\Http\Controllers\Resource\Playground\EditJsonTrait</className>
      <methodName>test_json_admin_can_get_edit_info</methodName>
      <methodSignature>test_json_admin_can_get_edit_info()</methodSignature>
      <fullMethod>test_json_admin_can_get_edit_info()</fullMethod>
      <crap>2</crap>
      <complexity>1</complexity>
      <coverage>0</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package>Playground\Test\Feature\Http\Controllers\Resource\Playground</package>
      <className>Playground\Test\Feature\Http\Controllers\Resource\Playground\EditJsonTrait</className>
      <methodName>test_json_edit_as_admin_and_fail_validation_with_invalid_parameter</methodName>
      <methodSignature>test_json_edit_as_admin_and_fail_validation_with_invalid_parameter()</methodSignature>
      <fullMethod>test_json_edit_as_admin_and_fail_validation_with_invalid_parameter()</fullMethod>
      <crap>2</crap>
      <complexity>1</complexity>
      <coverage>0</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package>Playground\Test\Feature\Http\Controllers\Resource\Playground</package>
      <className>Playground\Test\Feature\Http\Controllers\Resource\Playground\EditTrait</className>
      <methodName>getGetFqdn</methodName>
      <methodSignature>getGetFqdn(): string</methodSignature>
      <fullMethod>getGetFqdn(): string</fullMethod>
      <crap>0</crap>
      <complexity>0</complexity>
      <coverage>0</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package>Playground\Test\Feature\Http\Controllers\Resource\Playground</package>
      <className>Playground\Test\Feature\Http\Controllers\Resource\Playground\EditTrait</className>
      <methodName>getPackageInfo</methodName>
      <methodSignature>getPackageInfo(): array</methodSignature>
      <fullMethod>getPackageInfo(): array</fullMethod>
      <crap>0</crap>
      <complexity>0</complexity>
      <coverage>0</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package>Playground\Test\Feature\Http\Controllers\Resource\Playground</package>
      <className>Playground\Test\Feature\Http\Controllers\Resource\Playground\EditTrait</className>
      <methodName>test_guest_cannot_render_edit_view</methodName>
      <methodSignature>test_guest_cannot_render_edit_view()</methodSignature>
      <fullMethod>test_guest_cannot_render_edit_view()</fullMethod>
      <crap>2</crap>
      <complexity>1</complexity>
      <coverage>0</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package>Playground\Test\Feature\Http\Controllers\Resource\Playground</package>
      <className>Playground\Test\Feature\Http\Controllers\Resource\Playground\EditTrait</className>
      <methodName>test_admin_can_render_edit_view</methodName>
      <methodSignature>test_admin_can_render_edit_view()</methodSignature>
      <fullMethod>test_admin_can_render_edit_view()</fullMethod>
      <crap>2</crap>
      <complexity>1</complexity>
      <coverage>0</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package>Playground\Test\Feature\Http\Controllers\Resource\Playground</package>
      <className>Playground\Test\Feature\Http\Controllers\Resource\Playground\EditTrait</className>
      <methodName>test_admin_can_render_edit_view_with_return_url</methodName>
      <methodSignature>test_admin_can_render_edit_view_with_return_url()</methodSignature>
      <fullMethod>test_admin_can_render_edit_view_with_return_url()</fullMethod>
      <crap>2</crap>
      <complexity>1</complexity>
      <coverage>0</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package>Playground\Test\Feature\Http\Controllers\Resource\Playground</package>
      <className>Playground\Test\Feature\Http\Controllers\Resource\Playground\EditTrait</className>
      <methodName>test_edit_view_as_admin_with_invalid_parameter_and_fail_validation_and_redirect</methodName>
      <methodSignature>test_edit_view_as_admin_with_invalid_parameter_and_fail_validation_and_redirect()</methodSignature>
      <fullMethod>test_edit_view_as_admin_with_invalid_parameter_and_fail_validation_and_redirect()</fullMethod>
      <crap>2</crap>
      <complexity>1</complexity>
      <coverage>0</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package>Playground\Test\Feature\Http\Controllers\Resource\Playground</package>
      <className>Playground\Test\Feature\Http\Controllers\Resource\Playground\IndexJsonTrait</className>
      <methodName>getGetFqdn</methodName>
      <methodSignature>getGetFqdn(): string</methodSignature>
      <fullMethod>getGetFqdn(): string</fullMethod>
      <crap>0</crap>
      <complexity>0</complexity>
      <coverage>0</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package>Playground\Test\Feature\Http\Controllers\Resource\Playground</package>
      <className>Playground\Test\Feature\Http\Controllers\Resource\Playground\IndexJsonTrait</className>
      <methodName>getPackageInfo</methodName>
      <methodSignature>getPackageInfo(): array</methodSignature>
      <fullMethod>getPackageInfo(): array</fullMethod>
      <crap>0</crap>
      <complexity>0</complexity>
      <coverage>0</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package>Playground\Test\Feature\Http\Controllers\Resource\Playground</package>
      <className>Playground\Test\Feature\Http\Controllers\Resource\Playground\IndexJsonTrait</className>
      <methodName>getStructureIndex</methodName>
      <methodSignature>getStructureIndex(): array</methodSignature>
      <fullMethod>getStructureIndex(): array</fullMethod>
      <crap>0</crap>
      <complexity>0</complexity>
      <coverage>0</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package>Playground\Test\Feature\Http\Controllers\Resource\Playground</package>
      <className>Playground\Test\Feature\Http\Controllers\Resource\Playground\IndexJsonTrait</className>
      <methodName>test_json_guest_cannot_get_index</methodName>
      <methodSignature>test_json_guest_cannot_get_index()</methodSignature>
      <fullMethod>test_json_guest_cannot_get_index()</fullMethod>
      <crap>2</crap>
      <complexity>1</complexity>
      <coverage>0</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package>Playground\Test\Feature\Http\Controllers\Resource\Playground</package>
      <className>Playground\Test\Feature\Http\Controllers\Resource\Playground\IndexJsonTrait</className>
      <methodName>test_json_admin_can_get_index</methodName>
      <methodSignature>test_json_admin_can_get_index()</methodSignature>
      <fullMethod>test_json_admin_can_get_index()</fullMethod>
      <crap>2</crap>
      <complexity>1</complexity>
      <coverage>0</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package>Playground\Test\Feature\Http\Controllers\Resource\Playground</package>
      <className>Playground\Test\Feature\Http\Controllers\Resource\Playground\IndexJsonTrait</className>
      <methodName>test_json_admin_can_get_index_with_filters</methodName>
      <methodSignature>test_json_admin_can_get_index_with_filters()</methodSignature>
      <fullMethod>test_json_admin_can_get_index_with_filters()</fullMethod>
      <crap>30</crap>
      <complexity>5</complexity>
      <coverage>0</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package>Playground\Test\Feature\Http\Controllers\Resource\Playground</package>
      <className>Playground\Test\Feature\Http\Controllers\Resource\Playground\IndexTrait</className>
      <methodName>getGetFqdn</methodName>
      <methodSignature>getGetFqdn(): string</methodSignature>
      <fullMethod>getGetFqdn(): string</fullMethod>
      <crap>0</crap>
      <complexity>0</complexity>
      <coverage>0</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package>Playground\Test\Feature\Http\Controllers\Resource\Playground</package>
      <className>Playground\Test\Feature\Http\Controllers\Resource\Playground\IndexTrait</className>
      <methodName>getPackageInfo</methodName>
      <methodSignature>getPackageInfo(): array</methodSignature>
      <fullMethod>getPackageInfo(): array</fullMethod>
      <crap>0</crap>
      <complexity>0</complexity>
      <coverage>0</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package>Playground\Test\Feature\Http\Controllers\Resource\Playground</package>
      <className>Playground\Test\Feature\Http\Controllers\Resource\Playground\IndexTrait</className>
      <methodName>test_guest_cannot_render_index_view</methodName>
      <methodSignature>test_guest_cannot_render_index_view()</methodSignature>
      <fullMethod>test_guest_cannot_render_index_view()</fullMethod>
      <crap>2</crap>
      <complexity>1</complexity>
      <coverage>0</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package>Playground\Test\Feature\Http\Controllers\Resource\Playground</package>
      <className>Playground\Test\Feature\Http\Controllers\Resource\Playground\IndexTrait</className>
      <methodName>test_admin_can_render_index_view</methodName>
      <methodSignature>test_admin_can_render_index_view()</methodSignature>
      <fullMethod>test_admin_can_render_index_view()</fullMethod>
      <crap>2</crap>
      <complexity>1</complexity>
      <coverage>0</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package>Playground\Test\Feature\Http\Controllers\Resource\Playground</package>
      <className>Playground\Test\Feature\Http\Controllers\Resource\Playground\IndexTrait</className>
      <methodName>test_admin_can_render_index_view_with_filters</methodName>
      <methodSignature>test_admin_can_render_index_view_with_filters()</methodSignature>
      <fullMethod>test_admin_can_render_index_view_with_filters()</fullMethod>
      <crap>30</crap>
      <complexity>5</complexity>
      <coverage>0</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package>Playground\Test\Feature\Http\Controllers\Resource\Playground</package>
      <className>Playground\Test\Feature\Http\Controllers\Resource\Playground\LockJsonTrait</className>
      <methodName>getGetFqdn</methodName>
      <methodSignature>getGetFqdn(): string</methodSignature>
      <fullMethod>getGetFqdn(): string</fullMethod>
      <crap>0</crap>
      <complexity>0</complexity>
      <coverage>0</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package>Playground\Test\Feature\Http\Controllers\Resource\Playground</package>
      <className>Playground\Test\Feature\Http\Controllers\Resource\Playground\LockJsonTrait</className>
      <methodName>getPackageInfo</methodName>
      <methodSignature>getPackageInfo(): array</methodSignature>
      <fullMethod>getPackageInfo(): array</fullMethod>
      <crap>0</crap>
      <complexity>0</complexity>
      <coverage>0</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package>Playground\Test\Feature\Http\Controllers\Resource\Playground</package>
      <className>Playground\Test\Feature\Http\Controllers\Resource\Playground\LockJsonTrait</className>
      <methodName>getStructureData</methodName>
      <methodSignature>getStructureData(): array</methodSignature>
      <fullMethod>getStructureData(): array</fullMethod>
      <crap>0</crap>
      <complexity>0</complexity>
      <coverage>0</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package>Playground\Test\Feature\Http\Controllers\Resource\Playground</package>
      <className>Playground\Test\Feature\Http\Controllers\Resource\Playground\LockJsonTrait</className>
      <methodName>test_json_guest_cannot_lock</methodName>
      <methodSignature>test_json_guest_cannot_lock()</methodSignature>
      <fullMethod>test_json_guest_cannot_lock()</fullMethod>
      <crap>2</crap>
      <complexity>1</complexity>
      <coverage>0</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package>Playground\Test\Feature\Http\Controllers\Resource\Playground</package>
      <className>Playground\Test\Feature\Http\Controllers\Resource\Playground\LockJsonTrait</className>
      <methodName>test_json_lock_as_admin_and_succeed</methodName>
      <methodSignature>test_json_lock_as_admin_and_succeed()</methodSignature>
      <fullMethod>test_json_lock_as_admin_and_succeed()</fullMethod>
      <crap>2</crap>
      <complexity>1</complexity>
      <coverage>0</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package>Playground\Test\Feature\Http\Controllers\Resource\Playground</package>
      <className>Playground\Test\Feature\Http\Controllers\Resource\Playground\LockJsonTrait</className>
      <methodName>test_json_lock_as_admin_and_succeed_with_no_redirect</methodName>
      <methodSignature>test_json_lock_as_admin_and_succeed_with_no_redirect()</methodSignature>
      <fullMethod>test_json_lock_as_admin_and_succeed_with_no_redirect()</fullMethod>
      <crap>2</crap>
      <complexity>1</complexity>
      <coverage>0</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package>Playground\Test\Feature\Http\Controllers\Resource\Playground</package>
      <className>Playground\Test\Feature\Http\Controllers\Resource\Playground\LockJsonTrait</className>
      <methodName>test_json_lock_as_user_and_get_denied</methodName>
      <methodSignature>test_json_lock_as_user_and_get_denied()</methodSignature>
      <fullMethod>test_json_lock_as_user_and_get_denied()</fullMethod>
      <crap>2</crap>
      <complexity>1</complexity>
      <coverage>0</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package>Playground\Test\Feature\Http\Controllers\Resource\Playground</package>
      <className>Playground\Test\Feature\Http\Controllers\Resource\Playground\LockTrait</className>
      <methodName>getGetFqdn</methodName>
      <methodSignature>getGetFqdn(): string</methodSignature>
      <fullMethod>getGetFqdn(): string</fullMethod>
      <crap>0</crap>
      <complexity>0</complexity>
      <coverage>0</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package>Playground\Test\Feature\Http\Controllers\Resource\Playground</package>
      <className>Playground\Test\Feature\Http\Controllers\Resource\Playground\LockTrait</className>
      <methodName>getPackageInfo</methodName>
      <methodSignature>getPackageInfo(): array</methodSignature>
      <fullMethod>getPackageInfo(): array</fullMethod>
      <crap>0</crap>
      <complexity>0</complexity>
      <coverage>0</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package>Playground\Test\Feature\Http\Controllers\Resource\Playground</package>
      <className>Playground\Test\Feature\Http\Controllers\Resource\Playground\LockTrait</className>
      <methodName>test_guest_cannot_lock</methodName>
      <methodSignature>test_guest_cannot_lock()</methodSignature>
      <fullMethod>test_guest_cannot_lock()</fullMethod>
      <crap>2</crap>
      <complexity>1</complexity>
      <coverage>0</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package>Playground\Test\Feature\Http\Controllers\Resource\Playground</package>
      <className>Playground\Test\Feature\Http\Controllers\Resource\Playground\LockTrait</className>
      <methodName>test_lock_as_admin_and_succeed</methodName>
      <methodSignature>test_lock_as_admin_and_succeed()</methodSignature>
      <fullMethod>test_lock_as_admin_and_succeed()</fullMethod>
      <crap>2</crap>
      <complexity>1</complexity>
      <coverage>0</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package>Playground\Test\Feature\Http\Controllers\Resource\Playground</package>
      <className>Playground\Test\Feature\Http\Controllers\Resource\Playground\LockTrait</className>
      <methodName>test_lock_as_admin_and_succeed_with_redirect_to_index_with_sorted_by_locked_desc</methodName>
      <methodSignature>test_lock_as_admin_and_succeed_with_redirect_to_index_with_sorted_by_locked_desc()</methodSignature>
      <fullMethod>test_lock_as_admin_and_succeed_with_redirect_to_index_with_sorted_by_locked_desc()</fullMethod>
      <crap>2</crap>
      <complexity>1</complexity>
      <coverage>0</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package>Playground\Test\Feature\Http\Controllers\Resource\Playground</package>
      <className>Playground\Test\Feature\Http\Controllers\Resource\Playground\LockTrait</className>
      <methodName>test_lock_as_user_and_get_denied</methodName>
      <methodSignature>test_lock_as_user_and_get_denied()</methodSignature>
      <fullMethod>test_lock_as_user_and_get_denied()</fullMethod>
      <crap>2</crap>
      <complexity>1</complexity>
      <coverage>0</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package>Playground\Test\Feature\Http\Controllers\Resource\Playground</package>
      <className>Playground\Test\Feature\Http\Controllers\Resource\Playground\RestoreJsonTrait</className>
      <methodName>getGetFqdn</methodName>
      <methodSignature>getGetFqdn(): string</methodSignature>
      <fullMethod>getGetFqdn(): string</fullMethod>
      <crap>0</crap>
      <complexity>0</complexity>
      <coverage>0</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package>Playground\Test\Feature\Http\Controllers\Resource\Playground</package>
      <className>Playground\Test\Feature\Http\Controllers\Resource\Playground\RestoreJsonTrait</className>
      <methodName>getStructureData</methodName>
      <methodSignature>getStructureData(): array</methodSignature>
      <fullMethod>getStructureData(): array</fullMethod>
      <crap>0</crap>
      <complexity>0</complexity>
      <coverage>0</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package>Playground\Test\Feature\Http\Controllers\Resource\Playground</package>
      <className>Playground\Test\Feature\Http\Controllers\Resource\Playground\RestoreJsonTrait</className>
      <methodName>test_json_guest_cannot_restore</methodName>
      <methodSignature>test_json_guest_cannot_restore()</methodSignature>
      <fullMethod>test_json_guest_cannot_restore()</fullMethod>
      <crap>2</crap>
      <complexity>1</complexity>
      <coverage>0</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package>Playground\Test\Feature\Http\Controllers\Resource\Playground</package>
      <className>Playground\Test\Feature\Http\Controllers\Resource\Playground\RestoreJsonTrait</className>
      <methodName>test_json_restore_as_admin_and_succeed</methodName>
      <methodSignature>test_json_restore_as_admin_and_succeed()</methodSignature>
      <fullMethod>test_json_restore_as_admin_and_succeed()</fullMethod>
      <crap>2</crap>
      <complexity>1</complexity>
      <coverage>0</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package>Playground\Test\Feature\Http\Controllers\Resource\Playground</package>
      <className>Playground\Test\Feature\Http\Controllers\Resource\Playground\RestoreJsonTrait</className>
      <methodName>test_json_restore_as_admin_and_succeed_with_no_redirect</methodName>
      <methodSignature>test_json_restore_as_admin_and_succeed_with_no_redirect()</methodSignature>
      <fullMethod>test_json_restore_as_admin_and_succeed_with_no_redirect()</fullMethod>
      <crap>2</crap>
      <complexity>1</complexity>
      <coverage>0</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package>Playground\Test\Feature\Http\Controllers\Resource\Playground</package>
      <className>Playground\Test\Feature\Http\Controllers\Resource\Playground\RestoreJsonTrait</className>
      <methodName>test_json_restore_as_user_and_get_denied</methodName>
      <methodSignature>test_json_restore_as_user_and_get_denied()</methodSignature>
      <fullMethod>test_json_restore_as_user_and_get_denied()</fullMethod>
      <crap>2</crap>
      <complexity>1</complexity>
      <coverage>0</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package>Playground\Test\Feature\Http\Controllers\Resource\Playground</package>
      <className>Playground\Test\Feature\Http\Controllers\Resource\Playground\RestoreRevisionJsonTrait</className>
      <methodName>getGetFqdn</methodName>
      <methodSignature>getGetFqdn(): string</methodSignature>
      <fullMethod>getGetFqdn(): string</fullMethod>
      <crap>0</crap>
      <complexity>0</complexity>
      <coverage>0</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package>Playground\Test\Feature\Http\Controllers\Resource\Playground</package>
      <className>Playground\Test\Feature\Http\Controllers\Resource\Playground\RestoreRevisionJsonTrait</className>
      <methodName>getGetFqdnRevision</methodName>
      <methodSignature>getGetFqdnRevision(): string</methodSignature>
      <fullMethod>getGetFqdnRevision(): string</fullMethod>
      <crap>0</crap>
      <complexity>0</complexity>
      <coverage>0</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package>Playground\Test\Feature\Http\Controllers\Resource\Playground</package>
      <className>Playground\Test\Feature\Http\Controllers\Resource\Playground\RestoreRevisionJsonTrait</className>
      <methodName>getPackageInfo</methodName>
      <methodSignature>getPackageInfo(): array</methodSignature>
      <fullMethod>getPackageInfo(): array</fullMethod>
      <crap>0</crap>
      <complexity>0</complexity>
      <coverage>0</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package>Playground\Test\Feature\Http\Controllers\Resource\Playground</package>
      <className>Playground\Test\Feature\Http\Controllers\Resource\Playground\RestoreRevisionJsonTrait</className>
      <methodName>getRevisionId</methodName>
      <methodSignature>getRevisionId(): string</methodSignature>
      <fullMethod>getRevisionId(): string</fullMethod>
      <crap>0</crap>
      <complexity>0</complexity>
      <coverage>0</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package>Playground\Test\Feature\Http\Controllers\Resource\Playground</package>
      <className>Playground\Test\Feature\Http\Controllers\Resource\Playground\RestoreRevisionJsonTrait</className>
      <methodName>getRevisionRouteParameter</methodName>
      <methodSignature>getRevisionRouteParameter(): string</methodSignature>
      <fullMethod>getRevisionRouteParameter(): string</fullMethod>
      <crap>0</crap>
      <complexity>0</complexity>
      <coverage>0</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package>Playground\Test\Feature\Http\Controllers\Resource\Playground</package>
      <className>Playground\Test\Feature\Http\Controllers\Resource\Playground\RestoreRevisionJsonTrait</className>
      <methodName>getStructureData</methodName>
      <methodSignature>getStructureData(): array</methodSignature>
      <fullMethod>getStructureData(): array</fullMethod>
      <crap>0</crap>
      <complexity>0</complexity>
      <coverage>0</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package>Playground\Test\Feature\Http\Controllers\Resource\Playground</package>
      <className>Playground\Test\Feature\Http\Controllers\Resource\Playground\RestoreRevisionJsonTrait</className>
      <methodName>test_json_guest_cannot_restore_revision</methodName>
      <methodSignature>test_json_guest_cannot_restore_revision()</methodSignature>
      <fullMethod>test_json_guest_cannot_restore_revision()</fullMethod>
      <crap>2</crap>
      <complexity>1</complexity>
      <coverage>0</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package>Playground\Test\Feature\Http\Controllers\Resource\Playground</package>
      <className>Playground\Test\Feature\Http\Controllers\Resource\Playground\RestoreRevisionJsonTrait</className>
      <methodName>test_json_restore_revision_as_admin_and_succeed</methodName>
      <methodSignature>test_json_restore_revision_as_admin_and_succeed()</methodSignature>
      <fullMethod>test_json_restore_revision_as_admin_and_succeed()</fullMethod>
      <crap>2</crap>
      <complexity>1</complexity>
      <coverage>0</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package>Playground\Test\Feature\Http\Controllers\Resource\Playground</package>
      <className>Playground\Test\Feature\Http\Controllers\Resource\Playground\RestoreRevisionJsonTrait</className>
      <methodName>test_json_restore_revision_as_admin_and_succeed_without_redirect</methodName>
      <methodSignature>test_json_restore_revision_as_admin_and_succeed_without_redirect()</methodSignature>
      <fullMethod>test_json_restore_revision_as_admin_and_succeed_without_redirect()</fullMethod>
      <crap>2</crap>
      <complexity>1</complexity>
      <coverage>0</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package>Playground\Test\Feature\Http\Controllers\Resource\Playground</package>
      <className>Playground\Test\Feature\Http\Controllers\Resource\Playground\RestoreRevisionJsonTrait</className>
      <methodName>test_json_restore_revision_as_user_and_get_denied</methodName>
      <methodSignature>test_json_restore_revision_as_user_and_get_denied()</methodSignature>
      <fullMethod>test_json_restore_revision_as_user_and_get_denied()</fullMethod>
      <crap>2</crap>
      <complexity>1</complexity>
      <coverage>0</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package>Playground\Test\Feature\Http\Controllers\Resource\Playground</package>
      <className>Playground\Test\Feature\Http\Controllers\Resource\Playground\RestoreRevisionTrait</className>
      <methodName>getGetFqdn</methodName>
      <methodSignature>getGetFqdn(): string</methodSignature>
      <fullMethod>getGetFqdn(): string</fullMethod>
      <crap>0</crap>
      <complexity>0</complexity>
      <coverage>0</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package>Playground\Test\Feature\Http\Controllers\Resource\Playground</package>
      <className>Playground\Test\Feature\Http\Controllers\Resource\Playground\RestoreRevisionTrait</className>
      <methodName>getGetFqdnRevision</methodName>
      <methodSignature>getGetFqdnRevision(): string</methodSignature>
      <fullMethod>getGetFqdnRevision(): string</fullMethod>
      <crap>0</crap>
      <complexity>0</complexity>
      <coverage>0</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package>Playground\Test\Feature\Http\Controllers\Resource\Playground</package>
      <className>Playground\Test\Feature\Http\Controllers\Resource\Playground\RestoreRevisionTrait</className>
      <methodName>getPackageInfo</methodName>
      <methodSignature>getPackageInfo(): array</methodSignature>
      <fullMethod>getPackageInfo(): array</fullMethod>
      <crap>0</crap>
      <complexity>0</complexity>
      <coverage>0</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package>Playground\Test\Feature\Http\Controllers\Resource\Playground</package>
      <className>Playground\Test\Feature\Http\Controllers\Resource\Playground\RestoreRevisionTrait</className>
      <methodName>getRevisionId</methodName>
      <methodSignature>getRevisionId(): string</methodSignature>
      <fullMethod>getRevisionId(): string</fullMethod>
      <crap>0</crap>
      <complexity>0</complexity>
      <coverage>0</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package>Playground\Test\Feature\Http\Controllers\Resource\Playground</package>
      <className>Playground\Test\Feature\Http\Controllers\Resource\Playground\RestoreRevisionTrait</className>
      <methodName>getRevisionRouteParameter</methodName>
      <methodSignature>getRevisionRouteParameter(): string</methodSignature>
      <fullMethod>getRevisionRouteParameter(): string</fullMethod>
      <crap>0</crap>
      <complexity>0</complexity>
      <coverage>0</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package>Playground\Test\Feature\Http\Controllers\Resource\Playground</package>
      <className>Playground\Test\Feature\Http\Controllers\Resource\Playground\RestoreRevisionTrait</className>
      <methodName>test_guest_cannot_restore_revision</methodName>
      <methodSignature>test_guest_cannot_restore_revision()</methodSignature>
      <fullMethod>test_guest_cannot_restore_revision()</fullMethod>
      <crap>2</crap>
      <complexity>1</complexity>
      <coverage>0</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package>Playground\Test\Feature\Http\Controllers\Resource\Playground</package>
      <className>Playground\Test\Feature\Http\Controllers\Resource\Playground\RestoreRevisionTrait</className>
      <methodName>test_restore_revision_as_admin_and_succeed</methodName>
      <methodSignature>test_restore_revision_as_admin_and_succeed()</methodSignature>
      <fullMethod>test_restore_revision_as_admin_and_succeed()</fullMethod>
      <crap>2</crap>
      <complexity>1</complexity>
      <coverage>0</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package>Playground\Test\Feature\Http\Controllers\Resource\Playground</package>
      <className>Playground\Test\Feature\Http\Controllers\Resource\Playground\RestoreRevisionTrait</className>
      <methodName>test_restore_revision_as_admin_and_succeed_with_redirect_to_index_with_only_trash</methodName>
      <methodSignature>test_restore_revision_as_admin_and_succeed_with_redirect_to_index_with_only_trash()</methodSignature>
      <fullMethod>test_restore_revision_as_admin_and_succeed_with_redirect_to_index_with_only_trash()</fullMethod>
      <crap>2</crap>
      <complexity>1</complexity>
      <coverage>0</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package>Playground\Test\Feature\Http\Controllers\Resource\Playground</package>
      <className>Playground\Test\Feature\Http\Controllers\Resource\Playground\RestoreRevisionTrait</className>
      <methodName>test_restore_revision_as_user_and_get_denied</methodName>
      <methodSignature>test_restore_revision_as_user_and_get_denied()</methodSignature>
      <fullMethod>test_restore_revision_as_user_and_get_denied()</fullMethod>
      <crap>2</crap>
      <complexity>1</complexity>
      <coverage>0</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package>Playground\Test\Feature\Http\Controllers\Resource\Playground</package>
      <className>Playground\Test\Feature\Http\Controllers\Resource\Playground\RestoreTrait</className>
      <methodName>getGetFqdn</methodName>
      <methodSignature>getGetFqdn(): string</methodSignature>
      <fullMethod>getGetFqdn(): string</fullMethod>
      <crap>0</crap>
      <complexity>0</complexity>
      <coverage>0</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package>Playground\Test\Feature\Http\Controllers\Resource\Playground</package>
      <className>Playground\Test\Feature\Http\Controllers\Resource\Playground\RestoreTrait</className>
      <methodName>getPackageInfo</methodName>
      <methodSignature>getPackageInfo(): array</methodSignature>
      <fullMethod>getPackageInfo(): array</fullMethod>
      <crap>0</crap>
      <complexity>0</complexity>
      <coverage>0</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package>Playground\Test\Feature\Http\Controllers\Resource\Playground</package>
      <className>Playground\Test\Feature\Http\Controllers\Resource\Playground\RestoreTrait</className>
      <methodName>test_guest_cannot_restore</methodName>
      <methodSignature>test_guest_cannot_restore()</methodSignature>
      <fullMethod>test_guest_cannot_restore()</fullMethod>
      <crap>2</crap>
      <complexity>1</complexity>
      <coverage>0</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package>Playground\Test\Feature\Http\Controllers\Resource\Playground</package>
      <className>Playground\Test\Feature\Http\Controllers\Resource\Playground\RestoreTrait</className>
      <methodName>test_restore_as_admin_and_succeed</methodName>
      <methodSignature>test_restore_as_admin_and_succeed()</methodSignature>
      <fullMethod>test_restore_as_admin_and_succeed()</fullMethod>
      <crap>2</crap>
      <complexity>1</complexity>
      <coverage>0</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package>Playground\Test\Feature\Http\Controllers\Resource\Playground</package>
      <className>Playground\Test\Feature\Http\Controllers\Resource\Playground\RestoreTrait</className>
      <methodName>test_restore_as_admin_and_succeed_with_redirect_to_index_with_only_trash</methodName>
      <methodSignature>test_restore_as_admin_and_succeed_with_redirect_to_index_with_only_trash()</methodSignature>
      <fullMethod>test_restore_as_admin_and_succeed_with_redirect_to_index_with_only_trash()</fullMethod>
      <crap>2</crap>
      <complexity>1</complexity>
      <coverage>0</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package>Playground\Test\Feature\Http\Controllers\Resource\Playground</package>
      <className>Playground\Test\Feature\Http\Controllers\Resource\Playground\RestoreTrait</className>
      <methodName>test_restore_as_user_and_get_denied</methodName>
      <methodSignature>test_restore_as_user_and_get_denied()</methodSignature>
      <fullMethod>test_restore_as_user_and_get_denied()</fullMethod>
      <crap>2</crap>
      <complexity>1</complexity>
      <coverage>0</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package>Playground\Test\Feature\Http\Controllers\Resource\Playground</package>
      <className>Playground\Test\Feature\Http\Controllers\Resource\Playground\RevisionJsonTrait</className>
      <methodName>getGetFqdn</methodName>
      <methodSignature>getGetFqdn(): string</methodSignature>
      <fullMethod>getGetFqdn(): string</fullMethod>
      <crap>0</crap>
      <complexity>0</complexity>
      <coverage>0</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package>Playground\Test\Feature\Http\Controllers\Resource\Playground</package>
      <className>Playground\Test\Feature\Http\Controllers\Resource\Playground\RevisionJsonTrait</className>
      <methodName>getGetFqdnRevision</methodName>
      <methodSignature>getGetFqdnRevision(): string</methodSignature>
      <fullMethod>getGetFqdnRevision(): string</fullMethod>
      <crap>0</crap>
      <complexity>0</complexity>
      <coverage>0</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package>Playground\Test\Feature\Http\Controllers\Resource\Playground</package>
      <className>Playground\Test\Feature\Http\Controllers\Resource\Playground\RevisionJsonTrait</className>
      <methodName>getPackageInfo</methodName>
      <methodSignature>getPackageInfo(): array</methodSignature>
      <fullMethod>getPackageInfo(): array</fullMethod>
      <crap>0</crap>
      <complexity>0</complexity>
      <coverage>0</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package>Playground\Test\Feature\Http\Controllers\Resource\Playground</package>
      <className>Playground\Test\Feature\Http\Controllers\Resource\Playground\RevisionJsonTrait</className>
      <methodName>getRevisionId</methodName>
      <methodSignature>getRevisionId(): string</methodSignature>
      <fullMethod>getRevisionId(): string</fullMethod>
      <crap>0</crap>
      <complexity>0</complexity>
      <coverage>0</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package>Playground\Test\Feature\Http\Controllers\Resource\Playground</package>
      <className>Playground\Test\Feature\Http\Controllers\Resource\Playground\RevisionJsonTrait</className>
      <methodName>getRevisionRouteParameter</methodName>
      <methodSignature>getRevisionRouteParameter(): string</methodSignature>
      <fullMethod>getRevisionRouteParameter(): string</fullMethod>
      <crap>0</crap>
      <complexity>0</complexity>
      <coverage>0</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package>Playground\Test\Feature\Http\Controllers\Resource\Playground</package>
      <className>Playground\Test\Feature\Http\Controllers\Resource\Playground\RevisionJsonTrait</className>
      <methodName>test_json_guest_cannot_render_revision_view</methodName>
      <methodSignature>test_json_guest_cannot_render_revision_view()</methodSignature>
      <fullMethod>test_json_guest_cannot_render_revision_view()</fullMethod>
      <crap>2</crap>
      <complexity>1</complexity>
      <coverage>0</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package>Playground\Test\Feature\Http\Controllers\Resource\Playground</package>
      <className>Playground\Test\Feature\Http\Controllers\Resource\Playground\RevisionJsonTrait</className>
      <methodName>test_json_admin_can_get_revision_info</methodName>
      <methodSignature>test_json_admin_can_get_revision_info()</methodSignature>
      <fullMethod>test_json_admin_can_get_revision_info()</fullMethod>
      <crap>2</crap>
      <complexity>1</complexity>
      <coverage>0</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package>Playground\Test\Feature\Http\Controllers\Resource\Playground</package>
      <className>Playground\Test\Feature\Http\Controllers\Resource\Playground\RevisionTrait</className>
      <methodName>getGetFqdn</methodName>
      <methodSignature>getGetFqdn(): string</methodSignature>
      <fullMethod>getGetFqdn(): string</fullMethod>
      <crap>0</crap>
      <complexity>0</complexity>
      <coverage>0</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package>Playground\Test\Feature\Http\Controllers\Resource\Playground</package>
      <className>Playground\Test\Feature\Http\Controllers\Resource\Playground\RevisionTrait</className>
      <methodName>getGetFqdnRevision</methodName>
      <methodSignature>getGetFqdnRevision(): string</methodSignature>
      <fullMethod>getGetFqdnRevision(): string</fullMethod>
      <crap>0</crap>
      <complexity>0</complexity>
      <coverage>0</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package>Playground\Test\Feature\Http\Controllers\Resource\Playground</package>
      <className>Playground\Test\Feature\Http\Controllers\Resource\Playground\RevisionTrait</className>
      <methodName>getPackageInfo</methodName>
      <methodSignature>getPackageInfo(): array</methodSignature>
      <fullMethod>getPackageInfo(): array</fullMethod>
      <crap>0</crap>
      <complexity>0</complexity>
      <coverage>0</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package>Playground\Test\Feature\Http\Controllers\Resource\Playground</package>
      <className>Playground\Test\Feature\Http\Controllers\Resource\Playground\RevisionTrait</className>
      <methodName>getRevisionId</methodName>
      <methodSignature>getRevisionId(): string</methodSignature>
      <fullMethod>getRevisionId(): string</fullMethod>
      <crap>0</crap>
      <complexity>0</complexity>
      <coverage>0</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package>Playground\Test\Feature\Http\Controllers\Resource\Playground</package>
      <className>Playground\Test\Feature\Http\Controllers\Resource\Playground\RevisionTrait</className>
      <methodName>getRevisionRouteParameter</methodName>
      <methodSignature>getRevisionRouteParameter(): string</methodSignature>
      <fullMethod>getRevisionRouteParameter(): string</fullMethod>
      <crap>0</crap>
      <complexity>0</complexity>
      <coverage>0</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package>Playground\Test\Feature\Http\Controllers\Resource\Playground</package>
      <className>Playground\Test\Feature\Http\Controllers\Resource\Playground\RevisionTrait</className>
      <methodName>test_guest_cannot_render_revision_view</methodName>
      <methodSignature>test_guest_cannot_render_revision_view()</methodSignature>
      <fullMethod>test_guest_cannot_render_revision_view()</fullMethod>
      <crap>2</crap>
      <complexity>1</complexity>
      <coverage>0</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package>Playground\Test\Feature\Http\Controllers\Resource\Playground</package>
      <className>Playground\Test\Feature\Http\Controllers\Resource\Playground\RevisionTrait</className>
      <methodName>test_revision_view_rendered_by_admin</methodName>
      <methodSignature>test_revision_view_rendered_by_admin()</methodSignature>
      <fullMethod>test_revision_view_rendered_by_admin()</fullMethod>
      <crap>2</crap>
      <complexity>1</complexity>
      <coverage>0</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package>Playground\Test\Feature\Http\Controllers\Resource\Playground</package>
      <className>Playground\Test\Feature\Http\Controllers\Resource\Playground\RevisionsJsonTrait</className>
      <methodName>getGetFqdn</methodName>
      <methodSignature>getGetFqdn(): string</methodSignature>
      <fullMethod>getGetFqdn(): string</fullMethod>
      <crap>0</crap>
      <complexity>0</complexity>
      <coverage>0</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package>Playground\Test\Feature\Http\Controllers\Resource\Playground</package>
      <className>Playground\Test\Feature\Http\Controllers\Resource\Playground\RevisionsJsonTrait</className>
      <methodName>getGetFqdnRevision</methodName>
      <methodSignature>getGetFqdnRevision(): string</methodSignature>
      <fullMethod>getGetFqdnRevision(): string</fullMethod>
      <crap>0</crap>
      <complexity>0</complexity>
      <coverage>0</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package>Playground\Test\Feature\Http\Controllers\Resource\Playground</package>
      <className>Playground\Test\Feature\Http\Controllers\Resource\Playground\RevisionsJsonTrait</className>
      <methodName>getPackageInfo</methodName>
      <methodSignature>getPackageInfo(): array</methodSignature>
      <fullMethod>getPackageInfo(): array</fullMethod>
      <crap>0</crap>
      <complexity>0</complexity>
      <coverage>0</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package>Playground\Test\Feature\Http\Controllers\Resource\Playground</package>
      <className>Playground\Test\Feature\Http\Controllers\Resource\Playground\RevisionsJsonTrait</className>
      <methodName>test_json_guest_cannot_get_revisions</methodName>
      <methodSignature>test_json_guest_cannot_get_revisions()</methodSignature>
      <fullMethod>test_json_guest_cannot_get_revisions()</fullMethod>
      <crap>2</crap>
      <complexity>1</complexity>
      <coverage>0</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package>Playground\Test\Feature\Http\Controllers\Resource\Playground</package>
      <className>Playground\Test\Feature\Http\Controllers\Resource\Playground\RevisionsJsonTrait</className>
      <methodName>test_json_admin_can_get_revisions</methodName>
      <methodSignature>test_json_admin_can_get_revisions()</methodSignature>
      <fullMethod>test_json_admin_can_get_revisions()</fullMethod>
      <crap>2</crap>
      <complexity>1</complexity>
      <coverage>0</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package>Playground\Test\Feature\Http\Controllers\Resource\Playground</package>
      <className>Playground\Test\Feature\Http\Controllers\Resource\Playground\RevisionsJsonTrait</className>
      <methodName>test_json_admin_can_get_revisions_with_filters</methodName>
      <methodSignature>test_json_admin_can_get_revisions_with_filters()</methodSignature>
      <fullMethod>test_json_admin_can_get_revisions_with_filters()</fullMethod>
      <crap>2</crap>
      <complexity>1</complexity>
      <coverage>0</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package>Playground\Test\Feature\Http\Controllers\Resource\Playground</package>
      <className>Playground\Test\Feature\Http\Controllers\Resource\Playground\RevisionsTrait</className>
      <methodName>getGetFqdn</methodName>
      <methodSignature>getGetFqdn(): string</methodSignature>
      <fullMethod>getGetFqdn(): string</fullMethod>
      <crap>0</crap>
      <complexity>0</complexity>
      <coverage>0</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package>Playground\Test\Feature\Http\Controllers\Resource\Playground</package>
      <className>Playground\Test\Feature\Http\Controllers\Resource\Playground\RevisionsTrait</className>
      <methodName>getGetFqdnRevision</methodName>
      <methodSignature>getGetFqdnRevision(): string</methodSignature>
      <fullMethod>getGetFqdnRevision(): string</fullMethod>
      <crap>0</crap>
      <complexity>0</complexity>
      <coverage>0</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package>Playground\Test\Feature\Http\Controllers\Resource\Playground</package>
      <className>Playground\Test\Feature\Http\Controllers\Resource\Playground\RevisionsTrait</className>
      <methodName>getPackageInfo</methodName>
      <methodSignature>getPackageInfo(): array</methodSignature>
      <fullMethod>getPackageInfo(): array</fullMethod>
      <crap>0</crap>
      <complexity>0</complexity>
      <coverage>0</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package>Playground\Test\Feature\Http\Controllers\Resource\Playground</package>
      <className>Playground\Test\Feature\Http\Controllers\Resource\Playground\RevisionsTrait</className>
      <methodName>test_guest_cannot_render_revisions_view</methodName>
      <methodSignature>test_guest_cannot_render_revisions_view()</methodSignature>
      <fullMethod>test_guest_cannot_render_revisions_view()</fullMethod>
      <crap>2</crap>
      <complexity>1</complexity>
      <coverage>0</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package>Playground\Test\Feature\Http\Controllers\Resource\Playground</package>
      <className>Playground\Test\Feature\Http\Controllers\Resource\Playground\RevisionsTrait</className>
      <methodName>test_admin_can_render_revisions_view</methodName>
      <methodSignature>test_admin_can_render_revisions_view()</methodSignature>
      <fullMethod>test_admin_can_render_revisions_view()</fullMethod>
      <crap>2</crap>
      <complexity>1</complexity>
      <coverage>0</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package>Playground\Test\Feature\Http\Controllers\Resource\Playground</package>
      <className>Playground\Test\Feature\Http\Controllers\Resource\Playground\RevisionsTrait</className>
      <methodName>test_admin_can_render_revisions_view_with_filters</methodName>
      <methodSignature>test_admin_can_render_revisions_view_with_filters()</methodSignature>
      <fullMethod>test_admin_can_render_revisions_view_with_filters()</fullMethod>
      <crap>2</crap>
      <complexity>1</complexity>
      <coverage>0</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package>Playground\Test\Feature\Http\Controllers\Resource\Playground</package>
      <className>Playground\Test\Feature\Http\Controllers\Resource\Playground\ShowJsonTrait</className>
      <methodName>getGetFqdn</methodName>
      <methodSignature>getGetFqdn(): string</methodSignature>
      <fullMethod>getGetFqdn(): string</fullMethod>
      <crap>0</crap>
      <complexity>0</complexity>
      <coverage>0</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package>Playground\Test\Feature\Http\Controllers\Resource\Playground</package>
      <className>Playground\Test\Feature\Http\Controllers\Resource\Playground\ShowJsonTrait</className>
      <methodName>getPackageInfo</methodName>
      <methodSignature>getPackageInfo(): array</methodSignature>
      <fullMethod>getPackageInfo(): array</fullMethod>
      <crap>0</crap>
      <complexity>0</complexity>
      <coverage>0</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package>Playground\Test\Feature\Http\Controllers\Resource\Playground</package>
      <className>Playground\Test\Feature\Http\Controllers\Resource\Playground\ShowJsonTrait</className>
      <methodName>test_json_guest_cannot_see_info</methodName>
      <methodSignature>test_json_guest_cannot_see_info()</methodSignature>
      <fullMethod>test_json_guest_cannot_see_info()</fullMethod>
      <crap>2</crap>
      <complexity>1</complexity>
      <coverage>0</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package>Playground\Test\Feature\Http\Controllers\Resource\Playground</package>
      <className>Playground\Test\Feature\Http\Controllers\Resource\Playground\ShowJsonTrait</className>
      <methodName>test_json_show_info_for_admin</methodName>
      <methodSignature>test_json_show_info_for_admin()</methodSignature>
      <fullMethod>test_json_show_info_for_admin()</fullMethod>
      <crap>2</crap>
      <complexity>1</complexity>
      <coverage>0</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package>Playground\Test\Feature\Http\Controllers\Resource\Playground</package>
      <className>Playground\Test\Feature\Http\Controllers\Resource\Playground\ShowTrait</className>
      <methodName>getGetFqdn</methodName>
      <methodSignature>getGetFqdn(): string</methodSignature>
      <fullMethod>getGetFqdn(): string</fullMethod>
      <crap>0</crap>
      <complexity>0</complexity>
      <coverage>0</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package>Playground\Test\Feature\Http\Controllers\Resource\Playground</package>
      <className>Playground\Test\Feature\Http\Controllers\Resource\Playground\ShowTrait</className>
      <methodName>getPackageInfo</methodName>
      <methodSignature>getPackageInfo(): array</methodSignature>
      <fullMethod>getPackageInfo(): array</fullMethod>
      <crap>0</crap>
      <complexity>0</complexity>
      <coverage>0</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package>Playground\Test\Feature\Http\Controllers\Resource\Playground</package>
      <className>Playground\Test\Feature\Http\Controllers\Resource\Playground\ShowTrait</className>
      <methodName>test_guest_cannot_render_show_view</methodName>
      <methodSignature>test_guest_cannot_render_show_view()</methodSignature>
      <fullMethod>test_guest_cannot_render_show_view()</fullMethod>
      <crap>2</crap>
      <complexity>1</complexity>
      <coverage>0</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package>Playground\Test\Feature\Http\Controllers\Resource\Playground</package>
      <className>Playground\Test\Feature\Http\Controllers\Resource\Playground\ShowTrait</className>
      <methodName>test_show_view_rendered_by_admin</methodName>
      <methodSignature>test_show_view_rendered_by_admin()</methodSignature>
      <fullMethod>test_show_view_rendered_by_admin()</fullMethod>
      <crap>2</crap>
      <complexity>1</complexity>
      <coverage>0</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package>Playground\Test\Feature\Http\Controllers\Resource\Playground</package>
      <className>Playground\Test\Feature\Http\Controllers\Resource\Playground\StoreJsonTrait</className>
      <methodName>getGetFqdn</methodName>
      <methodSignature>getGetFqdn(): string</methodSignature>
      <fullMethod>getGetFqdn(): string</fullMethod>
      <crap>0</crap>
      <complexity>0</complexity>
      <coverage>0</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package>Playground\Test\Feature\Http\Controllers\Resource\Playground</package>
      <className>Playground\Test\Feature\Http\Controllers\Resource\Playground\StoreJsonTrait</className>
      <methodName>getStructureData</methodName>
      <methodSignature>getStructureData(): array</methodSignature>
      <fullMethod>getStructureData(): array</fullMethod>
      <crap>0</crap>
      <complexity>0</complexity>
      <coverage>0</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package>Playground\Test\Feature\Http\Controllers\Resource\Playground</package>
      <className>Playground\Test\Feature\Http\Controllers\Resource\Playground\StoreJsonTrait</className>
      <methodName>getPackageInfo</methodName>
      <methodSignature>getPackageInfo(): array</methodSignature>
      <fullMethod>getPackageInfo(): array</fullMethod>
      <crap>0</crap>
      <complexity>0</complexity>
      <coverage>0</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package>Playground\Test\Feature\Http\Controllers\Resource\Playground</package>
      <className>Playground\Test\Feature\Http\Controllers\Resource\Playground\StoreJsonTrait</className>
      <methodName>test_json_guest_cannot_store</methodName>
      <methodSignature>test_json_guest_cannot_store()</methodSignature>
      <fullMethod>test_json_guest_cannot_store()</fullMethod>
      <crap>2</crap>
      <complexity>1</complexity>
      <coverage>0</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package>Playground\Test\Feature\Http\Controllers\Resource\Playground</package>
      <className>Playground\Test\Feature\Http\Controllers\Resource\Playground\StoreJsonTrait</className>
      <methodName>test_json_store_as_admin_without_payload_and_fail_validation</methodName>
      <methodSignature>test_json_store_as_admin_without_payload_and_fail_validation()</methodSignature>
      <fullMethod>test_json_store_as_admin_without_payload_and_fail_validation()</fullMethod>
      <crap>2</crap>
      <complexity>1</complexity>
      <coverage>0</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package>Playground\Test\Feature\Http\Controllers\Resource\Playground</package>
      <className>Playground\Test\Feature\Http\Controllers\Resource\Playground\StoreJsonTrait</className>
      <methodName>test_json_store_as_admin_and_succeed</methodName>
      <methodSignature>test_json_store_as_admin_and_succeed()</methodSignature>
      <fullMethod>test_json_store_as_admin_and_succeed()</fullMethod>
      <crap>2</crap>
      <complexity>1</complexity>
      <coverage>0</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package>Playground\Test\Feature\Http\Controllers\Resource\Playground</package>
      <className>Playground\Test\Feature\Http\Controllers\Resource\Playground\StoreTrait</className>
      <methodName>getGetFqdn</methodName>
      <methodSignature>getGetFqdn(): string</methodSignature>
      <fullMethod>getGetFqdn(): string</fullMethod>
      <crap>0</crap>
      <complexity>0</complexity>
      <coverage>0</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package>Playground\Test\Feature\Http\Controllers\Resource\Playground</package>
      <className>Playground\Test\Feature\Http\Controllers\Resource\Playground\StoreTrait</className>
      <methodName>getPackageInfo</methodName>
      <methodSignature>getPackageInfo(): array</methodSignature>
      <fullMethod>getPackageInfo(): array</fullMethod>
      <crap>0</crap>
      <complexity>0</complexity>
      <coverage>0</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package>Playground\Test\Feature\Http\Controllers\Resource\Playground</package>
      <className>Playground\Test\Feature\Http\Controllers\Resource\Playground\StoreTrait</className>
      <methodName>test_guest_cannot_store</methodName>
      <methodSignature>test_guest_cannot_store()</methodSignature>
      <fullMethod>test_guest_cannot_store()</fullMethod>
      <crap>2</crap>
      <complexity>1</complexity>
      <coverage>0</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package>Playground\Test\Feature\Http\Controllers\Resource\Playground</package>
      <className>Playground\Test\Feature\Http\Controllers\Resource\Playground\StoreTrait</className>
      <methodName>test_store_as_admin_without_payload_and_fail_validation</methodName>
      <methodSignature>test_store_as_admin_without_payload_and_fail_validation()</methodSignature>
      <fullMethod>test_store_as_admin_without_payload_and_fail_validation()</fullMethod>
      <crap>2</crap>
      <complexity>1</complexity>
      <coverage>0</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package>Playground\Test\Feature\Http\Controllers\Resource\Playground</package>
      <className>Playground\Test\Feature\Http\Controllers\Resource\Playground\StoreTrait</className>
      <methodName>test_store_as_admin_and_succeed</methodName>
      <methodSignature>test_store_as_admin_and_succeed()</methodSignature>
      <fullMethod>test_store_as_admin_and_succeed()</fullMethod>
      <crap>2</crap>
      <complexity>1</complexity>
      <coverage>0</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package>Playground\Test\Feature\Http\Controllers\Resource\Playground</package>
      <className>Playground\Test\Feature\Http\Controllers\Resource\Playground\StoreTrait</className>
      <methodName>test_store_as_admin_and_succeed_with_return_url</methodName>
      <methodSignature>test_store_as_admin_and_succeed_with_return_url()</methodSignature>
      <fullMethod>test_store_as_admin_and_succeed_with_return_url()</fullMethod>
      <crap>2</crap>
      <complexity>1</complexity>
      <coverage>0</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package>Playground\Test\Feature\Http\Controllers\Resource\Playground</package>
      <className>Playground\Test\Feature\Http\Controllers\Resource\Playground\UnlockJsonTrait</className>
      <methodName>getGetFqdn</methodName>
      <methodSignature>getGetFqdn(): string</methodSignature>
      <fullMethod>getGetFqdn(): string</fullMethod>
      <crap>0</crap>
      <complexity>0</complexity>
      <coverage>0</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package>Playground\Test\Feature\Http\Controllers\Resource\Playground</package>
      <className>Playground\Test\Feature\Http\Controllers\Resource\Playground\UnlockJsonTrait</className>
      <methodName>getPackageInfo</methodName>
      <methodSignature>getPackageInfo(): array</methodSignature>
      <fullMethod>getPackageInfo(): array</fullMethod>
      <crap>0</crap>
      <complexity>0</complexity>
      <coverage>0</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package>Playground\Test\Feature\Http\Controllers\Resource\Playground</package>
      <className>Playground\Test\Feature\Http\Controllers\Resource\Playground\UnlockJsonTrait</className>
      <methodName>getStructureData</methodName>
      <methodSignature>getStructureData(): array</methodSignature>
      <fullMethod>getStructureData(): array</fullMethod>
      <crap>0</crap>
      <complexity>0</complexity>
      <coverage>0</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package>Playground\Test\Feature\Http\Controllers\Resource\Playground</package>
      <className>Playground\Test\Feature\Http\Controllers\Resource\Playground\UnlockJsonTrait</className>
      <methodName>test_json_guest_cannot_unlock</methodName>
      <methodSignature>test_json_guest_cannot_unlock()</methodSignature>
      <fullMethod>test_json_guest_cannot_unlock()</fullMethod>
      <crap>2</crap>
      <complexity>1</complexity>
      <coverage>0</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package>Playground\Test\Feature\Http\Controllers\Resource\Playground</package>
      <className>Playground\Test\Feature\Http\Controllers\Resource\Playground\UnlockJsonTrait</className>
      <methodName>test_json_unlock_as_admin_and_succeed</methodName>
      <methodSignature>test_json_unlock_as_admin_and_succeed()</methodSignature>
      <fullMethod>test_json_unlock_as_admin_and_succeed()</fullMethod>
      <crap>2</crap>
      <complexity>1</complexity>
      <coverage>0</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package>Playground\Test\Feature\Http\Controllers\Resource\Playground</package>
      <className>Playground\Test\Feature\Http\Controllers\Resource\Playground\UnlockJsonTrait</className>
      <methodName>test_json_unlock_as_admin_and_succeed_with_no_redirect</methodName>
      <methodSignature>test_json_unlock_as_admin_and_succeed_with_no_redirect()</methodSignature>
      <fullMethod>test_json_unlock_as_admin_and_succeed_with_no_redirect()</fullMethod>
      <crap>2</crap>
      <complexity>1</complexity>
      <coverage>0</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package>Playground\Test\Feature\Http\Controllers\Resource\Playground</package>
      <className>Playground\Test\Feature\Http\Controllers\Resource\Playground\UnlockJsonTrait</className>
      <methodName>test_json_unlock_as_user_and_get_denied</methodName>
      <methodSignature>test_json_unlock_as_user_and_get_denied()</methodSignature>
      <fullMethod>test_json_unlock_as_user_and_get_denied()</fullMethod>
      <crap>2</crap>
      <complexity>1</complexity>
      <coverage>0</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package>Playground\Test\Feature\Http\Controllers\Resource\Playground</package>
      <className>Playground\Test\Feature\Http\Controllers\Resource\Playground\UnlockTrait</className>
      <methodName>getGetFqdn</methodName>
      <methodSignature>getGetFqdn(): string</methodSignature>
      <fullMethod>getGetFqdn(): string</fullMethod>
      <crap>0</crap>
      <complexity>0</complexity>
      <coverage>0</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package>Playground\Test\Feature\Http\Controllers\Resource\Playground</package>
      <className>Playground\Test\Feature\Http\Controllers\Resource\Playground\UnlockTrait</className>
      <methodName>getPackageInfo</methodName>
      <methodSignature>getPackageInfo(): array</methodSignature>
      <fullMethod>getPackageInfo(): array</fullMethod>
      <crap>0</crap>
      <complexity>0</complexity>
      <coverage>0</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package>Playground\Test\Feature\Http\Controllers\Resource\Playground</package>
      <className>Playground\Test\Feature\Http\Controllers\Resource\Playground\UnlockTrait</className>
      <methodName>getStructureData</methodName>
      <methodSignature>getStructureData(): array</methodSignature>
      <fullMethod>getStructureData(): array</fullMethod>
      <crap>0</crap>
      <complexity>0</complexity>
      <coverage>0</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package>Playground\Test\Feature\Http\Controllers\Resource\Playground</package>
      <className>Playground\Test\Feature\Http\Controllers\Resource\Playground\UnlockTrait</className>
      <methodName>test_guest_cannot_unlock</methodName>
      <methodSignature>test_guest_cannot_unlock()</methodSignature>
      <fullMethod>test_guest_cannot_unlock()</fullMethod>
      <crap>2</crap>
      <complexity>1</complexity>
      <coverage>0</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package>Playground\Test\Feature\Http\Controllers\Resource\Playground</package>
      <className>Playground\Test\Feature\Http\Controllers\Resource\Playground\UnlockTrait</className>
      <methodName>test_unlock_as_admin_and_succeed</methodName>
      <methodSignature>test_unlock_as_admin_and_succeed()</methodSignature>
      <fullMethod>test_unlock_as_admin_and_succeed()</fullMethod>
      <crap>2</crap>
      <complexity>1</complexity>
      <coverage>0</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package>Playground\Test\Feature\Http\Controllers\Resource\Playground</package>
      <className>Playground\Test\Feature\Http\Controllers\Resource\Playground\UnlockTrait</className>
      <methodName>test_unlock_as_admin_and_succeed_with_redirect_to_index_with_sorted_by_unlocked_desc</methodName>
      <methodSignature>test_unlock_as_admin_and_succeed_with_redirect_to_index_with_sorted_by_unlocked_desc()</methodSignature>
      <fullMethod>test_unlock_as_admin_and_succeed_with_redirect_to_index_with_sorted_by_unlocked_desc()</fullMethod>
      <crap>2</crap>
      <complexity>1</complexity>
      <coverage>0</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package>Playground\Test\Feature\Http\Controllers\Resource\Playground</package>
      <className>Playground\Test\Feature\Http\Controllers\Resource\Playground\UnlockTrait</className>
      <methodName>test_unlock_as_user_and_get_denied</methodName>
      <methodSignature>test_unlock_as_user_and_get_denied()</methodSignature>
      <fullMethod>test_unlock_as_user_and_get_denied()</fullMethod>
      <crap>2</crap>
      <complexity>1</complexity>
      <coverage>0</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package>Playground\Test\Feature\Http\Controllers\Resource\Playground</package>
      <className>Playground\Test\Feature\Http\Controllers\Resource\Playground\UpdateJsonTrait</className>
      <methodName>getGetFqdn</methodName>
      <methodSignature>getGetFqdn(): string</methodSignature>
      <fullMethod>getGetFqdn(): string</fullMethod>
      <crap>0</crap>
      <complexity>0</complexity>
      <coverage>0</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package>Playground\Test\Feature\Http\Controllers\Resource\Playground</package>
      <className>Playground\Test\Feature\Http\Controllers\Resource\Playground\UpdateJsonTrait</className>
      <methodName>getPackageInfo</methodName>
      <methodSignature>getPackageInfo(): array</methodSignature>
      <fullMethod>getPackageInfo(): array</fullMethod>
      <crap>0</crap>
      <complexity>0</complexity>
      <coverage>0</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package>Playground\Test\Feature\Http\Controllers\Resource\Playground</package>
      <className>Playground\Test\Feature\Http\Controllers\Resource\Playground\UpdateJsonTrait</className>
      <methodName>test_json_guest_cannot_update</methodName>
      <methodSignature>test_json_guest_cannot_update()</methodSignature>
      <fullMethod>test_json_guest_cannot_update()</fullMethod>
      <crap>2</crap>
      <complexity>1</complexity>
      <coverage>0</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package>Playground\Test\Feature\Http\Controllers\Resource\Playground</package>
      <className>Playground\Test\Feature\Http\Controllers\Resource\Playground\UpdateJsonTrait</className>
      <methodName>test_json_update_as_admin_without_payload_and_fail_validation</methodName>
      <methodSignature>test_json_update_as_admin_without_payload_and_fail_validation()</methodSignature>
      <fullMethod>test_json_update_as_admin_without_payload_and_fail_validation()</fullMethod>
      <crap>2</crap>
      <complexity>1</complexity>
      <coverage>0</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package>Playground\Test\Feature\Http\Controllers\Resource\Playground</package>
      <className>Playground\Test\Feature\Http\Controllers\Resource\Playground\UpdateJsonTrait</className>
      <methodName>test_json_admin_can_update</methodName>
      <methodSignature>test_json_admin_can_update()</methodSignature>
      <fullMethod>test_json_admin_can_update()</fullMethod>
      <crap>2</crap>
      <complexity>1</complexity>
      <coverage>0</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package>Playground\Test\Feature\Http\Controllers\Resource\Playground</package>
      <className>Playground\Test\Feature\Http\Controllers\Resource\Playground\UpdateTrait</className>
      <methodName>getGetFqdn</methodName>
      <methodSignature>getGetFqdn(): string</methodSignature>
      <fullMethod>getGetFqdn(): string</fullMethod>
      <crap>0</crap>
      <complexity>0</complexity>
      <coverage>0</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package>Playground\Test\Feature\Http\Controllers\Resource\Playground</package>
      <className>Playground\Test\Feature\Http\Controllers\Resource\Playground\UpdateTrait</className>
      <methodName>getPackageInfo</methodName>
      <methodSignature>getPackageInfo(): array</methodSignature>
      <fullMethod>getPackageInfo(): array</fullMethod>
      <crap>0</crap>
      <complexity>0</complexity>
      <coverage>0</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package>Playground\Test\Feature\Http\Controllers\Resource\Playground</package>
      <className>Playground\Test\Feature\Http\Controllers\Resource\Playground\UpdateTrait</className>
      <methodName>test_guest_cannot_update</methodName>
      <methodSignature>test_guest_cannot_update()</methodSignature>
      <fullMethod>test_guest_cannot_update()</fullMethod>
      <crap>2</crap>
      <complexity>1</complexity>
      <coverage>0</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package>Playground\Test\Feature\Http\Controllers\Resource\Playground</package>
      <className>Playground\Test\Feature\Http\Controllers\Resource\Playground\UpdateTrait</className>
      <methodName>test_update_as_admin_without_payload_and_fail_validation</methodName>
      <methodSignature>test_update_as_admin_without_payload_and_fail_validation()</methodSignature>
      <fullMethod>test_update_as_admin_without_payload_and_fail_validation()</fullMethod>
      <crap>2</crap>
      <complexity>1</complexity>
      <coverage>0</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package>Playground\Test\Feature\Http\Controllers\Resource\Playground</package>
      <className>Playground\Test\Feature\Http\Controllers\Resource\Playground\UpdateTrait</className>
      <methodName>test_admin_can_update</methodName>
      <methodSignature>test_admin_can_update()</methodSignature>
      <fullMethod>test_admin_can_update()</fullMethod>
      <crap>2</crap>
      <complexity>1</complexity>
      <coverage>0</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package>Playground\Test\Feature\Http\Controllers\Resource\Playground</package>
      <className>Playground\Test\Feature\Http\Controllers\Resource\Playground\UpdateTrait</className>
      <methodName>test_admin_can_update_view_with_return_url</methodName>
      <methodSignature>test_admin_can_update_view_with_return_url()</methodSignature>
      <fullMethod>test_admin_can_update_view_with_return_url()</fullMethod>
      <crap>2</crap>
      <complexity>1</complexity>
      <coverage>0</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package>Playground\Test\Feature\Models</package>
      <className>Playground\Test\Feature\Models\ModelCase</className>
      <methodName>getModel</methodName>
      <methodSignature>getModel(): Illuminate\Database\Eloquent\Model</methodSignature>
      <fullMethod>getModel(): Illuminate\Database\Eloquent\Model</fullMethod>
      <crap>2</crap>
      <complexity>1</complexity>
      <coverage>0</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package>Playground\Test\Feature\Models</package>
      <className>Playground\Test\Feature\Models\ModelCase</className>
      <methodName>getModelClass</methodName>
      <methodSignature>getModelClass(): string</methodSignature>
      <fullMethod>getModelClass(): string</fullMethod>
      <crap>2</crap>
      <complexity>1</complexity>
      <coverage>0</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package>Playground\Test\Feature\Models</package>
      <className>Playground\Test\Feature\Models\ModelCase</className>
      <methodName>test_model_instance</methodName>
      <methodSignature>test_model_instance(): void</methodSignature>
      <fullMethod>test_model_instance(): void</fullMethod>
      <crap>2</crap>
      <complexity>1</complexity>
      <coverage>0</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package>Playground\Test\Feature\Models</package>
      <className>Playground\Test\Feature\Models\ModelCase</className>
      <methodName>verifyRelationship</methodName>
      <methodSignature>verifyRelationship(string $relationshipType, string $accessor): bool</methodSignature>
      <fullMethod>verifyRelationship(string $relationshipType, string $accessor): bool</fullMethod>
      <crap>272</crap>
      <complexity>16</complexity>
      <coverage>0</coverage>
      <crapLoad>16</crapLoad>
    </method>
    <method>
      <package>Playground\Test\Feature\Models</package>
      <className>Playground\Test\Feature\Models\ModelCase</className>
      <methodName>verifyRelationships</methodName>
      <methodSignature>verifyRelationships(): array</methodSignature>
      <fullMethod>verifyRelationships(): array</fullMethod>
      <crap>42</crap>
      <complexity>6</complexity>
      <coverage>0</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package>Playground\Test\Feature\Models</package>
      <className>Playground\Test\Feature\Models\ModelCase</className>
      <methodName>verifyRelationshipHasOne</methodName>
      <methodSignature>verifyRelationshipHasOne(Illuminate\Database\Eloquent\Model $model, string $accessor): void</methodSignature>
      <fullMethod>verifyRelationshipHasOne(Illuminate\Database\Eloquent\Model $model, string $accessor): void</fullMethod>
      <crap>342</crap>
      <complexity>18</complexity>
      <coverage>0</coverage>
      <crapLoad>18</crapLoad>
    </method>
    <method>
      <package>Playground\Test\Feature\Models</package>
      <className>Playground\Test\Feature\Models\ModelCase</className>
      <methodName>verifyRelationshipHasMany</methodName>
      <methodSignature>verifyRelationshipHasMany(Illuminate\Database\Eloquent\Model $model, string $accessor): void</methodSignature>
      <fullMethod>verifyRelationshipHasMany(Illuminate\Database\Eloquent\Model $model, string $accessor): void</fullMethod>
      <crap>240</crap>
      <complexity>15</complexity>
      <coverage>0</coverage>
      <crapLoad>15</crapLoad>
    </method>
    <method>
      <package>Playground\Test\Feature\Models</package>
      <className>Playground\Test\Feature\Models\ModelCase</className>
      <methodName>test_verify_model_relationships</methodName>
      <methodSignature>test_verify_model_relationships(): void</methodSignature>
      <fullMethod>test_verify_model_relationships(): void</fullMethod>
      <crap>2</crap>
      <complexity>1</complexity>
      <coverage>0</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package>Playground\Test\Feature\Models</package>
      <className>Playground\Test\Feature\Models\ModelCase</className>
      <methodName>test_factory_create</methodName>
      <methodSignature>test_factory_create(): void</methodSignature>
      <fullMethod>test_factory_create(): void</fullMethod>
      <crap>6</crap>
      <complexity>2</complexity>
      <coverage>0</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package>Playground\Test</package>
      <className>Playground\Test\MockingTrait</className>
      <methodName>mockRequest</methodName>
      <methodSignature>mockRequest(string $requestClass, string $uri, string $method, array $parameters, array $cookies, array $files, array $server, $content)</methodSignature>
      <fullMethod>mockRequest(string $requestClass, string $uri, string $method, array $parameters, array $cookies, array $files, array $server, $content)</fullMethod>
      <crap>2</crap>
      <complexity>1</complexity>
      <coverage>0</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package>Playground\Test</package>
      <className>Playground\Test\MockingTrait</className>
      <methodName>invokeProtected</methodName>
      <methodSignature>invokeProtected($out, $method, array $params): mixed</methodSignature>
      <fullMethod>invokeProtected($out, $method, array $params): mixed</fullMethod>
      <crap>2</crap>
      <complexity>1</complexity>
      <coverage>0</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package>Playground\Test</package>
      <className>Playground\Test\MockingTrait</className>
      <methodName>setProtected</methodName>
      <methodSignature>setProtected($out, string $property, mixed $value): void</methodSignature>
      <fullMethod>setProtected($out, string $property, mixed $value): void</fullMethod>
      <crap>2</crap>
      <complexity>1</complexity>
      <coverage>0</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package>Playground\Test\Models</package>
      <className>Playground\Test\Models\AbstractUser</className>
      <methodName>casts</methodName>
      <methodSignature>casts(): array</methodSignature>
      <fullMethod>casts(): array</fullMethod>
      <crap>2</crap>
      <complexity>1</complexity>
      <coverage>0</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package>Playground\Test\Models\Concerns</package>
      <className>Playground\Test\Models\Concerns\UserPrivileges</className>
      <methodName>getAttribute</methodName>
      <methodSignature>getAttribute($key)</methodSignature>
      <fullMethod>getAttribute($key)</fullMethod>
      <crap>0</crap>
      <complexity>0</complexity>
      <coverage>100</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package>Playground\Test\Models\Concerns</package>
      <className>Playground\Test\Models\Concerns\UserPrivileges</className>
      <methodName>hasPrivilege</methodName>
      <methodSignature>hasPrivilege(mixed $privilege, bool $inclusive): bool</methodSignature>
      <fullMethod>hasPrivilege(mixed $privilege, bool $inclusive): bool</fullMethod>
      <crap>4</crap>
      <complexity>4</complexity>
      <coverage>100</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package>Playground\Test\Models\Concerns</package>
      <className>Playground\Test\Models\Concerns\UserPrivileges</className>
      <methodName>hasRole</methodName>
      <methodSignature>hasRole(mixed $roles, bool $inclusive): bool</methodSignature>
      <fullMethod>hasRole(mixed $roles, bool $inclusive): bool</fullMethod>
      <crap>34.12</crap>
      <complexity>13</complexity>
      <coverage>50</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package>Playground\Test\Models\Concerns</package>
      <className>Playground\Test\Models\Concerns\UserPrivileges</className>
      <methodName>isAdmin</methodName>
      <methodSignature>isAdmin(): bool</methodSignature>
      <fullMethod>isAdmin(): bool</fullMethod>
      <crap>3</crap>
      <complexity>3</complexity>
      <coverage>100</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package>Playground\Test\Models</package>
      <className>Playground\Test\Models\DefaultUser</className>
      <methodName>casts</methodName>
      <methodSignature>casts(): array</methodSignature>
      <fullMethod>casts(): array</fullMethod>
      <crap>1</crap>
      <complexity>1</complexity>
      <coverage>100</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package>Playground\Test\Models</package>
      <className>Playground\Test\Models\UserWithRole</className>
      <methodName>hasRole</methodName>
      <methodSignature>hasRole(mixed $roles): bool</methodSignature>
      <fullMethod>hasRole(mixed $roles): bool</fullMethod>
      <crap>72</crap>
      <complexity>8</complexity>
      <coverage>0</coverage>
      <crapLoad>8</crapLoad>
    </method>
    <method>
      <package>Playground\Test\Models</package>
      <className>Playground\Test\Models\UserWithRole</className>
      <methodName>isAdmin</methodName>
      <methodSignature>isAdmin(): bool</methodSignature>
      <fullMethod>isAdmin(): bool</fullMethod>
      <crap>2</crap>
      <complexity>1</complexity>
      <coverage>0</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package>Playground\Test</package>
      <className>Playground\Test\ServiceProvider</className>
      <methodName>boot</methodName>
      <methodSignature>boot()</methodSignature>
      <fullMethod>boot()</fullMethod>
      <crap>3</crap>
      <complexity>3</complexity>
      <coverage>100</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package>Playground\Test</package>
      <className>Playground\Test\ServiceProvider</className>
      <methodName>about</methodName>
      <methodSignature>about(): void</methodSignature>
      <fullMethod>about(): void</fullMethod>
      <crap>7</crap>
      <complexity>7</complexity>
      <coverage>100</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package>Playground\Test</package>
      <className>Playground\Test\ServiceProvider</className>
      <methodName>register</methodName>
      <methodSignature>register(): void</methodSignature>
      <fullMethod>register(): void</fullMethod>
      <crap>1</crap>
      <complexity>1</complexity>
      <coverage>100</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package>Playground\Test</package>
      <className>Playground\Test\ServiceProvider</className>
      <methodName>version</methodName>
      <methodSignature>version(): string</methodSignature>
      <fullMethod>version(): string</fullMethod>
      <crap>1</crap>
      <complexity>1</complexity>
      <coverage>100</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package>Playground\Test</package>
      <className>Playground\Test\SqlTrait</className>
      <methodName>setUp</methodName>
      <methodSignature>setUp(): void</methodSignature>
      <fullMethod>setUp(): void</fullMethod>
      <crap>2</crap>
      <complexity>2</complexity>
      <coverage>100</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package>Playground\Test</package>
      <className>Playground\Test\SqlTrait</className>
      <methodName>replace_quotes</methodName>
      <methodSignature>replace_quotes(string $sql): string</methodSignature>
      <fullMethod>replace_quotes(string $sql): string</fullMethod>
      <crap>2</crap>
      <complexity>2</complexity>
      <coverage>100</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package>Playground\Test\Unit\Http\Requests</package>
      <className>Playground\Test\Unit\Http\Requests\RequestCase</className>
      <methodName>getRequest</methodName>
      <methodSignature>getRequest(): Illuminate\Foundation\Http\FormRequest</methodSignature>
      <fullMethod>getRequest(): Illuminate\Foundation\Http\FormRequest</fullMethod>
      <crap>2</crap>
      <complexity>1</complexity>
      <coverage>0</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package>Playground\Test\Unit\Http\Requests</package>
      <className>Playground\Test\Unit\Http\Requests\RequestCase</className>
      <methodName>getRequestClass</methodName>
      <methodSignature>getRequestClass(): string</methodSignature>
      <fullMethod>getRequestClass(): string</fullMethod>
      <crap>2</crap>
      <complexity>1</complexity>
      <coverage>0</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package>Playground\Test\Unit\Http\Requests</package>
      <className>Playground\Test\Unit\Http\Requests\RequestCase</className>
      <methodName>test_request_instance</methodName>
      <methodSignature>test_request_instance(): void</methodSignature>
      <fullMethod>test_request_instance(): void</fullMethod>
      <crap>2</crap>
      <complexity>1</complexity>
      <coverage>0</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package>Playground\Test\Unit\Models</package>
      <className>Playground\Test\Unit\Models\ModelCase</className>
      <methodName>getModel</methodName>
      <methodSignature>getModel(): Illuminate\Database\Eloquent\Model</methodSignature>
      <fullMethod>getModel(): Illuminate\Database\Eloquent\Model</fullMethod>
      <crap>2</crap>
      <complexity>1</complexity>
      <coverage>0</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package>Playground\Test\Unit\Models</package>
      <className>Playground\Test\Unit\Models\ModelCase</className>
      <methodName>getModelClass</methodName>
      <methodSignature>getModelClass(): string</methodSignature>
      <fullMethod>getModelClass(): string</fullMethod>
      <crap>2</crap>
      <complexity>1</complexity>
      <coverage>0</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package>Playground\Test\Unit\Models</package>
      <className>Playground\Test\Unit\Models\ModelCase</className>
      <methodName>test_model_instance</methodName>
      <methodSignature>test_model_instance(): void</methodSignature>
      <fullMethod>test_model_instance(): void</fullMethod>
      <crap>2</crap>
      <complexity>1</complexity>
      <coverage>0</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package>Playground\Test\Unit\Models</package>
      <className>Playground\Test\Unit\Models\ModelCase</className>
      <methodName>verifyRelationship</methodName>
      <methodSignature>verifyRelationship(string $relationshipType, string $accessor): bool</methodSignature>
      <fullMethod>verifyRelationship(string $relationshipType, string $accessor): bool</fullMethod>
      <crap>110</crap>
      <complexity>10</complexity>
      <coverage>0</coverage>
      <crapLoad>10</crapLoad>
    </method>
    <method>
      <package>Playground\Test\Unit\Models</package>
      <className>Playground\Test\Unit\Models\ModelCase</className>
      <methodName>verifyRelationships</methodName>
      <methodSignature>verifyRelationships(): array</methodSignature>
      <fullMethod>verifyRelationships(): array</fullMethod>
      <crap>56</crap>
      <complexity>7</complexity>
      <coverage>0</coverage>
      <crapLoad>7</crapLoad>
    </method>
    <method>
      <package>Playground\Test\Unit\Models</package>
      <className>Playground\Test\Unit\Models\ModelCase</className>
      <methodName>test_verify_model_relationships</methodName>
      <methodSignature>test_verify_model_relationships(): void</methodSignature>
      <fullMethod>test_verify_model_relationships(): void</fullMethod>
      <crap>2</crap>
      <complexity>1</complexity>
      <coverage>0</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package>Playground\Test\Unit\Models</package>
      <className>Playground\Test\Unit\Models\ModelCase</className>
      <methodName>test_model_factory_make</methodName>
      <methodSignature>test_model_factory_make(): void</methodSignature>
      <fullMethod>test_model_factory_make(): void</fullMethod>
      <crap>6</crap>
      <complexity>2</complexity>
      <coverage>0</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package>Playground\Test</package>
      <className>Playground\Test\WithFaker</className>
      <methodName>faker</methodName>
      <methodSignature>faker(string $locale): Faker\Generator</methodSignature>
      <fullMethod>faker(string $locale): Faker\Generator</fullMethod>
      <crap>2</crap>
      <complexity>2</complexity>
      <coverage>100</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package>Playground\Models\Concerns</package>
      <className>Playground\Models\Concerns\Abilities</className>
      <methodName>hasAbility</methodName>
      <methodSignature>hasAbility(mixed $ability): bool</methodSignature>
      <fullMethod>hasAbility(mixed $ability): bool</fullMethod>
      <crap>4</crap>
      <complexity>4</complexity>
      <coverage>100</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package>Playground\Models\Concerns</package>
      <className>Playground\Models\Concerns\Abilities</className>
      <methodName>addAbility</methodName>
      <methodSignature>addAbility(mixed $ability): void</methodSignature>
      <fullMethod>addAbility(mixed $ability): void</fullMethod>
      <crap>5</crap>
      <complexity>5</complexity>
      <coverage>100</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package>Playground\Models\Concerns</package>
      <className>Playground\Models\Concerns\Abilities</className>
      <methodName>removeAbility</methodName>
      <methodSignature>removeAbility(mixed $ability): void</methodSignature>
      <fullMethod>removeAbility(mixed $ability): void</fullMethod>
      <crap>5</crap>
      <complexity>5</complexity>
      <coverage>100</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package>Playground\Models\Concerns</package>
      <className>Playground\Models\Concerns\Admin</className>
      <methodName>isAdmin</methodName>
      <methodSignature>isAdmin(): bool</methodSignature>
      <fullMethod>isAdmin(): bool</fullMethod>
      <crap>3</crap>
      <complexity>3</complexity>
      <coverage>100</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package>Playground\Models\Concerns</package>
      <className>Playground\Models\Concerns\Privileges</className>
      <methodName>hasPrivilege</methodName>
      <methodSignature>hasPrivilege(mixed $privilege): bool</methodSignature>
      <fullMethod>hasPrivilege(mixed $privilege): bool</fullMethod>
      <crap>4</crap>
      <complexity>4</complexity>
      <coverage>100</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package>Playground\Models\Concerns</package>
      <className>Playground\Models\Concerns\Privileges</className>
      <methodName>addPrivilege</methodName>
      <methodSignature>addPrivilege(mixed $privilege): void</methodSignature>
      <fullMethod>addPrivilege(mixed $privilege): void</fullMethod>
      <crap>5</crap>
      <complexity>5</complexity>
      <coverage>100</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package>Playground\Models\Concerns</package>
      <className>Playground\Models\Concerns\Privileges</className>
      <methodName>removePrivilege</methodName>
      <methodSignature>removePrivilege(mixed $privilege): void</methodSignature>
      <fullMethod>removePrivilege(mixed $privilege): void</fullMethod>
      <crap>5</crap>
      <complexity>5</complexity>
      <coverage>100</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package>Playground\Models\Concerns</package>
      <className>Playground\Models\Concerns\Role</className>
      <methodName>hasRole</methodName>
      <methodSignature>hasRole(mixed $role): bool</methodSignature>
      <fullMethod>hasRole(mixed $role): bool</fullMethod>
      <crap>5</crap>
      <complexity>5</complexity>
      <coverage>100</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package>Playground\Models\Concerns</package>
      <className>Playground\Models\Concerns\Role</className>
      <methodName>addRole</methodName>
      <methodSignature>addRole(mixed $role): void</methodSignature>
      <fullMethod>addRole(mixed $role): void</fullMethod>
      <crap>6</crap>
      <complexity>6</complexity>
      <coverage>100</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package>Playground\Models\Concerns</package>
      <className>Playground\Models\Concerns\Role</className>
      <methodName>removeRole</methodName>
      <methodSignature>removeRole(mixed $role): void</methodSignature>
      <fullMethod>removeRole(mixed $role): void</fullMethod>
      <crap>5</crap>
      <complexity>5</complexity>
      <coverage>100</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package>Playground\Models\Concerns</package>
      <className>Playground\Models\Concerns\WithChildren</className>
      <methodName>children</methodName>
      <methodSignature>children(): Illuminate\Database\Eloquent\Relations\HasMany</methodSignature>
      <fullMethod>children(): Illuminate\Database\Eloquent\Relations\HasMany</fullMethod>
      <crap>1</crap>
      <complexity>1</complexity>
      <coverage>100</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package>Playground\Models\Concerns</package>
      <className>Playground\Models\Concerns\WithCreator</className>
      <methodName>creator</methodName>
      <methodSignature>creator(): Illuminate\Database\Eloquent\Relations\HasOne</methodSignature>
      <fullMethod>creator(): Illuminate\Database\Eloquent\Relations\HasOne</fullMethod>
      <crap>1</crap>
      <complexity>1</complexity>
      <coverage>100</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package>Playground\Models\Concerns</package>
      <className>Playground\Models\Concerns\WithModifier</className>
      <methodName>modifier</methodName>
      <methodSignature>modifier(): Illuminate\Database\Eloquent\Relations\HasOne</methodSignature>
      <fullMethod>modifier(): Illuminate\Database\Eloquent\Relations\HasOne</fullMethod>
      <crap>1</crap>
      <complexity>1</complexity>
      <coverage>100</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package>Playground\Models\Concerns</package>
      <className>Playground\Models\Concerns\WithOwner</className>
      <methodName>owner</methodName>
      <methodSignature>owner(): Illuminate\Database\Eloquent\Relations\HasOne</methodSignature>
      <fullMethod>owner(): Illuminate\Database\Eloquent\Relations\HasOne</fullMethod>
      <crap>1</crap>
      <complexity>1</complexity>
      <coverage>100</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package>Playground\Models\Concerns</package>
      <className>Playground\Models\Concerns\WithParent</className>
      <methodName>parent</methodName>
      <methodSignature>parent(): Illuminate\Database\Eloquent\Relations\HasOne</methodSignature>
      <fullMethod>parent(): Illuminate\Database\Eloquent\Relations\HasOne</fullMethod>
      <crap>1</crap>
      <complexity>1</complexity>
      <coverage>100</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package>Playground\Models\Scopes</package>
      <className>Playground\Models\Scopes\ScopeFilterColumns</className>
      <methodName>scopeFilterColumns</methodName>
      <methodSignature>scopeFilterColumns(Illuminate\Database\Eloquent\Builder $query, array $columns, array $validated): Illuminate\Database\Eloquent\Builder</methodSignature>
      <fullMethod>scopeFilterColumns(Illuminate\Database\Eloquent\Builder $query, array $columns, array $validated): Illuminate\Database\Eloquent\Builder</fullMethod>
      <crap>31</crap>
      <complexity>31</complexity>
      <coverage>100</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package>Playground\Models\Scopes</package>
      <className>Playground\Models\Scopes\ScopeFilterDates</className>
      <methodName>scopeFilterDates</methodName>
      <methodSignature>scopeFilterDates(Illuminate\Database\Eloquent\Builder $query, array $dates, array $validated): Illuminate\Database\Eloquent\Builder</methodSignature>
      <fullMethod>scopeFilterDates(Illuminate\Database\Eloquent\Builder $query, array $dates, array $validated): Illuminate\Database\Eloquent\Builder</fullMethod>
      <crap>43</crap>
      <complexity>43</complexity>
      <coverage>100</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package>Playground\Models\Scopes</package>
      <className>Playground\Models\Scopes\ScopeFilterFlags</className>
      <methodName>scopeFilterFlags</methodName>
      <methodSignature>scopeFilterFlags(Illuminate\Database\Eloquent\Builder $query, array $flags, array $validated): Illuminate\Database\Eloquent\Builder</methodSignature>
      <fullMethod>scopeFilterFlags(Illuminate\Database\Eloquent\Builder $query, array $flags, array $validated): Illuminate\Database\Eloquent\Builder</fullMethod>
      <crap>9</crap>
      <complexity>9</complexity>
      <coverage>100</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package>Playground\Models\Scopes</package>
      <className>Playground\Models\Scopes\ScopeFilterIds</className>
      <methodName>scopeFilterIds</methodName>
      <methodSignature>scopeFilterIds(Illuminate\Database\Eloquent\Builder $query, array $ids, array $validated): Illuminate\Database\Eloquent\Builder</methodSignature>
      <fullMethod>scopeFilterIds(Illuminate\Database\Eloquent\Builder $query, array $ids, array $validated): Illuminate\Database\Eloquent\Builder</fullMethod>
      <crap>27</crap>
      <complexity>27</complexity>
      <coverage>100</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package>Playground\Models\Scopes</package>
      <className>Playground\Models\Scopes\ScopeFilterTrash</className>
      <methodName>scopeFilterTrash</methodName>
      <methodSignature>scopeFilterTrash(Illuminate\Database\Eloquent\Builder $query, string $visibility): Illuminate\Database\Eloquent\Builder</methodSignature>
      <fullMethod>scopeFilterTrash(Illuminate\Database\Eloquent\Builder $query, string $visibility): Illuminate\Database\Eloquent\Builder</fullMethod>
      <crap>7</crap>
      <complexity>7</complexity>
      <coverage>100</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package>Playground\Models\Scopes</package>
      <className>Playground\Models\Scopes\ScopeSort</className>
      <methodName>scopeSort</methodName>
      <methodSignature>scopeSort(Illuminate\Database\Eloquent\Builder $query, mixed $sort): Illuminate\Database\Eloquent\Builder</methodSignature>
      <fullMethod>scopeSort(Illuminate\Database\Eloquent\Builder $query, mixed $sort): Illuminate\Database\Eloquent\Builder</fullMethod>
      <crap>16</crap>
      <complexity>16</complexity>
      <coverage>100</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package>Playground</package>
      <className>Playground\ServiceProvider</className>
      <methodName>boot</methodName>
      <methodSignature>boot(): void</methodSignature>
      <fullMethod>boot(): void</fullMethod>
      <crap>3</crap>
      <complexity>3</complexity>
      <coverage>100</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package>Playground</package>
      <className>Playground\ServiceProvider</className>
      <methodName>about</methodName>
      <methodSignature>about(array $config): void</methodSignature>
      <fullMethod>about(array $config): void</fullMethod>
      <crap>23</crap>
      <complexity>23</complexity>
      <coverage>100</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package>Playground</package>
      <className>Playground\ServiceProvider</className>
      <methodName>userPrimaryKeyType</methodName>
      <methodSignature>userPrimaryKeyType(string $auth_providers_users_model): string</methodSignature>
      <fullMethod>userPrimaryKeyType(string $auth_providers_users_model): string</fullMethod>
      <crap>4</crap>
      <complexity>4</complexity>
      <coverage>100</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package>Playground</package>
      <className>Playground\ServiceProvider</className>
      <methodName>userPrimaryKeyTypeParse</methodName>
      <methodSignature>userPrimaryKeyTypeParse(string $auth_providers_users_model): string</methodSignature>
      <fullMethod>userPrimaryKeyTypeParse(string $auth_providers_users_model): string</fullMethod>
      <crap>4</crap>
      <complexity>4</complexity>
      <coverage>100</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package>Playground</package>
      <className>Playground\ServiceProvider</className>
      <methodName>register</methodName>
      <methodSignature>register(): void</methodSignature>
      <fullMethod>register(): void</fullMethod>
      <crap>1</crap>
      <complexity>1</complexity>
      <coverage>100</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package>Playground</package>
      <className>Playground\ServiceProvider</className>
      <methodName>version</methodName>
      <methodSignature>version(): string</methodSignature>
      <fullMethod>version(): string</fullMethod>
      <crap>1</crap>
      <complexity>1</complexity>
      <coverage>100</coverage>
      <crapLoad>0</crapLoad>
    </method>
  </methods>
</crap_result>
