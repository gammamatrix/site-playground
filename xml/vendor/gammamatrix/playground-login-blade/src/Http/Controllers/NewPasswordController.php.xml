<?xml version="1.0"?>
<phpunit xmlns="https://schema.phpunit.de/coverage/1.0">
  <file name="NewPasswordController.php" path="/vendor/gammamatrix/playground-login-blade/src/Http/Controllers">
    <totals>
      <lines total="94" comments="33" code="61" executable="26" executed="26" percent="100.00"/>
      <methods count="2" tested="2" percent="100.00"/>
      <functions count="0" tested="0" percent="0"/>
      <classes count="1" tested="1" percent="100.00"/>
      <traits count="0" tested="0" percent="0"/>
    </totals>
    <class name="Playground\Login\Blade\Http\Controllers\NewPasswordController" start="23" executable="26" executed="26" crap="5">
      <namespace name="Playground\Login\Blade\Http\Controllers"/>
      <method name="create" signature="create(Playground\Login\Blade\Http\Requests\NewPasswordRequest $request): Illuminate\View\View" start="30" end="46" crap="1" executable="9" executed="9" coverage="100"/>
      <method name="store" signature="store(Playground\Login\Blade\Http\Requests\StoreNewPasswordRequest $request): Illuminate\Http\RedirectResponse" start="55" end="92" crap="4" executable="17" executed="17" coverage="100"/>
    </class>
    <coverage>
      <line nr="35">
        <covered by="Tests\Feature\Playground\Login\Blade\Http\Controllers\Laravel\PasswordResetRouteTest::test_reset_password_screen_can_be_rendered"/>
        <covered by="Tests\Feature\Playground\Login\Blade\Http\Controllers\Playground\PasswordResetRouteTest::test_reset_password_screen_can_be_rendered"/>
      </line>
      <line nr="37">
        <covered by="Tests\Feature\Playground\Login\Blade\Http\Controllers\Laravel\PasswordResetRouteTest::test_reset_password_screen_can_be_rendered"/>
        <covered by="Tests\Feature\Playground\Login\Blade\Http\Controllers\Playground\PasswordResetRouteTest::test_reset_password_screen_can_be_rendered"/>
      </line>
      <line nr="39">
        <covered by="Tests\Feature\Playground\Login\Blade\Http\Controllers\Laravel\PasswordResetRouteTest::test_reset_password_screen_can_be_rendered"/>
        <covered by="Tests\Feature\Playground\Login\Blade\Http\Controllers\Playground\PasswordResetRouteTest::test_reset_password_screen_can_be_rendered"/>
      </line>
      <line nr="40">
        <covered by="Tests\Feature\Playground\Login\Blade\Http\Controllers\Laravel\PasswordResetRouteTest::test_reset_password_screen_can_be_rendered"/>
        <covered by="Tests\Feature\Playground\Login\Blade\Http\Controllers\Playground\PasswordResetRouteTest::test_reset_password_screen_can_be_rendered"/>
      </line>
      <line nr="41">
        <covered by="Tests\Feature\Playground\Login\Blade\Http\Controllers\Laravel\PasswordResetRouteTest::test_reset_password_screen_can_be_rendered"/>
        <covered by="Tests\Feature\Playground\Login\Blade\Http\Controllers\Playground\PasswordResetRouteTest::test_reset_password_screen_can_be_rendered"/>
      </line>
      <line nr="43">
        <covered by="Tests\Feature\Playground\Login\Blade\Http\Controllers\Laravel\PasswordResetRouteTest::test_reset_password_screen_can_be_rendered"/>
        <covered by="Tests\Feature\Playground\Login\Blade\Http\Controllers\Playground\PasswordResetRouteTest::test_reset_password_screen_can_be_rendered"/>
      </line>
      <line nr="44">
        <covered by="Tests\Feature\Playground\Login\Blade\Http\Controllers\Laravel\PasswordResetRouteTest::test_reset_password_screen_can_be_rendered"/>
        <covered by="Tests\Feature\Playground\Login\Blade\Http\Controllers\Playground\PasswordResetRouteTest::test_reset_password_screen_can_be_rendered"/>
      </line>
      <line nr="60">
        <covered by="Tests\Feature\Playground\Login\Blade\Http\Controllers\Laravel\PasswordResetRouteTest::test_password_can_be_reset_with_valid_token"/>
        <covered by="Tests\Feature\Playground\Login\Blade\Http\Controllers\Laravel\PasswordResetRouteTest::test_password_reset_with_invalid_token"/>
        <covered by="Tests\Feature\Playground\Login\Blade\Http\Controllers\Playground\PasswordResetRouteTest::test_password_can_be_reset_with_valid_token"/>
        <covered by="Tests\Feature\Playground\Login\Blade\Http\Controllers\Playground\PasswordResetRouteTest::test_password_reset_with_invalid_token"/>
      </line>
      <line nr="62">
        <covered by="Tests\Feature\Playground\Login\Blade\Http\Controllers\Laravel\PasswordResetRouteTest::test_password_can_be_reset_with_valid_token"/>
        <covered by="Tests\Feature\Playground\Login\Blade\Http\Controllers\Laravel\PasswordResetRouteTest::test_password_reset_with_invalid_token"/>
        <covered by="Tests\Feature\Playground\Login\Blade\Http\Controllers\Playground\PasswordResetRouteTest::test_password_can_be_reset_with_valid_token"/>
        <covered by="Tests\Feature\Playground\Login\Blade\Http\Controllers\Playground\PasswordResetRouteTest::test_password_reset_with_invalid_token"/>
      </line>
      <line nr="70">
        <covered by="Tests\Feature\Playground\Login\Blade\Http\Controllers\Laravel\PasswordResetRouteTest::test_password_can_be_reset_with_valid_token"/>
        <covered by="Tests\Feature\Playground\Login\Blade\Http\Controllers\Laravel\PasswordResetRouteTest::test_password_reset_with_invalid_token"/>
        <covered by="Tests\Feature\Playground\Login\Blade\Http\Controllers\Playground\PasswordResetRouteTest::test_password_can_be_reset_with_valid_token"/>
        <covered by="Tests\Feature\Playground\Login\Blade\Http\Controllers\Playground\PasswordResetRouteTest::test_password_reset_with_invalid_token"/>
      </line>
      <line nr="71">
        <covered by="Tests\Feature\Playground\Login\Blade\Http\Controllers\Laravel\PasswordResetRouteTest::test_password_can_be_reset_with_valid_token"/>
        <covered by="Tests\Feature\Playground\Login\Blade\Http\Controllers\Laravel\PasswordResetRouteTest::test_password_reset_with_invalid_token"/>
        <covered by="Tests\Feature\Playground\Login\Blade\Http\Controllers\Playground\PasswordResetRouteTest::test_password_can_be_reset_with_valid_token"/>
        <covered by="Tests\Feature\Playground\Login\Blade\Http\Controllers\Playground\PasswordResetRouteTest::test_password_reset_with_invalid_token"/>
      </line>
      <line nr="72">
        <covered by="Tests\Feature\Playground\Login\Blade\Http\Controllers\Laravel\PasswordResetRouteTest::test_password_can_be_reset_with_valid_token"/>
        <covered by="Tests\Feature\Playground\Login\Blade\Http\Controllers\Laravel\PasswordResetRouteTest::test_password_reset_with_invalid_token"/>
        <covered by="Tests\Feature\Playground\Login\Blade\Http\Controllers\Playground\PasswordResetRouteTest::test_password_can_be_reset_with_valid_token"/>
        <covered by="Tests\Feature\Playground\Login\Blade\Http\Controllers\Playground\PasswordResetRouteTest::test_password_reset_with_invalid_token"/>
      </line>
      <line nr="73">
        <covered by="Tests\Feature\Playground\Login\Blade\Http\Controllers\Laravel\PasswordResetRouteTest::test_password_can_be_reset_with_valid_token"/>
        <covered by="Tests\Feature\Playground\Login\Blade\Http\Controllers\Playground\PasswordResetRouteTest::test_password_can_be_reset_with_valid_token"/>
      </line>
      <line nr="74">
        <covered by="Tests\Feature\Playground\Login\Blade\Http\Controllers\Laravel\PasswordResetRouteTest::test_password_can_be_reset_with_valid_token"/>
        <covered by="Tests\Feature\Playground\Login\Blade\Http\Controllers\Playground\PasswordResetRouteTest::test_password_can_be_reset_with_valid_token"/>
      </line>
      <line nr="75">
        <covered by="Tests\Feature\Playground\Login\Blade\Http\Controllers\Laravel\PasswordResetRouteTest::test_password_can_be_reset_with_valid_token"/>
        <covered by="Tests\Feature\Playground\Login\Blade\Http\Controllers\Playground\PasswordResetRouteTest::test_password_can_be_reset_with_valid_token"/>
      </line>
      <line nr="76">
        <covered by="Tests\Feature\Playground\Login\Blade\Http\Controllers\Laravel\PasswordResetRouteTest::test_password_can_be_reset_with_valid_token"/>
        <covered by="Tests\Feature\Playground\Login\Blade\Http\Controllers\Playground\PasswordResetRouteTest::test_password_can_be_reset_with_valid_token"/>
      </line>
      <line nr="78">
        <covered by="Tests\Feature\Playground\Login\Blade\Http\Controllers\Laravel\PasswordResetRouteTest::test_password_can_be_reset_with_valid_token"/>
        <covered by="Tests\Feature\Playground\Login\Blade\Http\Controllers\Playground\PasswordResetRouteTest::test_password_can_be_reset_with_valid_token"/>
      </line>
      <line nr="79">
        <covered by="Tests\Feature\Playground\Login\Blade\Http\Controllers\Laravel\PasswordResetRouteTest::test_password_can_be_reset_with_valid_token"/>
        <covered by="Tests\Feature\Playground\Login\Blade\Http\Controllers\Laravel\PasswordResetRouteTest::test_password_reset_with_invalid_token"/>
        <covered by="Tests\Feature\Playground\Login\Blade\Http\Controllers\Playground\PasswordResetRouteTest::test_password_can_be_reset_with_valid_token"/>
        <covered by="Tests\Feature\Playground\Login\Blade\Http\Controllers\Playground\PasswordResetRouteTest::test_password_reset_with_invalid_token"/>
      </line>
      <line nr="85">
        <covered by="Tests\Feature\Playground\Login\Blade\Http\Controllers\Laravel\PasswordResetRouteTest::test_password_can_be_reset_with_valid_token"/>
        <covered by="Tests\Feature\Playground\Login\Blade\Http\Controllers\Laravel\PasswordResetRouteTest::test_password_reset_with_invalid_token"/>
        <covered by="Tests\Feature\Playground\Login\Blade\Http\Controllers\Playground\PasswordResetRouteTest::test_password_can_be_reset_with_valid_token"/>
        <covered by="Tests\Feature\Playground\Login\Blade\Http\Controllers\Playground\PasswordResetRouteTest::test_password_reset_with_invalid_token"/>
      </line>
      <line nr="86">
        <covered by="Tests\Feature\Playground\Login\Blade\Http\Controllers\Laravel\PasswordResetRouteTest::test_password_can_be_reset_with_valid_token"/>
        <covered by="Tests\Feature\Playground\Login\Blade\Http\Controllers\Playground\PasswordResetRouteTest::test_password_can_be_reset_with_valid_token"/>
      </line>
      <line nr="89">
        <covered by="Tests\Feature\Playground\Login\Blade\Http\Controllers\Laravel\PasswordResetRouteTest::test_password_reset_with_invalid_token"/>
        <covered by="Tests\Feature\Playground\Login\Blade\Http\Controllers\Playground\PasswordResetRouteTest::test_password_reset_with_invalid_token"/>
      </line>
      <line nr="90">
        <covered by="Tests\Feature\Playground\Login\Blade\Http\Controllers\Laravel\PasswordResetRouteTest::test_password_reset_with_invalid_token"/>
        <covered by="Tests\Feature\Playground\Login\Blade\Http\Controllers\Playground\PasswordResetRouteTest::test_password_reset_with_invalid_token"/>
      </line>
      <line nr="42">
        <covered by="Tests\Feature\Playground\Login\Blade\Http\Controllers\Laravel\PasswordResetRouteTest::test_reset_password_screen_can_be_rendered"/>
        <covered by="Tests\Feature\Playground\Login\Blade\Http\Controllers\Playground\PasswordResetRouteTest::test_reset_password_screen_can_be_rendered"/>
      </line>
      <line nr="45">
        <covered by="Tests\Feature\Playground\Login\Blade\Http\Controllers\Laravel\PasswordResetRouteTest::test_reset_password_screen_can_be_rendered"/>
        <covered by="Tests\Feature\Playground\Login\Blade\Http\Controllers\Playground\PasswordResetRouteTest::test_reset_password_screen_can_be_rendered"/>
      </line>
      <line nr="80">
        <covered by="Tests\Feature\Playground\Login\Blade\Http\Controllers\Laravel\PasswordResetRouteTest::test_password_can_be_reset_with_valid_token"/>
        <covered by="Tests\Feature\Playground\Login\Blade\Http\Controllers\Laravel\PasswordResetRouteTest::test_password_reset_with_invalid_token"/>
        <covered by="Tests\Feature\Playground\Login\Blade\Http\Controllers\Playground\PasswordResetRouteTest::test_password_can_be_reset_with_valid_token"/>
        <covered by="Tests\Feature\Playground\Login\Blade\Http\Controllers\Playground\PasswordResetRouteTest::test_password_reset_with_invalid_token"/>
      </line>
      <line nr="91">
        <covered by="Tests\Feature\Playground\Login\Blade\Http\Controllers\Laravel\PasswordResetRouteTest::test_password_reset_with_invalid_token"/>
        <covered by="Tests\Feature\Playground\Login\Blade\Http\Controllers\Playground\PasswordResetRouteTest::test_password_reset_with_invalid_token"/>
      </line>
    </coverage>
    <source>
      <line no="1">
        <token name="T_OPEN_TAG">&lt;?php</token>
      </line>
      <line no="2"/>
      <line no="3">
        <token name="T_DECLARE">declare</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_STRING">strict_types</token>
        <token name="T_EQUAL">=</token>
        <token name="T_LNUMBER">1</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="4">
        <token name="T_DOC_COMMENT">/**</token>
      </line>
      <line no="5">
        <token name="T_DOC_COMMENT"> * Playground</token>
      </line>
      <line no="6">
        <token name="T_DOC_COMMENT"> */</token>
      </line>
      <line no="7">
        <token name="T_NAMESPACE">namespace</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_NAME_QUALIFIED">Playground\Login\Blade\Http\Controllers</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="8"/>
      <line no="9">
        <token name="T_USE">use</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_NAME_QUALIFIED">Illuminate\Auth\Events\PasswordReset</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="10">
        <token name="T_USE">use</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_NAME_QUALIFIED">Illuminate\Http\RedirectResponse</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="11">
        <token name="T_USE">use</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_NAME_QUALIFIED">Illuminate\Http\Request</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="12">
        <token name="T_USE">use</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_NAME_QUALIFIED">Illuminate\Support\Facades\Hash</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="13">
        <token name="T_USE">use</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_NAME_QUALIFIED">Illuminate\Support\Facades\Password</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="14">
        <token name="T_USE">use</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_NAME_QUALIFIED">Illuminate\Support\Str</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="15">
        <token name="T_USE">use</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_NAME_QUALIFIED">Illuminate\Validation\ValidationException</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="16">
        <token name="T_USE">use</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_NAME_QUALIFIED">Illuminate\View\View</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="17">
        <token name="T_USE">use</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_NAME_QUALIFIED">Playground\Login\Blade\Http\Requests\NewPasswordRequest</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="18">
        <token name="T_USE">use</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_NAME_QUALIFIED">Playground\Login\Blade\Http\Requests\StoreNewPasswordRequest</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="19"/>
      <line no="20">
        <token name="T_DOC_COMMENT">/**</token>
      </line>
      <line no="21">
        <token name="T_DOC_COMMENT"> * \Playground\Login\Blade\Http\Controllers\NewPasswordController</token>
      </line>
      <line no="22">
        <token name="T_DOC_COMMENT"> */</token>
      </line>
      <line no="23">
        <token name="T_CLASS">class</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">NewPasswordController</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_EXTENDS">extends</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">Controller</token>
      </line>
      <line no="24">
        <token name="T_OPEN_CURLY">{</token>
      </line>
      <line no="25">
        <token name="T_WHITESPACE">    </token>
        <token name="T_DOC_COMMENT">/**</token>
      </line>
      <line no="26">
        <token name="T_DOC_COMMENT">     * Display the password reset view.</token>
      </line>
      <line no="27">
        <token name="T_DOC_COMMENT">     *</token>
      </line>
      <line no="28">
        <token name="T_DOC_COMMENT">     * @route GET /reset-password/{token} password.reset</token>
      </line>
      <line no="29">
        <token name="T_DOC_COMMENT">     */</token>
      </line>
      <line no="30">
        <token name="T_WHITESPACE">    </token>
        <token name="T_PUBLIC">public</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_FUNCTION">function</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">create</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_STRING">NewPasswordRequest</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$request</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_COLON">:</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">View</token>
      </line>
      <line no="31">
        <token name="T_WHITESPACE">    </token>
        <token name="T_OPEN_CURLY">{</token>
      </line>
      <line no="32">
        <token name="T_WHITESPACE">        </token>
        <token name="T_DOC_COMMENT">/**</token>
      </line>
      <line no="33">
        <token name="T_DOC_COMMENT">         * @var array&lt;string, mixed&gt; $validated</token>
      </line>
      <line no="34">
        <token name="T_DOC_COMMENT">         */</token>
      </line>
      <line no="35">
        <token name="T_WHITESPACE">        </token>
        <token name="T_VARIABLE">$validated</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_EQUAL">=</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$request</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">validated</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="36"/>
      <line no="37">
        <token name="T_WHITESPACE">        </token>
        <token name="T_VARIABLE">$package_config_login_blade</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_EQUAL">=</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">config</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_CONSTANT_ENCAPSED_STRING">'playground-login-blade'</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="38"/>
      <line no="39">
        <token name="T_WHITESPACE">        </token>
        <token name="T_RETURN">return</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">view</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_VARIABLE">$this</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">getPackageViewPathFromConfig</token>
        <token name="T_OPEN_BRACKET">(</token>
      </line>
      <line no="40">
        <token name="T_WHITESPACE">            </token>
        <token name="T_VARIABLE">$package_config_login_blade</token>
        <token name="T_COMMA">,</token>
      </line>
      <line no="41">
        <token name="T_WHITESPACE">            </token>
        <token name="T_CONSTANT_ENCAPSED_STRING">'reset-password'</token>
      </line>
      <line no="42">
        <token name="T_WHITESPACE">        </token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_COMMA">,</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_SQUARE">[</token>
      </line>
      <line no="43">
        <token name="T_WHITESPACE">            </token>
        <token name="T_CONSTANT_ENCAPSED_STRING">'package_config_login_blade'</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_DOUBLE_ARROW">=&gt;</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$package_config_login_blade</token>
        <token name="T_COMMA">,</token>
      </line>
      <line no="44">
        <token name="T_WHITESPACE">            </token>
        <token name="T_CONSTANT_ENCAPSED_STRING">'token'</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_DOUBLE_ARROW">=&gt;</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$request</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">route</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_CONSTANT_ENCAPSED_STRING">'token'</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_COMMA">,</token>
      </line>
      <line no="45">
        <token name="T_WHITESPACE">        </token>
        <token name="T_CLOSE_SQUARE">]</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="46">
        <token name="T_WHITESPACE">    </token>
        <token name="T_CLOSE_CURLY">}</token>
      </line>
      <line no="47"/>
      <line no="48">
        <token name="T_WHITESPACE">    </token>
        <token name="T_DOC_COMMENT">/**</token>
      </line>
      <line no="49">
        <token name="T_DOC_COMMENT">     * Handle an incoming new password request.</token>
      </line>
      <line no="50">
        <token name="T_DOC_COMMENT">     *</token>
      </line>
      <line no="51">
        <token name="T_DOC_COMMENT">     * @route POST /reset-password password.update</token>
      </line>
      <line no="52">
        <token name="T_DOC_COMMENT">     *</token>
      </line>
      <line no="53">
        <token name="T_DOC_COMMENT">     * @throws ValidationException</token>
      </line>
      <line no="54">
        <token name="T_DOC_COMMENT">     */</token>
      </line>
      <line no="55">
        <token name="T_WHITESPACE">    </token>
        <token name="T_PUBLIC">public</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_FUNCTION">function</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">store</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_STRING">StoreNewPasswordRequest</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$request</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_COLON">:</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">RedirectResponse</token>
      </line>
      <line no="56">
        <token name="T_WHITESPACE">    </token>
        <token name="T_OPEN_CURLY">{</token>
      </line>
      <line no="57">
        <token name="T_WHITESPACE">        </token>
        <token name="T_DOC_COMMENT">/**</token>
      </line>
      <line no="58">
        <token name="T_DOC_COMMENT">         * @var array&lt;string, mixed&gt; $validated</token>
      </line>
      <line no="59">
        <token name="T_DOC_COMMENT">         */</token>
      </line>
      <line no="60">
        <token name="T_WHITESPACE">        </token>
        <token name="T_VARIABLE">$validated</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_EQUAL">=</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$request</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">validated</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="61"/>
      <line no="62">
        <token name="T_WHITESPACE">        </token>
        <token name="T_VARIABLE">$password</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_EQUAL">=</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_EXCLAMATION_MARK">!</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_EMPTY">empty</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_VARIABLE">$validated</token>
        <token name="T_OPEN_SQUARE">[</token>
        <token name="T_CONSTANT_ENCAPSED_STRING">'password'</token>
        <token name="T_CLOSE_SQUARE">]</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_BOOLEAN_AND">&amp;&amp;</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">is_string</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_VARIABLE">$validated</token>
        <token name="T_OPEN_SQUARE">[</token>
        <token name="T_CONSTANT_ENCAPSED_STRING">'password'</token>
        <token name="T_CLOSE_SQUARE">]</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_QUESTION_MARK">?</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$validated</token>
        <token name="T_OPEN_SQUARE">[</token>
        <token name="T_CONSTANT_ENCAPSED_STRING">'password'</token>
        <token name="T_CLOSE_SQUARE">]</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_COLON">:</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_CONSTANT_ENCAPSED_STRING">''</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="63"/>
      <line no="64">
        <token name="T_WHITESPACE">        </token>
        <token name="T_COMMENT">// Here we will attempt to reset the user's password. If it is successful we</token>
      </line>
      <line no="65">
        <token name="T_WHITESPACE">        </token>
        <token name="T_COMMENT">// will update the password on an actual user model and persist it to the</token>
      </line>
      <line no="66">
        <token name="T_WHITESPACE">        </token>
        <token name="T_COMMENT">// database. Otherwise we will parse the error and return the response.</token>
      </line>
      <line no="67">
        <token name="T_WHITESPACE">        </token>
        <token name="T_DOC_COMMENT">/**</token>
      </line>
      <line no="68">
        <token name="T_DOC_COMMENT">         * @var string $status</token>
      </line>
      <line no="69">
        <token name="T_DOC_COMMENT">         */</token>
      </line>
      <line no="70">
        <token name="T_WHITESPACE">        </token>
        <token name="T_VARIABLE">$status</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_EQUAL">=</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">Password</token>
        <token name="T_DOUBLE_COLON">::</token>
        <token name="T_STRING">reset</token>
        <token name="T_OPEN_BRACKET">(</token>
      </line>
      <line no="71">
        <token name="T_WHITESPACE">            </token>
        <token name="T_VARIABLE">$request</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">only</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_CONSTANT_ENCAPSED_STRING">'email'</token>
        <token name="T_COMMA">,</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_CONSTANT_ENCAPSED_STRING">'password'</token>
        <token name="T_COMMA">,</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_CONSTANT_ENCAPSED_STRING">'password_confirmation'</token>
        <token name="T_COMMA">,</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_CONSTANT_ENCAPSED_STRING">'token'</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_COMMA">,</token>
      </line>
      <line no="72">
        <token name="T_WHITESPACE">            </token>
        <token name="T_FUNCTION">function</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_VARIABLE">$user</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_USE">use</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_VARIABLE">$password</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_CURLY">{</token>
      </line>
      <line no="73">
        <token name="T_WHITESPACE">                </token>
        <token name="T_VARIABLE">$user</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">forceFill</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_OPEN_SQUARE">[</token>
      </line>
      <line no="74">
        <token name="T_WHITESPACE">                    </token>
        <token name="T_CONSTANT_ENCAPSED_STRING">'password'</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_DOUBLE_ARROW">=&gt;</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">Hash</token>
        <token name="T_DOUBLE_COLON">::</token>
        <token name="T_STRING">make</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_VARIABLE">$password</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_COMMA">,</token>
      </line>
      <line no="75">
        <token name="T_WHITESPACE">                    </token>
        <token name="T_CONSTANT_ENCAPSED_STRING">'remember_token'</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_DOUBLE_ARROW">=&gt;</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">Str</token>
        <token name="T_DOUBLE_COLON">::</token>
        <token name="T_STRING">random</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_LNUMBER">60</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_COMMA">,</token>
      </line>
      <line no="76">
        <token name="T_WHITESPACE">                </token>
        <token name="T_CLOSE_SQUARE">]</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">save</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="77"/>
      <line no="78">
        <token name="T_WHITESPACE">                </token>
        <token name="T_STRING">event</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_NEW">new</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">PasswordReset</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_VARIABLE">$user</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="79">
        <token name="T_WHITESPACE">            </token>
        <token name="T_CLOSE_CURLY">}</token>
      </line>
      <line no="80">
        <token name="T_WHITESPACE">        </token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="81"/>
      <line no="82">
        <token name="T_WHITESPACE">        </token>
        <token name="T_COMMENT">// If the password was successfully reset, we will redirect the user back to</token>
      </line>
      <line no="83">
        <token name="T_WHITESPACE">        </token>
        <token name="T_COMMENT">// the application's home authenticated view. If there is an error we can</token>
      </line>
      <line no="84">
        <token name="T_WHITESPACE">        </token>
        <token name="T_COMMENT">// redirect them back to where they came from with their error message.</token>
      </line>
      <line no="85">
        <token name="T_WHITESPACE">        </token>
        <token name="T_IF">if</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_VARIABLE">$status</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_IS_EQUAL">==</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">Password</token>
        <token name="T_DOUBLE_COLON">::</token>
        <token name="T_STRING">PASSWORD_RESET</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_CURLY">{</token>
      </line>
      <line no="86">
        <token name="T_WHITESPACE">            </token>
        <token name="T_RETURN">return</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">redirect</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">route</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_CONSTANT_ENCAPSED_STRING">'login'</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">with</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_CONSTANT_ENCAPSED_STRING">'status'</token>
        <token name="T_COMMA">,</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">__</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_VARIABLE">$status</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="87">
        <token name="T_WHITESPACE">        </token>
        <token name="T_CLOSE_CURLY">}</token>
      </line>
      <line no="88"/>
      <line no="89">
        <token name="T_WHITESPACE">        </token>
        <token name="T_THROW">throw</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">ValidationException</token>
        <token name="T_DOUBLE_COLON">::</token>
        <token name="T_STRING">withMessages</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_OPEN_SQUARE">[</token>
      </line>
      <line no="90">
        <token name="T_WHITESPACE">            </token>
        <token name="T_CONSTANT_ENCAPSED_STRING">'email'</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_DOUBLE_ARROW">=&gt;</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_SQUARE">[</token>
        <token name="T_STRING">trans</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_VARIABLE">$status</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_CLOSE_SQUARE">]</token>
        <token name="T_COMMA">,</token>
      </line>
      <line no="91">
        <token name="T_WHITESPACE">        </token>
        <token name="T_CLOSE_SQUARE">]</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="92">
        <token name="T_WHITESPACE">    </token>
        <token name="T_CLOSE_CURLY">}</token>
      </line>
      <line no="93">
        <token name="T_CLOSE_CURLY">}</token>
      </line>
      <line no="94"/>
    </source>
  </file>
</phpunit>
