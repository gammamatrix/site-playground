<?xml version="1.0"?>
<phpunit xmlns="https://schema.phpunit.de/coverage/1.0">
  <file name="EmailVerificationRequest.php" path="/vendor/gammamatrix/playground-login-blade/src/Http/Requests">
    <totals>
      <lines total="52" comments="11" code="41" executable="18" executed="18" percent="100.00"/>
      <methods count="1" tested="1" percent="100.00"/>
      <functions count="0" tested="0" percent="0"/>
      <classes count="1" tested="1" percent="100.00"/>
      <traits count="0" tested="0" percent="0"/>
    </totals>
    <class name="Playground\Login\Blade\Http\Requests\EmailVerificationRequest" start="14" executable="18" executed="18" crap="13">
      <namespace name="Playground\Login\Blade\Http\Requests"/>
      <method name="authorize" signature="authorize()" start="21" end="50" crap="13" executable="18" executed="18" coverage="100"/>
    </class>
    <coverage>
      <line nr="23">
        <covered by="Tests\Feature\Playground\Login\Blade\Http\Controllers\Laravel\EmailVerificationRouteTest::test_email_can_be_verified"/>
        <covered by="Tests\Feature\Playground\Login\Blade\Http\Controllers\Laravel\EmailVerificationRouteTest::test_email_is_not_verified_with_invalid_hash"/>
        <covered by="Tests\Feature\Playground\Login\Blade\Http\Controllers\Laravel\EmailVerificationRouteTest::test_email_is_not_verified_with_invalid_user_id"/>
        <covered by="Tests\Feature\Playground\Login\Blade\Http\Controllers\Laravel\EmailVerificationRouteTest::test_email_verified_with_already_verified"/>
        <covered by="Tests\Feature\Playground\Login\Blade\Http\Controllers\Playground\EmailVerificationRouteTest::test_email_can_be_verified"/>
        <covered by="Tests\Feature\Playground\Login\Blade\Http\Controllers\Playground\EmailVerificationRouteTest::test_email_is_not_verified_with_invalid_hash"/>
        <covered by="Tests\Feature\Playground\Login\Blade\Http\Controllers\Playground\EmailVerificationRouteTest::test_email_is_not_verified_with_invalid_user_id"/>
        <covered by="Tests\Feature\Playground\Login\Blade\Http\Controllers\Playground\EmailVerificationRouteTest::test_email_verified_with_already_verified"/>
      </line>
      <line nr="25">
        <covered by="Tests\Feature\Playground\Login\Blade\Http\Controllers\Laravel\EmailVerificationRouteTest::test_email_can_be_verified"/>
        <covered by="Tests\Feature\Playground\Login\Blade\Http\Controllers\Laravel\EmailVerificationRouteTest::test_email_is_not_verified_with_invalid_hash"/>
        <covered by="Tests\Feature\Playground\Login\Blade\Http\Controllers\Laravel\EmailVerificationRouteTest::test_email_is_not_verified_with_invalid_user_id"/>
        <covered by="Tests\Feature\Playground\Login\Blade\Http\Controllers\Laravel\EmailVerificationRouteTest::test_email_verified_with_already_verified"/>
        <covered by="Tests\Feature\Playground\Login\Blade\Http\Controllers\Playground\EmailVerificationRouteTest::test_email_can_be_verified"/>
        <covered by="Tests\Feature\Playground\Login\Blade\Http\Controllers\Playground\EmailVerificationRouteTest::test_email_is_not_verified_with_invalid_hash"/>
        <covered by="Tests\Feature\Playground\Login\Blade\Http\Controllers\Playground\EmailVerificationRouteTest::test_email_is_not_verified_with_invalid_user_id"/>
        <covered by="Tests\Feature\Playground\Login\Blade\Http\Controllers\Playground\EmailVerificationRouteTest::test_email_verified_with_already_verified"/>
      </line>
      <line nr="26">
        <covered by="Tests\Feature\Playground\Login\Blade\Http\Controllers\Laravel\EmailVerificationRouteTest::test_email_can_be_verified"/>
        <covered by="Tests\Feature\Playground\Login\Blade\Http\Controllers\Laravel\EmailVerificationRouteTest::test_email_is_not_verified_with_invalid_hash"/>
        <covered by="Tests\Feature\Playground\Login\Blade\Http\Controllers\Laravel\EmailVerificationRouteTest::test_email_is_not_verified_with_invalid_user_id"/>
        <covered by="Tests\Feature\Playground\Login\Blade\Http\Controllers\Laravel\EmailVerificationRouteTest::test_email_verified_with_already_verified"/>
        <covered by="Tests\Feature\Playground\Login\Blade\Http\Controllers\Playground\EmailVerificationRouteTest::test_email_can_be_verified"/>
        <covered by="Tests\Feature\Playground\Login\Blade\Http\Controllers\Playground\EmailVerificationRouteTest::test_email_is_not_verified_with_invalid_hash"/>
        <covered by="Tests\Feature\Playground\Login\Blade\Http\Controllers\Playground\EmailVerificationRouteTest::test_email_is_not_verified_with_invalid_user_id"/>
        <covered by="Tests\Feature\Playground\Login\Blade\Http\Controllers\Playground\EmailVerificationRouteTest::test_email_verified_with_already_verified"/>
      </line>
      <line nr="28">
        <covered by="Tests\Feature\Playground\Login\Blade\Http\Controllers\Laravel\EmailVerificationRouteTest::test_email_can_be_verified"/>
        <covered by="Tests\Feature\Playground\Login\Blade\Http\Controllers\Laravel\EmailVerificationRouteTest::test_email_is_not_verified_with_invalid_hash"/>
        <covered by="Tests\Feature\Playground\Login\Blade\Http\Controllers\Laravel\EmailVerificationRouteTest::test_email_is_not_verified_with_invalid_user_id"/>
        <covered by="Tests\Feature\Playground\Login\Blade\Http\Controllers\Laravel\EmailVerificationRouteTest::test_email_verified_with_already_verified"/>
        <covered by="Tests\Feature\Playground\Login\Blade\Http\Controllers\Playground\EmailVerificationRouteTest::test_email_can_be_verified"/>
        <covered by="Tests\Feature\Playground\Login\Blade\Http\Controllers\Playground\EmailVerificationRouteTest::test_email_is_not_verified_with_invalid_hash"/>
        <covered by="Tests\Feature\Playground\Login\Blade\Http\Controllers\Playground\EmailVerificationRouteTest::test_email_is_not_verified_with_invalid_user_id"/>
        <covered by="Tests\Feature\Playground\Login\Blade\Http\Controllers\Playground\EmailVerificationRouteTest::test_email_verified_with_already_verified"/>
      </line>
      <line nr="29">
        <covered by="Tests\Feature\Playground\Login\Blade\Http\Controllers\Laravel\EmailVerificationRouteTest::test_email_can_be_verified"/>
        <covered by="Tests\Feature\Playground\Login\Blade\Http\Controllers\Laravel\EmailVerificationRouteTest::test_email_is_not_verified_with_invalid_hash"/>
        <covered by="Tests\Feature\Playground\Login\Blade\Http\Controllers\Laravel\EmailVerificationRouteTest::test_email_is_not_verified_with_invalid_user_id"/>
        <covered by="Tests\Feature\Playground\Login\Blade\Http\Controllers\Laravel\EmailVerificationRouteTest::test_email_verified_with_already_verified"/>
        <covered by="Tests\Feature\Playground\Login\Blade\Http\Controllers\Playground\EmailVerificationRouteTest::test_email_can_be_verified"/>
        <covered by="Tests\Feature\Playground\Login\Blade\Http\Controllers\Playground\EmailVerificationRouteTest::test_email_is_not_verified_with_invalid_hash"/>
        <covered by="Tests\Feature\Playground\Login\Blade\Http\Controllers\Playground\EmailVerificationRouteTest::test_email_is_not_verified_with_invalid_user_id"/>
        <covered by="Tests\Feature\Playground\Login\Blade\Http\Controllers\Playground\EmailVerificationRouteTest::test_email_verified_with_already_verified"/>
      </line>
      <line nr="31">
        <covered by="Tests\Feature\Playground\Login\Blade\Http\Controllers\Laravel\EmailVerificationRouteTest::test_email_can_be_verified"/>
        <covered by="Tests\Feature\Playground\Login\Blade\Http\Controllers\Laravel\EmailVerificationRouteTest::test_email_is_not_verified_with_invalid_hash"/>
        <covered by="Tests\Feature\Playground\Login\Blade\Http\Controllers\Laravel\EmailVerificationRouteTest::test_email_is_not_verified_with_invalid_user_id"/>
        <covered by="Tests\Feature\Playground\Login\Blade\Http\Controllers\Laravel\EmailVerificationRouteTest::test_email_verified_with_already_verified"/>
        <covered by="Tests\Feature\Playground\Login\Blade\Http\Controllers\Playground\EmailVerificationRouteTest::test_email_can_be_verified"/>
        <covered by="Tests\Feature\Playground\Login\Blade\Http\Controllers\Playground\EmailVerificationRouteTest::test_email_is_not_verified_with_invalid_hash"/>
        <covered by="Tests\Feature\Playground\Login\Blade\Http\Controllers\Playground\EmailVerificationRouteTest::test_email_is_not_verified_with_invalid_user_id"/>
        <covered by="Tests\Feature\Playground\Login\Blade\Http\Controllers\Playground\EmailVerificationRouteTest::test_email_verified_with_already_verified"/>
      </line>
      <line nr="32">
        <covered by="Tests\Feature\Playground\Login\Blade\Http\Controllers\Laravel\EmailVerificationRouteTest::test_email_can_be_verified"/>
        <covered by="Tests\Feature\Playground\Login\Blade\Http\Controllers\Laravel\EmailVerificationRouteTest::test_email_is_not_verified_with_invalid_hash"/>
        <covered by="Tests\Feature\Playground\Login\Blade\Http\Controllers\Laravel\EmailVerificationRouteTest::test_email_is_not_verified_with_invalid_user_id"/>
        <covered by="Tests\Feature\Playground\Login\Blade\Http\Controllers\Laravel\EmailVerificationRouteTest::test_email_verified_with_already_verified"/>
        <covered by="Tests\Feature\Playground\Login\Blade\Http\Controllers\Playground\EmailVerificationRouteTest::test_email_can_be_verified"/>
        <covered by="Tests\Feature\Playground\Login\Blade\Http\Controllers\Playground\EmailVerificationRouteTest::test_email_is_not_verified_with_invalid_hash"/>
        <covered by="Tests\Feature\Playground\Login\Blade\Http\Controllers\Playground\EmailVerificationRouteTest::test_email_is_not_verified_with_invalid_user_id"/>
        <covered by="Tests\Feature\Playground\Login\Blade\Http\Controllers\Playground\EmailVerificationRouteTest::test_email_verified_with_already_verified"/>
      </line>
      <line nr="33">
        <covered by="Tests\Feature\Playground\Login\Blade\Http\Controllers\Laravel\EmailVerificationRouteTest::test_email_can_be_verified"/>
        <covered by="Tests\Feature\Playground\Login\Blade\Http\Controllers\Laravel\EmailVerificationRouteTest::test_email_is_not_verified_with_invalid_hash"/>
        <covered by="Tests\Feature\Playground\Login\Blade\Http\Controllers\Laravel\EmailVerificationRouteTest::test_email_is_not_verified_with_invalid_user_id"/>
        <covered by="Tests\Feature\Playground\Login\Blade\Http\Controllers\Laravel\EmailVerificationRouteTest::test_email_verified_with_already_verified"/>
        <covered by="Tests\Feature\Playground\Login\Blade\Http\Controllers\Playground\EmailVerificationRouteTest::test_email_can_be_verified"/>
        <covered by="Tests\Feature\Playground\Login\Blade\Http\Controllers\Playground\EmailVerificationRouteTest::test_email_is_not_verified_with_invalid_hash"/>
        <covered by="Tests\Feature\Playground\Login\Blade\Http\Controllers\Playground\EmailVerificationRouteTest::test_email_is_not_verified_with_invalid_user_id"/>
        <covered by="Tests\Feature\Playground\Login\Blade\Http\Controllers\Playground\EmailVerificationRouteTest::test_email_verified_with_already_verified"/>
      </line>
      <line nr="34">
        <covered by="Tests\Feature\Playground\Login\Blade\Http\Controllers\Laravel\EmailVerificationRouteTest::test_email_can_be_verified"/>
        <covered by="Tests\Feature\Playground\Login\Blade\Http\Controllers\Laravel\EmailVerificationRouteTest::test_email_is_not_verified_with_invalid_hash"/>
        <covered by="Tests\Feature\Playground\Login\Blade\Http\Controllers\Laravel\EmailVerificationRouteTest::test_email_is_not_verified_with_invalid_user_id"/>
        <covered by="Tests\Feature\Playground\Login\Blade\Http\Controllers\Laravel\EmailVerificationRouteTest::test_email_verified_with_already_verified"/>
        <covered by="Tests\Feature\Playground\Login\Blade\Http\Controllers\Playground\EmailVerificationRouteTest::test_email_can_be_verified"/>
        <covered by="Tests\Feature\Playground\Login\Blade\Http\Controllers\Playground\EmailVerificationRouteTest::test_email_is_not_verified_with_invalid_hash"/>
        <covered by="Tests\Feature\Playground\Login\Blade\Http\Controllers\Playground\EmailVerificationRouteTest::test_email_is_not_verified_with_invalid_user_id"/>
        <covered by="Tests\Feature\Playground\Login\Blade\Http\Controllers\Playground\EmailVerificationRouteTest::test_email_verified_with_already_verified"/>
      </line>
      <line nr="35">
        <covered by="Tests\Feature\Playground\Login\Blade\Http\Controllers\Laravel\EmailVerificationRouteTest::test_email_can_be_verified"/>
        <covered by="Tests\Feature\Playground\Login\Blade\Http\Controllers\Laravel\EmailVerificationRouteTest::test_email_is_not_verified_with_invalid_hash"/>
        <covered by="Tests\Feature\Playground\Login\Blade\Http\Controllers\Laravel\EmailVerificationRouteTest::test_email_is_not_verified_with_invalid_user_id"/>
        <covered by="Tests\Feature\Playground\Login\Blade\Http\Controllers\Laravel\EmailVerificationRouteTest::test_email_verified_with_already_verified"/>
        <covered by="Tests\Feature\Playground\Login\Blade\Http\Controllers\Playground\EmailVerificationRouteTest::test_email_can_be_verified"/>
        <covered by="Tests\Feature\Playground\Login\Blade\Http\Controllers\Playground\EmailVerificationRouteTest::test_email_is_not_verified_with_invalid_hash"/>
        <covered by="Tests\Feature\Playground\Login\Blade\Http\Controllers\Playground\EmailVerificationRouteTest::test_email_is_not_verified_with_invalid_user_id"/>
        <covered by="Tests\Feature\Playground\Login\Blade\Http\Controllers\Playground\EmailVerificationRouteTest::test_email_verified_with_already_verified"/>
      </line>
      <line nr="37">
        <covered by="Tests\Feature\Playground\Login\Blade\Http\Controllers\Laravel\EmailVerificationRouteTest::test_email_is_not_verified_with_invalid_user_id"/>
        <covered by="Tests\Feature\Playground\Login\Blade\Http\Controllers\Playground\EmailVerificationRouteTest::test_email_is_not_verified_with_invalid_user_id"/>
      </line>
      <line nr="40">
        <covered by="Tests\Feature\Playground\Login\Blade\Http\Controllers\Laravel\EmailVerificationRouteTest::test_email_can_be_verified"/>
        <covered by="Tests\Feature\Playground\Login\Blade\Http\Controllers\Laravel\EmailVerificationRouteTest::test_email_is_not_verified_with_invalid_hash"/>
        <covered by="Tests\Feature\Playground\Login\Blade\Http\Controllers\Laravel\EmailVerificationRouteTest::test_email_verified_with_already_verified"/>
        <covered by="Tests\Feature\Playground\Login\Blade\Http\Controllers\Playground\EmailVerificationRouteTest::test_email_can_be_verified"/>
        <covered by="Tests\Feature\Playground\Login\Blade\Http\Controllers\Playground\EmailVerificationRouteTest::test_email_is_not_verified_with_invalid_hash"/>
        <covered by="Tests\Feature\Playground\Login\Blade\Http\Controllers\Playground\EmailVerificationRouteTest::test_email_verified_with_already_verified"/>
      </line>
      <line nr="41">
        <covered by="Tests\Feature\Playground\Login\Blade\Http\Controllers\Laravel\EmailVerificationRouteTest::test_email_can_be_verified"/>
        <covered by="Tests\Feature\Playground\Login\Blade\Http\Controllers\Laravel\EmailVerificationRouteTest::test_email_is_not_verified_with_invalid_hash"/>
        <covered by="Tests\Feature\Playground\Login\Blade\Http\Controllers\Laravel\EmailVerificationRouteTest::test_email_verified_with_already_verified"/>
        <covered by="Tests\Feature\Playground\Login\Blade\Http\Controllers\Playground\EmailVerificationRouteTest::test_email_can_be_verified"/>
        <covered by="Tests\Feature\Playground\Login\Blade\Http\Controllers\Playground\EmailVerificationRouteTest::test_email_is_not_verified_with_invalid_hash"/>
        <covered by="Tests\Feature\Playground\Login\Blade\Http\Controllers\Playground\EmailVerificationRouteTest::test_email_verified_with_already_verified"/>
      </line>
      <line nr="42">
        <covered by="Tests\Feature\Playground\Login\Blade\Http\Controllers\Laravel\EmailVerificationRouteTest::test_email_can_be_verified"/>
        <covered by="Tests\Feature\Playground\Login\Blade\Http\Controllers\Laravel\EmailVerificationRouteTest::test_email_is_not_verified_with_invalid_hash"/>
        <covered by="Tests\Feature\Playground\Login\Blade\Http\Controllers\Laravel\EmailVerificationRouteTest::test_email_verified_with_already_verified"/>
        <covered by="Tests\Feature\Playground\Login\Blade\Http\Controllers\Playground\EmailVerificationRouteTest::test_email_can_be_verified"/>
        <covered by="Tests\Feature\Playground\Login\Blade\Http\Controllers\Playground\EmailVerificationRouteTest::test_email_is_not_verified_with_invalid_hash"/>
        <covered by="Tests\Feature\Playground\Login\Blade\Http\Controllers\Playground\EmailVerificationRouteTest::test_email_verified_with_already_verified"/>
      </line>
      <line nr="43">
        <covered by="Tests\Feature\Playground\Login\Blade\Http\Controllers\Laravel\EmailVerificationRouteTest::test_email_can_be_verified"/>
        <covered by="Tests\Feature\Playground\Login\Blade\Http\Controllers\Laravel\EmailVerificationRouteTest::test_email_is_not_verified_with_invalid_hash"/>
        <covered by="Tests\Feature\Playground\Login\Blade\Http\Controllers\Laravel\EmailVerificationRouteTest::test_email_verified_with_already_verified"/>
        <covered by="Tests\Feature\Playground\Login\Blade\Http\Controllers\Playground\EmailVerificationRouteTest::test_email_can_be_verified"/>
        <covered by="Tests\Feature\Playground\Login\Blade\Http\Controllers\Playground\EmailVerificationRouteTest::test_email_is_not_verified_with_invalid_hash"/>
        <covered by="Tests\Feature\Playground\Login\Blade\Http\Controllers\Playground\EmailVerificationRouteTest::test_email_verified_with_already_verified"/>
      </line>
      <line nr="44">
        <covered by="Tests\Feature\Playground\Login\Blade\Http\Controllers\Laravel\EmailVerificationRouteTest::test_email_can_be_verified"/>
        <covered by="Tests\Feature\Playground\Login\Blade\Http\Controllers\Laravel\EmailVerificationRouteTest::test_email_is_not_verified_with_invalid_hash"/>
        <covered by="Tests\Feature\Playground\Login\Blade\Http\Controllers\Laravel\EmailVerificationRouteTest::test_email_verified_with_already_verified"/>
        <covered by="Tests\Feature\Playground\Login\Blade\Http\Controllers\Playground\EmailVerificationRouteTest::test_email_can_be_verified"/>
        <covered by="Tests\Feature\Playground\Login\Blade\Http\Controllers\Playground\EmailVerificationRouteTest::test_email_is_not_verified_with_invalid_hash"/>
        <covered by="Tests\Feature\Playground\Login\Blade\Http\Controllers\Playground\EmailVerificationRouteTest::test_email_verified_with_already_verified"/>
      </line>
      <line nr="46">
        <covered by="Tests\Feature\Playground\Login\Blade\Http\Controllers\Laravel\EmailVerificationRouteTest::test_email_is_not_verified_with_invalid_hash"/>
        <covered by="Tests\Feature\Playground\Login\Blade\Http\Controllers\Playground\EmailVerificationRouteTest::test_email_is_not_verified_with_invalid_hash"/>
      </line>
      <line nr="49">
        <covered by="Tests\Feature\Playground\Login\Blade\Http\Controllers\Laravel\EmailVerificationRouteTest::test_email_can_be_verified"/>
        <covered by="Tests\Feature\Playground\Login\Blade\Http\Controllers\Laravel\EmailVerificationRouteTest::test_email_verified_with_already_verified"/>
        <covered by="Tests\Feature\Playground\Login\Blade\Http\Controllers\Playground\EmailVerificationRouteTest::test_email_can_be_verified"/>
        <covered by="Tests\Feature\Playground\Login\Blade\Http\Controllers\Playground\EmailVerificationRouteTest::test_email_verified_with_already_verified"/>
      </line>
    </coverage>
    <source>
      <line no="1">
        <token name="T_OPEN_TAG">&lt;?php</token>
      </line>
      <line no="2"/>
      <line no="3">
        <token name="T_DECLARE">declare</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_STRING">strict_types</token>
        <token name="T_EQUAL">=</token>
        <token name="T_LNUMBER">1</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="4">
        <token name="T_DOC_COMMENT">/**</token>
      </line>
      <line no="5">
        <token name="T_DOC_COMMENT"> * Playground</token>
      </line>
      <line no="6">
        <token name="T_DOC_COMMENT"> */</token>
      </line>
      <line no="7">
        <token name="T_NAMESPACE">namespace</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_NAME_QUALIFIED">Playground\Login\Blade\Http\Requests</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="8"/>
      <line no="9">
        <token name="T_USE">use</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_NAME_QUALIFIED">Illuminate\Foundation\Auth\EmailVerificationRequest</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_AS">as</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">BaseRequest</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="10"/>
      <line no="11">
        <token name="T_DOC_COMMENT">/**</token>
      </line>
      <line no="12">
        <token name="T_DOC_COMMENT"> * \Playground\Login\Blade\Http\Requests\EmailVerificationRequest</token>
      </line>
      <line no="13">
        <token name="T_DOC_COMMENT"> */</token>
      </line>
      <line no="14">
        <token name="T_CLASS">class</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">EmailVerificationRequest</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_EXTENDS">extends</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">BaseRequest</token>
      </line>
      <line no="15">
        <token name="T_OPEN_CURLY">{</token>
      </line>
      <line no="16">
        <token name="T_WHITESPACE">    </token>
        <token name="T_DOC_COMMENT">/**</token>
      </line>
      <line no="17">
        <token name="T_DOC_COMMENT">     * Determine if the user is authorized to make this request.</token>
      </line>
      <line no="18">
        <token name="T_DOC_COMMENT">     *</token>
      </line>
      <line no="19">
        <token name="T_DOC_COMMENT">     * @return bool</token>
      </line>
      <line no="20">
        <token name="T_DOC_COMMENT">     */</token>
      </line>
      <line no="21">
        <token name="T_WHITESPACE">    </token>
        <token name="T_PUBLIC">public</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_FUNCTION">function</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">authorize</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_CLOSE_BRACKET">)</token>
      </line>
      <line no="22">
        <token name="T_WHITESPACE">    </token>
        <token name="T_OPEN_CURLY">{</token>
      </line>
      <line no="23">
        <token name="T_WHITESPACE">        </token>
        <token name="T_VARIABLE">$user</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_EQUAL">=</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$this</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">user</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="24"/>
      <line no="25">
        <token name="T_WHITESPACE">        </token>
        <token name="T_VARIABLE">$id</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_EQUAL">=</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$this</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">route</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_CONSTANT_ENCAPSED_STRING">'id'</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="26">
        <token name="T_WHITESPACE">        </token>
        <token name="T_VARIABLE">$hash</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_EQUAL">=</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$this</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">route</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_CONSTANT_ENCAPSED_STRING">'hash'</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="27"/>
      <line no="28">
        <token name="T_WHITESPACE">        </token>
        <token name="T_VARIABLE">$userId</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_EQUAL">=</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$user</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_QUESTION_MARK">?</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$user</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">getAttributeValue</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_CONSTANT_ENCAPSED_STRING">'id'</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_COLON">:</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">null</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="29">
        <token name="T_WHITESPACE">        </token>
        <token name="T_VARIABLE">$userEmail</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_EQUAL">=</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$user</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_QUESTION_MARK">?</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$user</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">getAttributeValue</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_CONSTANT_ENCAPSED_STRING">'email'</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_COLON">:</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">null</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="30"/>
      <line no="31">
        <token name="T_WHITESPACE">        </token>
        <token name="T_IF">if</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_EXCLAMATION_MARK">!</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">is_scalar</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_VARIABLE">$id</token>
        <token name="T_CLOSE_BRACKET">)</token>
      </line>
      <line no="32">
        <token name="T_WHITESPACE">            </token>
        <token name="T_BOOLEAN_OR">||</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_EXCLAMATION_MARK">!</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$id</token>
      </line>
      <line no="33">
        <token name="T_WHITESPACE">            </token>
        <token name="T_BOOLEAN_OR">||</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_EXCLAMATION_MARK">!</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">is_scalar</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_VARIABLE">$userId</token>
        <token name="T_CLOSE_BRACKET">)</token>
      </line>
      <line no="34">
        <token name="T_WHITESPACE">            </token>
        <token name="T_BOOLEAN_OR">||</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_EXCLAMATION_MARK">!</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$userId</token>
      </line>
      <line no="35">
        <token name="T_WHITESPACE">            </token>
        <token name="T_BOOLEAN_OR">||</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_EXCLAMATION_MARK">!</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">hash_equals</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_STRING">strval</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_VARIABLE">$id</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_COMMA">,</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">strval</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_VARIABLE">$userId</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_CLOSE_BRACKET">)</token>
      </line>
      <line no="36">
        <token name="T_WHITESPACE">        </token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_CURLY">{</token>
      </line>
      <line no="37">
        <token name="T_WHITESPACE">            </token>
        <token name="T_RETURN">return</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">false</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="38">
        <token name="T_WHITESPACE">        </token>
        <token name="T_CLOSE_CURLY">}</token>
      </line>
      <line no="39"/>
      <line no="40">
        <token name="T_WHITESPACE">        </token>
        <token name="T_IF">if</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_EXCLAMATION_MARK">!</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">is_string</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_VARIABLE">$hash</token>
        <token name="T_CLOSE_BRACKET">)</token>
      </line>
      <line no="41">
        <token name="T_WHITESPACE">            </token>
        <token name="T_BOOLEAN_OR">||</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_EXCLAMATION_MARK">!</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$hash</token>
      </line>
      <line no="42">
        <token name="T_WHITESPACE">            </token>
        <token name="T_BOOLEAN_OR">||</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_EXCLAMATION_MARK">!</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">is_string</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_VARIABLE">$userEmail</token>
        <token name="T_CLOSE_BRACKET">)</token>
      </line>
      <line no="43">
        <token name="T_WHITESPACE">            </token>
        <token name="T_BOOLEAN_OR">||</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_EXCLAMATION_MARK">!</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$userEmail</token>
      </line>
      <line no="44">
        <token name="T_WHITESPACE">            </token>
        <token name="T_BOOLEAN_OR">||</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_EXCLAMATION_MARK">!</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">hash_equals</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_VARIABLE">$hash</token>
        <token name="T_COMMA">,</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">sha1</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_VARIABLE">$userEmail</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_CLOSE_BRACKET">)</token>
      </line>
      <line no="45">
        <token name="T_WHITESPACE">        </token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_CURLY">{</token>
      </line>
      <line no="46">
        <token name="T_WHITESPACE">            </token>
        <token name="T_RETURN">return</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">false</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="47">
        <token name="T_WHITESPACE">        </token>
        <token name="T_CLOSE_CURLY">}</token>
      </line>
      <line no="48"/>
      <line no="49">
        <token name="T_WHITESPACE">        </token>
        <token name="T_RETURN">return</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">true</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="50">
        <token name="T_WHITESPACE">    </token>
        <token name="T_CLOSE_CURLY">}</token>
      </line>
      <line no="51">
        <token name="T_CLOSE_CURLY">}</token>
      </line>
      <line no="52"/>
    </source>
  </file>
</phpunit>
