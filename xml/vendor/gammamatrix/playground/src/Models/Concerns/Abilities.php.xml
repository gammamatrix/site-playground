<?xml version="1.0"?>
<phpunit xmlns="https://schema.phpunit.de/coverage/1.0">
  <file name="Abilities.php" path="/vendor/gammamatrix/playground/src/Models/Concerns">
    <totals>
      <lines total="78" comments="21" code="57" executable="22" executed="22" percent="100.00"/>
      <methods count="3" tested="3" percent="100.00"/>
      <functions count="0" tested="0" percent="0"/>
      <classes count="0" tested="1" percent="0"/>
      <traits count="1" tested="0" percent="0.00"/>
    </totals>
    <trait name="Playground\Models\Concerns\Abilities" start="12" executable="22" executed="22" crap="14">
      <namespace name="Playground\Models\Concerns"/>
      <method name="hasAbility" signature="hasAbility(mixed $ability): bool" start="19" end="28" crap="4" executable="4" executed="4" coverage="100"/>
      <method name="addAbility" signature="addAbility(mixed $ability): void" start="35" end="52" crap="5" executable="9" executed="9" coverage="100"/>
      <method name="removeAbility" signature="removeAbility(mixed $ability): void" start="59" end="76" crap="5" executable="9" executed="9" coverage="100"/>
    </trait>
    <coverage>
      <line nr="21">
        <covered by="Tests\Unit\Playground\Models\User\ModelTest::test_add_has_and_remove_Abilities"/>
        <covered by="Tests\Feature\Playground\Models\User\ModelTest::test_save_model_in_database"/>
      </line>
      <line nr="22">
        <covered by="Tests\Unit\Playground\Models\User\ModelTest::test_add_has_and_remove_Abilities"/>
      </line>
      <line nr="25">
        <covered by="Tests\Unit\Playground\Models\User\ModelTest::test_add_has_and_remove_Abilities"/>
        <covered by="Tests\Feature\Playground\Models\User\ModelTest::test_save_model_in_database"/>
      </line>
      <line nr="27">
        <covered by="Tests\Unit\Playground\Models\User\ModelTest::test_add_has_and_remove_Abilities"/>
        <covered by="Tests\Feature\Playground\Models\User\ModelTest::test_save_model_in_database"/>
      </line>
      <line nr="37">
        <covered by="Tests\Unit\Playground\Models\User\ModelTest::test_add_has_and_remove_Abilities"/>
        <covered by="Tests\Feature\Playground\Models\User\ModelTest::test_save_model_in_database"/>
      </line>
      <line nr="38">
        <covered by="Tests\Unit\Playground\Models\User\ModelTest::test_add_has_and_remove_Abilities"/>
        <covered by="Tests\Feature\Playground\Models\User\ModelTest::test_save_model_in_database"/>
      </line>
      <line nr="39">
        <covered by="Tests\Unit\Playground\Models\User\ModelTest::test_add_has_and_remove_Abilities"/>
      </line>
      <line nr="42">
        <covered by="Tests\Unit\Playground\Models\User\ModelTest::test_add_has_and_remove_Abilities"/>
        <covered by="Tests\Feature\Playground\Models\User\ModelTest::test_save_model_in_database"/>
      </line>
      <line nr="43">
        <covered by="Tests\Unit\Playground\Models\User\ModelTest::test_add_has_and_remove_Abilities"/>
        <covered by="Tests\Feature\Playground\Models\User\ModelTest::test_save_model_in_database"/>
      </line>
      <line nr="44">
        <covered by="Tests\Unit\Playground\Models\User\ModelTest::test_add_has_and_remove_Abilities"/>
        <covered by="Tests\Feature\Playground\Models\User\ModelTest::test_save_model_in_database"/>
      </line>
      <line nr="46">
        <covered by="Tests\Unit\Playground\Models\User\ModelTest::test_add_has_and_remove_Abilities"/>
      </line>
      <line nr="49">
        <covered by="Tests\Unit\Playground\Models\User\ModelTest::test_add_has_and_remove_Abilities"/>
        <covered by="Tests\Feature\Playground\Models\User\ModelTest::test_save_model_in_database"/>
      </line>
      <line nr="51">
        <covered by="Tests\Unit\Playground\Models\User\ModelTest::test_add_has_and_remove_Abilities"/>
        <covered by="Tests\Feature\Playground\Models\User\ModelTest::test_save_model_in_database"/>
      </line>
      <line nr="61">
        <covered by="Tests\Unit\Playground\Models\User\ModelTest::test_add_has_and_remove_Abilities"/>
      </line>
      <line nr="62">
        <covered by="Tests\Unit\Playground\Models\User\ModelTest::test_add_has_and_remove_Abilities"/>
      </line>
      <line nr="63">
        <covered by="Tests\Unit\Playground\Models\User\ModelTest::test_add_has_and_remove_Abilities"/>
      </line>
      <line nr="66">
        <covered by="Tests\Unit\Playground\Models\User\ModelTest::test_add_has_and_remove_Abilities"/>
      </line>
      <line nr="67">
        <covered by="Tests\Unit\Playground\Models\User\ModelTest::test_add_has_and_remove_Abilities"/>
      </line>
      <line nr="68">
        <covered by="Tests\Unit\Playground\Models\User\ModelTest::test_add_has_and_remove_Abilities"/>
      </line>
      <line nr="70">
        <covered by="Tests\Unit\Playground\Models\User\ModelTest::test_add_has_and_remove_Abilities"/>
      </line>
      <line nr="73">
        <covered by="Tests\Unit\Playground\Models\User\ModelTest::test_add_has_and_remove_Abilities"/>
      </line>
      <line nr="75">
        <covered by="Tests\Unit\Playground\Models\User\ModelTest::test_add_has_and_remove_Abilities"/>
      </line>
    </coverage>
    <source>
      <line no="1">
        <token name="T_OPEN_TAG">&lt;?php</token>
      </line>
      <line no="2"/>
      <line no="3">
        <token name="T_DECLARE">declare</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_STRING">strict_types</token>
        <token name="T_EQUAL">=</token>
        <token name="T_LNUMBER">1</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="4">
        <token name="T_DOC_COMMENT">/**</token>
      </line>
      <line no="5">
        <token name="T_DOC_COMMENT"> * Playground</token>
      </line>
      <line no="6">
        <token name="T_DOC_COMMENT"> */</token>
      </line>
      <line no="7">
        <token name="T_NAMESPACE">namespace</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_NAME_QUALIFIED">Playground\Models\Concerns</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="8"/>
      <line no="9">
        <token name="T_DOC_COMMENT">/**</token>
      </line>
      <line no="10">
        <token name="T_DOC_COMMENT"> * \Playground\Models\Concerns\Abilities</token>
      </line>
      <line no="11">
        <token name="T_DOC_COMMENT"> */</token>
      </line>
      <line no="12">
        <token name="T_TRAIT">trait</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">Abilities</token>
      </line>
      <line no="13">
        <token name="T_OPEN_CURLY">{</token>
      </line>
      <line no="14">
        <token name="T_WHITESPACE">    </token>
        <token name="T_DOC_COMMENT">/**</token>
      </line>
      <line no="15">
        <token name="T_DOC_COMMENT">     * Checks to see if the user has the ability.</token>
      </line>
      <line no="16">
        <token name="T_DOC_COMMENT">     *</token>
      </line>
      <line no="17">
        <token name="T_DOC_COMMENT">     * @param mixed $ability The ability to check.</token>
      </line>
      <line no="18">
        <token name="T_DOC_COMMENT">     */</token>
      </line>
      <line no="19">
        <token name="T_WHITESPACE">    </token>
        <token name="T_PUBLIC">public</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_FUNCTION">function</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">hasAbility</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_STRING">mixed</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$ability</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_COLON">:</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">bool</token>
      </line>
      <line no="20">
        <token name="T_WHITESPACE">    </token>
        <token name="T_OPEN_CURLY">{</token>
      </line>
      <line no="21">
        <token name="T_WHITESPACE">        </token>
        <token name="T_IF">if</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_EMPTY">empty</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_VARIABLE">$ability</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_BOOLEAN_OR">||</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_EXCLAMATION_MARK">!</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">is_string</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_VARIABLE">$ability</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_CURLY">{</token>
      </line>
      <line no="22">
        <token name="T_WHITESPACE">            </token>
        <token name="T_RETURN">return</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">false</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="23">
        <token name="T_WHITESPACE">        </token>
        <token name="T_CLOSE_CURLY">}</token>
      </line>
      <line no="24"/>
      <line no="25">
        <token name="T_WHITESPACE">        </token>
        <token name="T_VARIABLE">$abilities</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_EQUAL">=</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$this</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">getAttribute</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_CONSTANT_ENCAPSED_STRING">'abilities'</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="26"/>
      <line no="27">
        <token name="T_WHITESPACE">        </token>
        <token name="T_RETURN">return</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">is_array</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_VARIABLE">$abilities</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_BOOLEAN_AND">&amp;&amp;</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">in_array</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_VARIABLE">$ability</token>
        <token name="T_COMMA">,</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$abilities</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="28">
        <token name="T_WHITESPACE">    </token>
        <token name="T_CLOSE_CURLY">}</token>
      </line>
      <line no="29"/>
      <line no="30">
        <token name="T_WHITESPACE">    </token>
        <token name="T_DOC_COMMENT">/**</token>
      </line>
      <line no="31">
        <token name="T_DOC_COMMENT">     * Add a ability to the model.</token>
      </line>
      <line no="32">
        <token name="T_DOC_COMMENT">     *</token>
      </line>
      <line no="33">
        <token name="T_DOC_COMMENT">     * @param mixed $ability The ability to add to the model.</token>
      </line>
      <line no="34">
        <token name="T_DOC_COMMENT">     */</token>
      </line>
      <line no="35">
        <token name="T_WHITESPACE">    </token>
        <token name="T_PUBLIC">public</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_FUNCTION">function</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">addAbility</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_STRING">mixed</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$ability</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_COLON">:</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">void</token>
      </line>
      <line no="36">
        <token name="T_WHITESPACE">    </token>
        <token name="T_OPEN_CURLY">{</token>
      </line>
      <line no="37">
        <token name="T_WHITESPACE">        </token>
        <token name="T_VARIABLE">$abilities</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_EQUAL">=</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$this</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">getAttribute</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_CONSTANT_ENCAPSED_STRING">'abilities'</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="38">
        <token name="T_WHITESPACE">        </token>
        <token name="T_IF">if</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_EXCLAMATION_MARK">!</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">is_array</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_VARIABLE">$abilities</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_CURLY">{</token>
      </line>
      <line no="39">
        <token name="T_WHITESPACE">            </token>
        <token name="T_VARIABLE">$abilities</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_EQUAL">=</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_SQUARE">[</token>
        <token name="T_CLOSE_SQUARE">]</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="40">
        <token name="T_WHITESPACE">        </token>
        <token name="T_CLOSE_CURLY">}</token>
      </line>
      <line no="41"/>
      <line no="42">
        <token name="T_WHITESPACE">        </token>
        <token name="T_IF">if</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_EMPTY">empty</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_VARIABLE">$ability</token>
        <token name="T_CLOSE_BRACKET">)</token>
      </line>
      <line no="43">
        <token name="T_WHITESPACE">            </token>
        <token name="T_BOOLEAN_OR">||</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_EXCLAMATION_MARK">!</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">is_string</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_VARIABLE">$ability</token>
        <token name="T_CLOSE_BRACKET">)</token>
      </line>
      <line no="44">
        <token name="T_WHITESPACE">            </token>
        <token name="T_BOOLEAN_OR">||</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">in_array</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_VARIABLE">$ability</token>
        <token name="T_COMMA">,</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$abilities</token>
        <token name="T_CLOSE_BRACKET">)</token>
      </line>
      <line no="45">
        <token name="T_WHITESPACE">        </token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_CURLY">{</token>
      </line>
      <line no="46">
        <token name="T_WHITESPACE">            </token>
        <token name="T_RETURN">return</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="47">
        <token name="T_WHITESPACE">        </token>
        <token name="T_CLOSE_CURLY">}</token>
      </line>
      <line no="48"/>
      <line no="49">
        <token name="T_WHITESPACE">        </token>
        <token name="T_VARIABLE">$abilities</token>
        <token name="T_OPEN_SQUARE">[</token>
        <token name="T_CLOSE_SQUARE">]</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_EQUAL">=</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$ability</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="50"/>
      <line no="51">
        <token name="T_WHITESPACE">        </token>
        <token name="T_VARIABLE">$this</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">setAttribute</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_CONSTANT_ENCAPSED_STRING">'abilities'</token>
        <token name="T_COMMA">,</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$abilities</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="52">
        <token name="T_WHITESPACE">    </token>
        <token name="T_CLOSE_CURLY">}</token>
      </line>
      <line no="53"/>
      <line no="54">
        <token name="T_WHITESPACE">    </token>
        <token name="T_DOC_COMMENT">/**</token>
      </line>
      <line no="55">
        <token name="T_DOC_COMMENT">     * Remove a ability from the model.</token>
      </line>
      <line no="56">
        <token name="T_DOC_COMMENT">     *</token>
      </line>
      <line no="57">
        <token name="T_DOC_COMMENT">     * @param mixed $ability The ability to remove from the model.</token>
      </line>
      <line no="58">
        <token name="T_DOC_COMMENT">     */</token>
      </line>
      <line no="59">
        <token name="T_WHITESPACE">    </token>
        <token name="T_PUBLIC">public</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_FUNCTION">function</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">removeAbility</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_STRING">mixed</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$ability</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_COLON">:</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">void</token>
      </line>
      <line no="60">
        <token name="T_WHITESPACE">    </token>
        <token name="T_OPEN_CURLY">{</token>
      </line>
      <line no="61">
        <token name="T_WHITESPACE">        </token>
        <token name="T_VARIABLE">$abilities</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_EQUAL">=</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$this</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">getAttribute</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_CONSTANT_ENCAPSED_STRING">'abilities'</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="62">
        <token name="T_WHITESPACE">        </token>
        <token name="T_IF">if</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_EXCLAMATION_MARK">!</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">is_array</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_VARIABLE">$abilities</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_CURLY">{</token>
      </line>
      <line no="63">
        <token name="T_WHITESPACE">            </token>
        <token name="T_VARIABLE">$abilities</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_EQUAL">=</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_SQUARE">[</token>
        <token name="T_CLOSE_SQUARE">]</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="64">
        <token name="T_WHITESPACE">        </token>
        <token name="T_CLOSE_CURLY">}</token>
      </line>
      <line no="65"/>
      <line no="66">
        <token name="T_WHITESPACE">        </token>
        <token name="T_IF">if</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_EMPTY">empty</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_VARIABLE">$ability</token>
        <token name="T_CLOSE_BRACKET">)</token>
      </line>
      <line no="67">
        <token name="T_WHITESPACE">            </token>
        <token name="T_BOOLEAN_OR">||</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_EXCLAMATION_MARK">!</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">is_string</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_VARIABLE">$ability</token>
        <token name="T_CLOSE_BRACKET">)</token>
      </line>
      <line no="68">
        <token name="T_WHITESPACE">            </token>
        <token name="T_BOOLEAN_OR">||</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_EXCLAMATION_MARK">!</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">in_array</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_VARIABLE">$ability</token>
        <token name="T_COMMA">,</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$abilities</token>
        <token name="T_CLOSE_BRACKET">)</token>
      </line>
      <line no="69">
        <token name="T_WHITESPACE">        </token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_CURLY">{</token>
      </line>
      <line no="70">
        <token name="T_WHITESPACE">            </token>
        <token name="T_RETURN">return</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="71">
        <token name="T_WHITESPACE">        </token>
        <token name="T_CLOSE_CURLY">}</token>
      </line>
      <line no="72"/>
      <line no="73">
        <token name="T_WHITESPACE">        </token>
        <token name="T_VARIABLE">$abilities</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_EQUAL">=</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">array_diff</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_VARIABLE">$abilities</token>
        <token name="T_COMMA">,</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_SQUARE">[</token>
        <token name="T_VARIABLE">$ability</token>
        <token name="T_CLOSE_SQUARE">]</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="74"/>
      <line no="75">
        <token name="T_WHITESPACE">        </token>
        <token name="T_VARIABLE">$this</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">setAttribute</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_CONSTANT_ENCAPSED_STRING">'abilities'</token>
        <token name="T_COMMA">,</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$abilities</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="76">
        <token name="T_WHITESPACE">    </token>
        <token name="T_CLOSE_CURLY">}</token>
      </line>
      <line no="77">
        <token name="T_CLOSE_CURLY">}</token>
      </line>
      <line no="78"/>
    </source>
  </file>
</phpunit>
