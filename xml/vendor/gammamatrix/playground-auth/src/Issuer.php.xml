<?xml version="1.0"?>
<phpunit xmlns="https://schema.phpunit.de/coverage/1.0">
  <file name="Issuer.php" path="/vendor/gammamatrix/playground-auth/src">
    <totals>
      <lines total="417" comments="72" code="345" executable="167" executed="102" percent="61.08"/>
      <methods count="8" tested="2" percent="25.00"/>
      <functions count="0" tested="0" percent="0"/>
      <classes count="1" tested="0" percent="0.00"/>
      <traits count="0" tested="0" percent="0"/>
    </totals>
    <class name="Playground\Auth\Issuer" start="22" executable="167" executed="102" crap="457.37">
      <namespace name="Playground\Auth"/>
      <method name="useSanctum" signature="useSanctum(): bool" start="69" end="72" crap="2" executable="1" executed="0" coverage="0"/>
      <method name="compileAbilitiesByGroup" signature="compileAbilitiesByGroup(string $group): array" start="77" end="203" crap="245.47" executable="69" executed="24" coverage="34.782608695652"/>
      <method name="abilitiesByGroup" signature="abilitiesByGroup(string $group): array" start="208" end="211" crap="1" executable="1" executed="1" coverage="100"/>
      <method name="abilities" signature="abilities(Illuminate\Contracts\Auth\Authenticatable $user): array" start="216" end="248" crap="14.62" executable="19" executed="14" coverage="73.684210526316"/>
      <method name="init" signature="init(Illuminate\Contracts\Auth\Authenticatable $user): self" start="250" end="331" crap="26.18" executable="44" executed="34" coverage="77.272727272727"/>
      <method name="listed" signature="listed(Illuminate\Contracts\Auth\Authenticatable $user): void" start="333" end="349" crap="7.54" executable="9" executed="7" coverage="77.777777777778"/>
      <method name="authorize" signature="authorize(Illuminate\Contracts\Auth\Authenticatable $user): array" start="354" end="370" crap="3" executable="5" executed="5" coverage="100"/>
      <method name="sanctum" signature="sanctum(Illuminate\Contracts\Auth\Authenticatable $user): array" start="375" end="415" crap="7.06" executable="19" executed="17" coverage="89.473684210526"/>
    </class>
    <coverage>
      <line nr="82">
        <covered by="Tests\Feature\Playground\Login\Blade\Http\Controllers\Sanctum\LogoutRouteTest::test_sanctum_users_can_authenticate_and_logout_and_delete_token"/>
        <covered by="Tests\Feature\Playground\Login\Blade\Http\Controllers\Sanctum\LogoutRouteTest::test_sanctum_users_can_authenticate_and_logout_and_delete_token_with_sessions"/>
      </line>
      <line nr="84">
        <covered by="Tests\Feature\Playground\Login\Blade\Http\Controllers\Sanctum\LogoutRouteTest::test_sanctum_users_can_authenticate_and_logout_and_delete_token"/>
        <covered by="Tests\Feature\Playground\Login\Blade\Http\Controllers\Sanctum\LogoutRouteTest::test_sanctum_users_can_authenticate_and_logout_and_delete_token_with_sessions"/>
      </line>
      <line nr="85">
        <covered by="Tests\Feature\Playground\Login\Blade\Http\Controllers\Sanctum\LogoutRouteTest::test_sanctum_users_can_authenticate_and_logout_and_delete_token"/>
        <covered by="Tests\Feature\Playground\Login\Blade\Http\Controllers\Sanctum\LogoutRouteTest::test_sanctum_users_can_authenticate_and_logout_and_delete_token_with_sessions"/>
      </line>
      <line nr="93">
        <covered by="Tests\Feature\Playground\Login\Blade\Http\Controllers\Sanctum\LogoutRouteTest::test_sanctum_users_can_authenticate_and_logout_and_delete_token"/>
        <covered by="Tests\Feature\Playground\Login\Blade\Http\Controllers\Sanctum\LogoutRouteTest::test_sanctum_users_can_authenticate_and_logout_and_delete_token_with_sessions"/>
      </line>
      <line nr="98">
        <covered by="Tests\Feature\Playground\Login\Blade\Http\Controllers\Sanctum\LogoutRouteTest::test_sanctum_users_can_authenticate_and_logout_and_delete_token"/>
        <covered by="Tests\Feature\Playground\Login\Blade\Http\Controllers\Sanctum\LogoutRouteTest::test_sanctum_users_can_authenticate_and_logout_and_delete_token_with_sessions"/>
      </line>
      <line nr="100">
        <covered by="Tests\Feature\Playground\Login\Blade\Http\Controllers\Sanctum\LogoutRouteTest::test_sanctum_users_can_authenticate_and_logout_and_delete_token"/>
        <covered by="Tests\Feature\Playground\Login\Blade\Http\Controllers\Sanctum\LogoutRouteTest::test_sanctum_users_can_authenticate_and_logout_and_delete_token_with_sessions"/>
      </line>
      <line nr="105">
        <covered by="Tests\Feature\Playground\Login\Blade\Http\Controllers\Sanctum\LogoutRouteTest::test_sanctum_users_can_authenticate_and_logout_and_delete_token"/>
        <covered by="Tests\Feature\Playground\Login\Blade\Http\Controllers\Sanctum\LogoutRouteTest::test_sanctum_users_can_authenticate_and_logout_and_delete_token_with_sessions"/>
      </line>
      <line nr="106">
        <covered by="Tests\Feature\Playground\Login\Blade\Http\Controllers\Sanctum\LogoutRouteTest::test_sanctum_users_can_authenticate_and_logout_and_delete_token"/>
        <covered by="Tests\Feature\Playground\Login\Blade\Http\Controllers\Sanctum\LogoutRouteTest::test_sanctum_users_can_authenticate_and_logout_and_delete_token_with_sessions"/>
      </line>
      <line nr="107">
        <covered by="Tests\Feature\Playground\Login\Blade\Http\Controllers\Sanctum\LogoutRouteTest::test_sanctum_users_can_authenticate_and_logout_and_delete_token"/>
        <covered by="Tests\Feature\Playground\Login\Blade\Http\Controllers\Sanctum\LogoutRouteTest::test_sanctum_users_can_authenticate_and_logout_and_delete_token_with_sessions"/>
      </line>
      <line nr="108">
        <covered by="Tests\Feature\Playground\Login\Blade\Http\Controllers\Sanctum\LogoutRouteTest::test_sanctum_users_can_authenticate_and_logout_and_delete_token"/>
        <covered by="Tests\Feature\Playground\Login\Blade\Http\Controllers\Sanctum\LogoutRouteTest::test_sanctum_users_can_authenticate_and_logout_and_delete_token_with_sessions"/>
      </line>
      <line nr="112">
        <covered by="Tests\Feature\Playground\Login\Blade\Http\Controllers\Sanctum\LogoutRouteTest::test_sanctum_users_can_authenticate_and_logout_and_delete_token"/>
        <covered by="Tests\Feature\Playground\Login\Blade\Http\Controllers\Sanctum\LogoutRouteTest::test_sanctum_users_can_authenticate_and_logout_and_delete_token_with_sessions"/>
      </line>
      <line nr="113">
        <covered by="Tests\Feature\Playground\Login\Blade\Http\Controllers\Sanctum\LogoutRouteTest::test_sanctum_users_can_authenticate_and_logout_and_delete_token"/>
        <covered by="Tests\Feature\Playground\Login\Blade\Http\Controllers\Sanctum\LogoutRouteTest::test_sanctum_users_can_authenticate_and_logout_and_delete_token_with_sessions"/>
      </line>
      <line nr="114">
        <covered by="Tests\Feature\Playground\Login\Blade\Http\Controllers\Sanctum\LogoutRouteTest::test_sanctum_users_can_authenticate_and_logout_and_delete_token"/>
        <covered by="Tests\Feature\Playground\Login\Blade\Http\Controllers\Sanctum\LogoutRouteTest::test_sanctum_users_can_authenticate_and_logout_and_delete_token_with_sessions"/>
      </line>
      <line nr="115">
        <covered by="Tests\Feature\Playground\Login\Blade\Http\Controllers\Sanctum\LogoutRouteTest::test_sanctum_users_can_authenticate_and_logout_and_delete_token"/>
        <covered by="Tests\Feature\Playground\Login\Blade\Http\Controllers\Sanctum\LogoutRouteTest::test_sanctum_users_can_authenticate_and_logout_and_delete_token_with_sessions"/>
      </line>
      <line nr="128">
        <covered by="Tests\Feature\Playground\Login\Blade\Http\Controllers\Sanctum\LogoutRouteTest::test_sanctum_users_can_authenticate_and_logout_and_delete_token"/>
        <covered by="Tests\Feature\Playground\Login\Blade\Http\Controllers\Sanctum\LogoutRouteTest::test_sanctum_users_can_authenticate_and_logout_and_delete_token_with_sessions"/>
      </line>
      <line nr="146">
        <covered by="Tests\Feature\Playground\Login\Blade\Http\Controllers\Sanctum\LogoutRouteTest::test_sanctum_users_can_authenticate_and_logout_and_delete_token"/>
        <covered by="Tests\Feature\Playground\Login\Blade\Http\Controllers\Sanctum\LogoutRouteTest::test_sanctum_users_can_authenticate_and_logout_and_delete_token_with_sessions"/>
      </line>
      <line nr="147">
        <covered by="Tests\Feature\Playground\Login\Blade\Http\Controllers\Sanctum\LogoutRouteTest::test_sanctum_users_can_authenticate_and_logout_and_delete_token"/>
        <covered by="Tests\Feature\Playground\Login\Blade\Http\Controllers\Sanctum\LogoutRouteTest::test_sanctum_users_can_authenticate_and_logout_and_delete_token_with_sessions"/>
      </line>
      <line nr="160">
        <covered by="Tests\Feature\Playground\Login\Blade\Http\Controllers\Sanctum\LogoutRouteTest::test_sanctum_users_can_authenticate_and_logout_and_delete_token"/>
        <covered by="Tests\Feature\Playground\Login\Blade\Http\Controllers\Sanctum\LogoutRouteTest::test_sanctum_users_can_authenticate_and_logout_and_delete_token_with_sessions"/>
      </line>
      <line nr="164">
        <covered by="Tests\Feature\Playground\Login\Blade\Http\Controllers\Sanctum\LogoutRouteTest::test_sanctum_users_can_authenticate_and_logout_and_delete_token"/>
        <covered by="Tests\Feature\Playground\Login\Blade\Http\Controllers\Sanctum\LogoutRouteTest::test_sanctum_users_can_authenticate_and_logout_and_delete_token_with_sessions"/>
      </line>
      <line nr="165">
        <covered by="Tests\Feature\Playground\Login\Blade\Http\Controllers\Sanctum\LogoutRouteTest::test_sanctum_users_can_authenticate_and_logout_and_delete_token"/>
        <covered by="Tests\Feature\Playground\Login\Blade\Http\Controllers\Sanctum\LogoutRouteTest::test_sanctum_users_can_authenticate_and_logout_and_delete_token_with_sessions"/>
      </line>
      <line nr="182">
        <covered by="Tests\Feature\Playground\Login\Blade\Http\Controllers\Sanctum\LogoutRouteTest::test_sanctum_users_can_authenticate_and_logout_and_delete_token"/>
        <covered by="Tests\Feature\Playground\Login\Blade\Http\Controllers\Sanctum\LogoutRouteTest::test_sanctum_users_can_authenticate_and_logout_and_delete_token_with_sessions"/>
      </line>
      <line nr="202">
        <covered by="Tests\Feature\Playground\Login\Blade\Http\Controllers\Sanctum\LogoutRouteTest::test_sanctum_users_can_authenticate_and_logout_and_delete_token"/>
        <covered by="Tests\Feature\Playground\Login\Blade\Http\Controllers\Sanctum\LogoutRouteTest::test_sanctum_users_can_authenticate_and_logout_and_delete_token_with_sessions"/>
      </line>
      <line nr="210">
        <covered by="Tests\Feature\Playground\Login\Blade\Http\Controllers\Sanctum\LogoutRouteTest::test_sanctum_users_can_authenticate_and_logout_and_delete_token"/>
        <covered by="Tests\Feature\Playground\Login\Blade\Http\Controllers\Sanctum\LogoutRouteTest::test_sanctum_users_can_authenticate_and_logout_and_delete_token_with_sessions"/>
      </line>
      <line nr="218">
        <covered by="Tests\Feature\Playground\Login\Blade\Http\Controllers\Sanctum\LogoutRouteTest::test_sanctum_users_can_authenticate_and_logout_and_delete_token"/>
        <covered by="Tests\Feature\Playground\Login\Blade\Http\Controllers\Sanctum\LogoutRouteTest::test_sanctum_users_can_authenticate_and_logout_and_delete_token_with_sessions"/>
      </line>
      <line nr="220">
        <covered by="Tests\Feature\Playground\Login\Blade\Http\Controllers\Sanctum\LogoutRouteTest::test_sanctum_users_can_authenticate_and_logout_and_delete_token"/>
        <covered by="Tests\Feature\Playground\Login\Blade\Http\Controllers\Sanctum\LogoutRouteTest::test_sanctum_users_can_authenticate_and_logout_and_delete_token_with_sessions"/>
      </line>
      <line nr="222">
        <covered by="Tests\Feature\Playground\Login\Blade\Http\Controllers\Sanctum\LogoutRouteTest::test_sanctum_users_can_authenticate_and_logout_and_delete_token"/>
        <covered by="Tests\Feature\Playground\Login\Blade\Http\Controllers\Sanctum\LogoutRouteTest::test_sanctum_users_can_authenticate_and_logout_and_delete_token_with_sessions"/>
      </line>
      <line nr="224">
        <covered by="Tests\Feature\Playground\Login\Blade\Http\Controllers\Sanctum\LogoutRouteTest::test_sanctum_users_can_authenticate_and_logout_and_delete_token"/>
        <covered by="Tests\Feature\Playground\Login\Blade\Http\Controllers\Sanctum\LogoutRouteTest::test_sanctum_users_can_authenticate_and_logout_and_delete_token_with_sessions"/>
      </line>
      <line nr="226">
        <covered by="Tests\Feature\Playground\Login\Blade\Http\Controllers\Sanctum\LogoutRouteTest::test_sanctum_users_can_authenticate_and_logout_and_delete_token"/>
        <covered by="Tests\Feature\Playground\Login\Blade\Http\Controllers\Sanctum\LogoutRouteTest::test_sanctum_users_can_authenticate_and_logout_and_delete_token_with_sessions"/>
      </line>
      <line nr="228">
        <covered by="Tests\Feature\Playground\Login\Blade\Http\Controllers\Sanctum\LogoutRouteTest::test_sanctum_users_can_authenticate_and_logout_and_delete_token"/>
        <covered by="Tests\Feature\Playground\Login\Blade\Http\Controllers\Sanctum\LogoutRouteTest::test_sanctum_users_can_authenticate_and_logout_and_delete_token_with_sessions"/>
      </line>
      <line nr="230">
        <covered by="Tests\Feature\Playground\Login\Blade\Http\Controllers\Sanctum\LogoutRouteTest::test_sanctum_users_can_authenticate_and_logout_and_delete_token"/>
        <covered by="Tests\Feature\Playground\Login\Blade\Http\Controllers\Sanctum\LogoutRouteTest::test_sanctum_users_can_authenticate_and_logout_and_delete_token_with_sessions"/>
      </line>
      <line nr="231">
        <covered by="Tests\Feature\Playground\Login\Blade\Http\Controllers\Sanctum\LogoutRouteTest::test_sanctum_users_can_authenticate_and_logout_and_delete_token"/>
        <covered by="Tests\Feature\Playground\Login\Blade\Http\Controllers\Sanctum\LogoutRouteTest::test_sanctum_users_can_authenticate_and_logout_and_delete_token_with_sessions"/>
      </line>
      <line nr="234">
        <covered by="Tests\Feature\Playground\Login\Blade\Http\Controllers\Sanctum\LogoutRouteTest::test_sanctum_users_can_authenticate_and_logout_and_delete_token"/>
        <covered by="Tests\Feature\Playground\Login\Blade\Http\Controllers\Sanctum\LogoutRouteTest::test_sanctum_users_can_authenticate_and_logout_and_delete_token_with_sessions"/>
      </line>
      <line nr="235">
        <covered by="Tests\Feature\Playground\Login\Blade\Http\Controllers\Sanctum\LogoutRouteTest::test_sanctum_users_can_authenticate_and_logout_and_delete_token"/>
        <covered by="Tests\Feature\Playground\Login\Blade\Http\Controllers\Sanctum\LogoutRouteTest::test_sanctum_users_can_authenticate_and_logout_and_delete_token_with_sessions"/>
      </line>
      <line nr="237">
        <covered by="Tests\Feature\Playground\Login\Blade\Http\Controllers\Sanctum\LogoutRouteTest::test_sanctum_users_can_authenticate_and_logout_and_delete_token"/>
        <covered by="Tests\Feature\Playground\Login\Blade\Http\Controllers\Sanctum\LogoutRouteTest::test_sanctum_users_can_authenticate_and_logout_and_delete_token_with_sessions"/>
      </line>
      <line nr="239">
        <covered by="Tests\Feature\Playground\Login\Blade\Http\Controllers\Sanctum\LogoutRouteTest::test_sanctum_users_can_authenticate_and_logout_and_delete_token"/>
        <covered by="Tests\Feature\Playground\Login\Blade\Http\Controllers\Sanctum\LogoutRouteTest::test_sanctum_users_can_authenticate_and_logout_and_delete_token_with_sessions"/>
      </line>
      <line nr="243">
        <covered by="Tests\Feature\Playground\Login\Blade\Http\Controllers\Sanctum\LogoutRouteTest::test_sanctum_users_can_authenticate_and_logout_and_delete_token"/>
        <covered by="Tests\Feature\Playground\Login\Blade\Http\Controllers\Sanctum\LogoutRouteTest::test_sanctum_users_can_authenticate_and_logout_and_delete_token_with_sessions"/>
      </line>
      <line nr="247">
        <covered by="Tests\Feature\Playground\Login\Blade\Http\Controllers\Sanctum\LogoutRouteTest::test_sanctum_users_can_authenticate_and_logout_and_delete_token"/>
        <covered by="Tests\Feature\Playground\Login\Blade\Http\Controllers\Sanctum\LogoutRouteTest::test_sanctum_users_can_authenticate_and_logout_and_delete_token_with_sessions"/>
      </line>
      <line nr="252">
        <covered by="Tests\Feature\Playground\Login\Blade\Http\Controllers\Laravel\AuthenticationRouteTest::test_users_can_authenticate_using_the_login_screen_laravel"/>
        <covered by="Tests\Feature\Playground\Login\Blade\Http\Controllers\Laravel\AuthenticationRouteTest::test_users_can_authenticate_using_json"/>
        <covered by="Tests\Feature\Playground\Login\Blade\Http\Controllers\Laravel\AuthenticationRouteTest::test_login_repeat_under_rate_limit_and_clear"/>
        <covered by="Tests\Feature\Playground\Login\Blade\Http\Controllers\Playground\AuthenticationRouteTest::test_users_can_authenticate_using_the_login_screen_playground"/>
        <covered by="Tests\Feature\Playground\Login\Blade\Http\Controllers\Playground\AuthenticationRouteTest::test_users_can_authenticate_using_json"/>
        <covered by="Tests\Feature\Playground\Login\Blade\Http\Controllers\Playground\AuthenticationRouteTest::test_login_repeat_under_rate_limit_and_clear"/>
        <covered by="Tests\Feature\Playground\Login\Blade\Http\Controllers\Sanctum\LogoutRouteTest::test_sanctum_users_can_authenticate_and_logout_and_delete_token"/>
        <covered by="Tests\Feature\Playground\Login\Blade\Http\Controllers\Sanctum\LogoutRouteTest::test_sanctum_users_can_authenticate_and_logout_and_delete_token_with_sessions"/>
      </line>
      <line nr="253">
        <covered by="Tests\Feature\Playground\Login\Blade\Http\Controllers\Sanctum\LogoutRouteTest::test_sanctum_users_can_authenticate_and_logout_and_delete_token"/>
        <covered by="Tests\Feature\Playground\Login\Blade\Http\Controllers\Sanctum\LogoutRouteTest::test_sanctum_users_can_authenticate_and_logout_and_delete_token_with_sessions"/>
      </line>
      <line nr="256">
        <covered by="Tests\Feature\Playground\Login\Blade\Http\Controllers\Laravel\AuthenticationRouteTest::test_users_can_authenticate_using_the_login_screen_laravel"/>
        <covered by="Tests\Feature\Playground\Login\Blade\Http\Controllers\Laravel\AuthenticationRouteTest::test_users_can_authenticate_using_json"/>
        <covered by="Tests\Feature\Playground\Login\Blade\Http\Controllers\Laravel\AuthenticationRouteTest::test_login_repeat_under_rate_limit_and_clear"/>
        <covered by="Tests\Feature\Playground\Login\Blade\Http\Controllers\Playground\AuthenticationRouteTest::test_users_can_authenticate_using_the_login_screen_playground"/>
        <covered by="Tests\Feature\Playground\Login\Blade\Http\Controllers\Playground\AuthenticationRouteTest::test_users_can_authenticate_using_json"/>
        <covered by="Tests\Feature\Playground\Login\Blade\Http\Controllers\Playground\AuthenticationRouteTest::test_login_repeat_under_rate_limit_and_clear"/>
        <covered by="Tests\Feature\Playground\Login\Blade\Http\Controllers\Sanctum\LogoutRouteTest::test_sanctum_users_can_authenticate_and_logout_and_delete_token"/>
        <covered by="Tests\Feature\Playground\Login\Blade\Http\Controllers\Sanctum\LogoutRouteTest::test_sanctum_users_can_authenticate_and_logout_and_delete_token_with_sessions"/>
      </line>
      <line nr="257">
        <covered by="Tests\Feature\Playground\Login\Blade\Http\Controllers\Laravel\AuthenticationRouteTest::test_users_can_authenticate_using_the_login_screen_laravel"/>
        <covered by="Tests\Feature\Playground\Login\Blade\Http\Controllers\Laravel\AuthenticationRouteTest::test_users_can_authenticate_using_json"/>
        <covered by="Tests\Feature\Playground\Login\Blade\Http\Controllers\Laravel\AuthenticationRouteTest::test_login_repeat_under_rate_limit_and_clear"/>
        <covered by="Tests\Feature\Playground\Login\Blade\Http\Controllers\Playground\AuthenticationRouteTest::test_users_can_authenticate_using_the_login_screen_playground"/>
        <covered by="Tests\Feature\Playground\Login\Blade\Http\Controllers\Playground\AuthenticationRouteTest::test_users_can_authenticate_using_json"/>
        <covered by="Tests\Feature\Playground\Login\Blade\Http\Controllers\Playground\AuthenticationRouteTest::test_login_repeat_under_rate_limit_and_clear"/>
        <covered by="Tests\Feature\Playground\Login\Blade\Http\Controllers\Sanctum\LogoutRouteTest::test_sanctum_users_can_authenticate_and_logout_and_delete_token"/>
        <covered by="Tests\Feature\Playground\Login\Blade\Http\Controllers\Sanctum\LogoutRouteTest::test_sanctum_users_can_authenticate_and_logout_and_delete_token_with_sessions"/>
      </line>
      <line nr="259">
        <covered by="Tests\Feature\Playground\Login\Blade\Http\Controllers\Laravel\AuthenticationRouteTest::test_users_can_authenticate_using_the_login_screen_laravel"/>
        <covered by="Tests\Feature\Playground\Login\Blade\Http\Controllers\Laravel\AuthenticationRouteTest::test_users_can_authenticate_using_json"/>
        <covered by="Tests\Feature\Playground\Login\Blade\Http\Controllers\Laravel\AuthenticationRouteTest::test_login_repeat_under_rate_limit_and_clear"/>
        <covered by="Tests\Feature\Playground\Login\Blade\Http\Controllers\Playground\AuthenticationRouteTest::test_users_can_authenticate_using_the_login_screen_playground"/>
        <covered by="Tests\Feature\Playground\Login\Blade\Http\Controllers\Playground\AuthenticationRouteTest::test_users_can_authenticate_using_json"/>
        <covered by="Tests\Feature\Playground\Login\Blade\Http\Controllers\Playground\AuthenticationRouteTest::test_login_repeat_under_rate_limit_and_clear"/>
        <covered by="Tests\Feature\Playground\Login\Blade\Http\Controllers\Sanctum\LogoutRouteTest::test_sanctum_users_can_authenticate_and_logout_and_delete_token"/>
        <covered by="Tests\Feature\Playground\Login\Blade\Http\Controllers\Sanctum\LogoutRouteTest::test_sanctum_users_can_authenticate_and_logout_and_delete_token_with_sessions"/>
      </line>
      <line nr="260">
        <covered by="Tests\Feature\Playground\Login\Blade\Http\Controllers\Laravel\AuthenticationRouteTest::test_users_can_authenticate_using_the_login_screen_laravel"/>
        <covered by="Tests\Feature\Playground\Login\Blade\Http\Controllers\Laravel\AuthenticationRouteTest::test_users_can_authenticate_using_json"/>
        <covered by="Tests\Feature\Playground\Login\Blade\Http\Controllers\Laravel\AuthenticationRouteTest::test_login_repeat_under_rate_limit_and_clear"/>
        <covered by="Tests\Feature\Playground\Login\Blade\Http\Controllers\Playground\AuthenticationRouteTest::test_users_can_authenticate_using_the_login_screen_playground"/>
        <covered by="Tests\Feature\Playground\Login\Blade\Http\Controllers\Playground\AuthenticationRouteTest::test_users_can_authenticate_using_json"/>
        <covered by="Tests\Feature\Playground\Login\Blade\Http\Controllers\Playground\AuthenticationRouteTest::test_login_repeat_under_rate_limit_and_clear"/>
        <covered by="Tests\Feature\Playground\Login\Blade\Http\Controllers\Sanctum\LogoutRouteTest::test_sanctum_users_can_authenticate_and_logout_and_delete_token"/>
        <covered by="Tests\Feature\Playground\Login\Blade\Http\Controllers\Sanctum\LogoutRouteTest::test_sanctum_users_can_authenticate_and_logout_and_delete_token_with_sessions"/>
      </line>
      <line nr="265">
        <covered by="Tests\Feature\Playground\Login\Blade\Http\Controllers\Laravel\AuthenticationRouteTest::test_users_can_authenticate_using_the_login_screen_laravel"/>
        <covered by="Tests\Feature\Playground\Login\Blade\Http\Controllers\Laravel\AuthenticationRouteTest::test_users_can_authenticate_using_json"/>
        <covered by="Tests\Feature\Playground\Login\Blade\Http\Controllers\Laravel\AuthenticationRouteTest::test_login_repeat_under_rate_limit_and_clear"/>
        <covered by="Tests\Feature\Playground\Login\Blade\Http\Controllers\Playground\AuthenticationRouteTest::test_users_can_authenticate_using_the_login_screen_playground"/>
        <covered by="Tests\Feature\Playground\Login\Blade\Http\Controllers\Playground\AuthenticationRouteTest::test_users_can_authenticate_using_json"/>
        <covered by="Tests\Feature\Playground\Login\Blade\Http\Controllers\Playground\AuthenticationRouteTest::test_login_repeat_under_rate_limit_and_clear"/>
        <covered by="Tests\Feature\Playground\Login\Blade\Http\Controllers\Sanctum\LogoutRouteTest::test_sanctum_users_can_authenticate_and_logout_and_delete_token"/>
        <covered by="Tests\Feature\Playground\Login\Blade\Http\Controllers\Sanctum\LogoutRouteTest::test_sanctum_users_can_authenticate_and_logout_and_delete_token_with_sessions"/>
      </line>
      <line nr="266">
        <covered by="Tests\Feature\Playground\Login\Blade\Http\Controllers\Sanctum\LogoutRouteTest::test_sanctum_users_can_authenticate_and_logout_and_delete_token"/>
        <covered by="Tests\Feature\Playground\Login\Blade\Http\Controllers\Sanctum\LogoutRouteTest::test_sanctum_users_can_authenticate_and_logout_and_delete_token_with_sessions"/>
      </line>
      <line nr="274">
        <covered by="Tests\Feature\Playground\Login\Blade\Http\Controllers\Laravel\AuthenticationRouteTest::test_users_can_authenticate_using_the_login_screen_laravel"/>
        <covered by="Tests\Feature\Playground\Login\Blade\Http\Controllers\Laravel\AuthenticationRouteTest::test_users_can_authenticate_using_json"/>
        <covered by="Tests\Feature\Playground\Login\Blade\Http\Controllers\Laravel\AuthenticationRouteTest::test_login_repeat_under_rate_limit_and_clear"/>
        <covered by="Tests\Feature\Playground\Login\Blade\Http\Controllers\Playground\AuthenticationRouteTest::test_users_can_authenticate_using_the_login_screen_playground"/>
        <covered by="Tests\Feature\Playground\Login\Blade\Http\Controllers\Playground\AuthenticationRouteTest::test_users_can_authenticate_using_json"/>
        <covered by="Tests\Feature\Playground\Login\Blade\Http\Controllers\Playground\AuthenticationRouteTest::test_login_repeat_under_rate_limit_and_clear"/>
        <covered by="Tests\Feature\Playground\Login\Blade\Http\Controllers\Sanctum\LogoutRouteTest::test_sanctum_users_can_authenticate_and_logout_and_delete_token"/>
        <covered by="Tests\Feature\Playground\Login\Blade\Http\Controllers\Sanctum\LogoutRouteTest::test_sanctum_users_can_authenticate_and_logout_and_delete_token_with_sessions"/>
      </line>
      <line nr="275">
        <covered by="Tests\Feature\Playground\Login\Blade\Http\Controllers\Playground\AuthenticationRouteTest::test_users_can_authenticate_using_the_login_screen_playground"/>
        <covered by="Tests\Feature\Playground\Login\Blade\Http\Controllers\Playground\AuthenticationRouteTest::test_users_can_authenticate_using_json"/>
        <covered by="Tests\Feature\Playground\Login\Blade\Http\Controllers\Playground\AuthenticationRouteTest::test_login_repeat_under_rate_limit_and_clear"/>
      </line>
      <line nr="279">
        <covered by="Tests\Feature\Playground\Login\Blade\Http\Controllers\Playground\AuthenticationRouteTest::test_users_can_authenticate_using_the_login_screen_playground"/>
        <covered by="Tests\Feature\Playground\Login\Blade\Http\Controllers\Playground\AuthenticationRouteTest::test_users_can_authenticate_using_json"/>
        <covered by="Tests\Feature\Playground\Login\Blade\Http\Controllers\Playground\AuthenticationRouteTest::test_login_repeat_under_rate_limit_and_clear"/>
      </line>
      <line nr="280">
        <covered by="Tests\Feature\Playground\Login\Blade\Http\Controllers\Playground\AuthenticationRouteTest::test_users_can_authenticate_using_the_login_screen_playground"/>
        <covered by="Tests\Feature\Playground\Login\Blade\Http\Controllers\Playground\AuthenticationRouteTest::test_users_can_authenticate_using_json"/>
        <covered by="Tests\Feature\Playground\Login\Blade\Http\Controllers\Playground\AuthenticationRouteTest::test_login_repeat_under_rate_limit_and_clear"/>
      </line>
      <line nr="281">
        <covered by="Tests\Feature\Playground\Login\Blade\Http\Controllers\Playground\AuthenticationRouteTest::test_users_can_authenticate_using_the_login_screen_playground"/>
        <covered by="Tests\Feature\Playground\Login\Blade\Http\Controllers\Playground\AuthenticationRouteTest::test_users_can_authenticate_using_json"/>
        <covered by="Tests\Feature\Playground\Login\Blade\Http\Controllers\Playground\AuthenticationRouteTest::test_login_repeat_under_rate_limit_and_clear"/>
      </line>
      <line nr="284">
        <covered by="Tests\Feature\Playground\Login\Blade\Http\Controllers\Laravel\AuthenticationRouteTest::test_users_can_authenticate_using_the_login_screen_laravel"/>
        <covered by="Tests\Feature\Playground\Login\Blade\Http\Controllers\Laravel\AuthenticationRouteTest::test_users_can_authenticate_using_json"/>
        <covered by="Tests\Feature\Playground\Login\Blade\Http\Controllers\Laravel\AuthenticationRouteTest::test_login_repeat_under_rate_limit_and_clear"/>
        <covered by="Tests\Feature\Playground\Login\Blade\Http\Controllers\Sanctum\LogoutRouteTest::test_sanctum_users_can_authenticate_and_logout_and_delete_token"/>
        <covered by="Tests\Feature\Playground\Login\Blade\Http\Controllers\Sanctum\LogoutRouteTest::test_sanctum_users_can_authenticate_and_logout_and_delete_token_with_sessions"/>
      </line>
      <line nr="285">
        <covered by="Tests\Feature\Playground\Login\Blade\Http\Controllers\Laravel\AuthenticationRouteTest::test_users_can_authenticate_using_the_login_screen_laravel"/>
        <covered by="Tests\Feature\Playground\Login\Blade\Http\Controllers\Laravel\AuthenticationRouteTest::test_users_can_authenticate_using_json"/>
        <covered by="Tests\Feature\Playground\Login\Blade\Http\Controllers\Laravel\AuthenticationRouteTest::test_login_repeat_under_rate_limit_and_clear"/>
        <covered by="Tests\Feature\Playground\Login\Blade\Http\Controllers\Sanctum\LogoutRouteTest::test_sanctum_users_can_authenticate_and_logout_and_delete_token"/>
        <covered by="Tests\Feature\Playground\Login\Blade\Http\Controllers\Sanctum\LogoutRouteTest::test_sanctum_users_can_authenticate_and_logout_and_delete_token_with_sessions"/>
      </line>
      <line nr="288">
        <covered by="Tests\Feature\Playground\Login\Blade\Http\Controllers\Laravel\AuthenticationRouteTest::test_users_can_authenticate_using_the_login_screen_laravel"/>
        <covered by="Tests\Feature\Playground\Login\Blade\Http\Controllers\Laravel\AuthenticationRouteTest::test_users_can_authenticate_using_json"/>
        <covered by="Tests\Feature\Playground\Login\Blade\Http\Controllers\Laravel\AuthenticationRouteTest::test_login_repeat_under_rate_limit_and_clear"/>
        <covered by="Tests\Feature\Playground\Login\Blade\Http\Controllers\Playground\AuthenticationRouteTest::test_users_can_authenticate_using_the_login_screen_playground"/>
        <covered by="Tests\Feature\Playground\Login\Blade\Http\Controllers\Playground\AuthenticationRouteTest::test_users_can_authenticate_using_json"/>
        <covered by="Tests\Feature\Playground\Login\Blade\Http\Controllers\Playground\AuthenticationRouteTest::test_login_repeat_under_rate_limit_and_clear"/>
        <covered by="Tests\Feature\Playground\Login\Blade\Http\Controllers\Sanctum\LogoutRouteTest::test_sanctum_users_can_authenticate_and_logout_and_delete_token"/>
        <covered by="Tests\Feature\Playground\Login\Blade\Http\Controllers\Sanctum\LogoutRouteTest::test_sanctum_users_can_authenticate_and_logout_and_delete_token_with_sessions"/>
      </line>
      <line nr="289">
        <covered by="Tests\Feature\Playground\Login\Blade\Http\Controllers\Playground\AuthenticationRouteTest::test_users_can_authenticate_using_the_login_screen_playground"/>
        <covered by="Tests\Feature\Playground\Login\Blade\Http\Controllers\Playground\AuthenticationRouteTest::test_users_can_authenticate_using_json"/>
        <covered by="Tests\Feature\Playground\Login\Blade\Http\Controllers\Playground\AuthenticationRouteTest::test_login_repeat_under_rate_limit_and_clear"/>
      </line>
      <line nr="291">
        <covered by="Tests\Feature\Playground\Login\Blade\Http\Controllers\Laravel\AuthenticationRouteTest::test_users_can_authenticate_using_the_login_screen_laravel"/>
        <covered by="Tests\Feature\Playground\Login\Blade\Http\Controllers\Laravel\AuthenticationRouteTest::test_users_can_authenticate_using_json"/>
        <covered by="Tests\Feature\Playground\Login\Blade\Http\Controllers\Laravel\AuthenticationRouteTest::test_login_repeat_under_rate_limit_and_clear"/>
        <covered by="Tests\Feature\Playground\Login\Blade\Http\Controllers\Sanctum\LogoutRouteTest::test_sanctum_users_can_authenticate_and_logout_and_delete_token"/>
        <covered by="Tests\Feature\Playground\Login\Blade\Http\Controllers\Sanctum\LogoutRouteTest::test_sanctum_users_can_authenticate_and_logout_and_delete_token_with_sessions"/>
      </line>
      <line nr="294">
        <covered by="Tests\Feature\Playground\Login\Blade\Http\Controllers\Laravel\AuthenticationRouteTest::test_users_can_authenticate_using_the_login_screen_laravel"/>
        <covered by="Tests\Feature\Playground\Login\Blade\Http\Controllers\Laravel\AuthenticationRouteTest::test_users_can_authenticate_using_json"/>
        <covered by="Tests\Feature\Playground\Login\Blade\Http\Controllers\Laravel\AuthenticationRouteTest::test_login_repeat_under_rate_limit_and_clear"/>
        <covered by="Tests\Feature\Playground\Login\Blade\Http\Controllers\Playground\AuthenticationRouteTest::test_users_can_authenticate_using_the_login_screen_playground"/>
        <covered by="Tests\Feature\Playground\Login\Blade\Http\Controllers\Playground\AuthenticationRouteTest::test_users_can_authenticate_using_json"/>
        <covered by="Tests\Feature\Playground\Login\Blade\Http\Controllers\Playground\AuthenticationRouteTest::test_login_repeat_under_rate_limit_and_clear"/>
        <covered by="Tests\Feature\Playground\Login\Blade\Http\Controllers\Sanctum\LogoutRouteTest::test_sanctum_users_can_authenticate_and_logout_and_delete_token"/>
        <covered by="Tests\Feature\Playground\Login\Blade\Http\Controllers\Sanctum\LogoutRouteTest::test_sanctum_users_can_authenticate_and_logout_and_delete_token_with_sessions"/>
      </line>
      <line nr="295">
        <covered by="Tests\Feature\Playground\Login\Blade\Http\Controllers\Playground\AuthenticationRouteTest::test_users_can_authenticate_using_the_login_screen_playground"/>
        <covered by="Tests\Feature\Playground\Login\Blade\Http\Controllers\Playground\AuthenticationRouteTest::test_users_can_authenticate_using_json"/>
        <covered by="Tests\Feature\Playground\Login\Blade\Http\Controllers\Playground\AuthenticationRouteTest::test_login_repeat_under_rate_limit_and_clear"/>
      </line>
      <line nr="297">
        <covered by="Tests\Feature\Playground\Login\Blade\Http\Controllers\Laravel\AuthenticationRouteTest::test_users_can_authenticate_using_the_login_screen_laravel"/>
        <covered by="Tests\Feature\Playground\Login\Blade\Http\Controllers\Laravel\AuthenticationRouteTest::test_users_can_authenticate_using_json"/>
        <covered by="Tests\Feature\Playground\Login\Blade\Http\Controllers\Laravel\AuthenticationRouteTest::test_login_repeat_under_rate_limit_and_clear"/>
        <covered by="Tests\Feature\Playground\Login\Blade\Http\Controllers\Sanctum\LogoutRouteTest::test_sanctum_users_can_authenticate_and_logout_and_delete_token"/>
        <covered by="Tests\Feature\Playground\Login\Blade\Http\Controllers\Sanctum\LogoutRouteTest::test_sanctum_users_can_authenticate_and_logout_and_delete_token_with_sessions"/>
      </line>
      <line nr="300">
        <covered by="Tests\Feature\Playground\Login\Blade\Http\Controllers\Laravel\AuthenticationRouteTest::test_users_can_authenticate_using_the_login_screen_laravel"/>
        <covered by="Tests\Feature\Playground\Login\Blade\Http\Controllers\Laravel\AuthenticationRouteTest::test_users_can_authenticate_using_json"/>
        <covered by="Tests\Feature\Playground\Login\Blade\Http\Controllers\Laravel\AuthenticationRouteTest::test_login_repeat_under_rate_limit_and_clear"/>
        <covered by="Tests\Feature\Playground\Login\Blade\Http\Controllers\Playground\AuthenticationRouteTest::test_users_can_authenticate_using_the_login_screen_playground"/>
        <covered by="Tests\Feature\Playground\Login\Blade\Http\Controllers\Playground\AuthenticationRouteTest::test_users_can_authenticate_using_json"/>
        <covered by="Tests\Feature\Playground\Login\Blade\Http\Controllers\Playground\AuthenticationRouteTest::test_login_repeat_under_rate_limit_and_clear"/>
        <covered by="Tests\Feature\Playground\Login\Blade\Http\Controllers\Sanctum\LogoutRouteTest::test_sanctum_users_can_authenticate_and_logout_and_delete_token"/>
        <covered by="Tests\Feature\Playground\Login\Blade\Http\Controllers\Sanctum\LogoutRouteTest::test_sanctum_users_can_authenticate_and_logout_and_delete_token_with_sessions"/>
      </line>
      <line nr="301">
        <covered by="Tests\Feature\Playground\Login\Blade\Http\Controllers\Playground\AuthenticationRouteTest::test_users_can_authenticate_using_the_login_screen_playground"/>
        <covered by="Tests\Feature\Playground\Login\Blade\Http\Controllers\Playground\AuthenticationRouteTest::test_users_can_authenticate_using_json"/>
        <covered by="Tests\Feature\Playground\Login\Blade\Http\Controllers\Playground\AuthenticationRouteTest::test_login_repeat_under_rate_limit_and_clear"/>
      </line>
      <line nr="302">
        <covered by="Tests\Feature\Playground\Login\Blade\Http\Controllers\Playground\AuthenticationRouteTest::test_users_can_authenticate_using_the_login_screen_playground"/>
        <covered by="Tests\Feature\Playground\Login\Blade\Http\Controllers\Playground\AuthenticationRouteTest::test_users_can_authenticate_using_json"/>
        <covered by="Tests\Feature\Playground\Login\Blade\Http\Controllers\Playground\AuthenticationRouteTest::test_login_repeat_under_rate_limit_and_clear"/>
      </line>
      <line nr="314">
        <covered by="Tests\Feature\Playground\Login\Blade\Http\Controllers\Laravel\AuthenticationRouteTest::test_users_can_authenticate_using_the_login_screen_laravel"/>
        <covered by="Tests\Feature\Playground\Login\Blade\Http\Controllers\Laravel\AuthenticationRouteTest::test_users_can_authenticate_using_json"/>
        <covered by="Tests\Feature\Playground\Login\Blade\Http\Controllers\Laravel\AuthenticationRouteTest::test_login_repeat_under_rate_limit_and_clear"/>
        <covered by="Tests\Feature\Playground\Login\Blade\Http\Controllers\Sanctum\LogoutRouteTest::test_sanctum_users_can_authenticate_and_logout_and_delete_token"/>
        <covered by="Tests\Feature\Playground\Login\Blade\Http\Controllers\Sanctum\LogoutRouteTest::test_sanctum_users_can_authenticate_and_logout_and_delete_token_with_sessions"/>
      </line>
      <line nr="315">
        <covered by="Tests\Feature\Playground\Login\Blade\Http\Controllers\Laravel\AuthenticationRouteTest::test_users_can_authenticate_using_the_login_screen_laravel"/>
        <covered by="Tests\Feature\Playground\Login\Blade\Http\Controllers\Laravel\AuthenticationRouteTest::test_users_can_authenticate_using_json"/>
        <covered by="Tests\Feature\Playground\Login\Blade\Http\Controllers\Laravel\AuthenticationRouteTest::test_login_repeat_under_rate_limit_and_clear"/>
        <covered by="Tests\Feature\Playground\Login\Blade\Http\Controllers\Sanctum\LogoutRouteTest::test_sanctum_users_can_authenticate_and_logout_and_delete_token"/>
        <covered by="Tests\Feature\Playground\Login\Blade\Http\Controllers\Sanctum\LogoutRouteTest::test_sanctum_users_can_authenticate_and_logout_and_delete_token_with_sessions"/>
      </line>
      <line nr="316">
        <covered by="Tests\Feature\Playground\Login\Blade\Http\Controllers\Laravel\AuthenticationRouteTest::test_users_can_authenticate_using_the_login_screen_laravel"/>
        <covered by="Tests\Feature\Playground\Login\Blade\Http\Controllers\Laravel\AuthenticationRouteTest::test_users_can_authenticate_using_json"/>
        <covered by="Tests\Feature\Playground\Login\Blade\Http\Controllers\Laravel\AuthenticationRouteTest::test_login_repeat_under_rate_limit_and_clear"/>
        <covered by="Tests\Feature\Playground\Login\Blade\Http\Controllers\Sanctum\LogoutRouteTest::test_sanctum_users_can_authenticate_and_logout_and_delete_token"/>
        <covered by="Tests\Feature\Playground\Login\Blade\Http\Controllers\Sanctum\LogoutRouteTest::test_sanctum_users_can_authenticate_and_logout_and_delete_token_with_sessions"/>
      </line>
      <line nr="317">
        <covered by="Tests\Feature\Playground\Login\Blade\Http\Controllers\Laravel\AuthenticationRouteTest::test_users_can_authenticate_using_the_login_screen_laravel"/>
        <covered by="Tests\Feature\Playground\Login\Blade\Http\Controllers\Laravel\AuthenticationRouteTest::test_users_can_authenticate_using_json"/>
        <covered by="Tests\Feature\Playground\Login\Blade\Http\Controllers\Laravel\AuthenticationRouteTest::test_login_repeat_under_rate_limit_and_clear"/>
        <covered by="Tests\Feature\Playground\Login\Blade\Http\Controllers\Sanctum\LogoutRouteTest::test_sanctum_users_can_authenticate_and_logout_and_delete_token"/>
        <covered by="Tests\Feature\Playground\Login\Blade\Http\Controllers\Sanctum\LogoutRouteTest::test_sanctum_users_can_authenticate_and_logout_and_delete_token_with_sessions"/>
      </line>
      <line nr="320">
        <covered by="Tests\Feature\Playground\Login\Blade\Http\Controllers\Laravel\AuthenticationRouteTest::test_users_can_authenticate_using_the_login_screen_laravel"/>
        <covered by="Tests\Feature\Playground\Login\Blade\Http\Controllers\Laravel\AuthenticationRouteTest::test_users_can_authenticate_using_json"/>
        <covered by="Tests\Feature\Playground\Login\Blade\Http\Controllers\Laravel\AuthenticationRouteTest::test_login_repeat_under_rate_limit_and_clear"/>
        <covered by="Tests\Feature\Playground\Login\Blade\Http\Controllers\Playground\AuthenticationRouteTest::test_users_can_authenticate_using_the_login_screen_playground"/>
        <covered by="Tests\Feature\Playground\Login\Blade\Http\Controllers\Playground\AuthenticationRouteTest::test_users_can_authenticate_using_json"/>
        <covered by="Tests\Feature\Playground\Login\Blade\Http\Controllers\Playground\AuthenticationRouteTest::test_login_repeat_under_rate_limit_and_clear"/>
        <covered by="Tests\Feature\Playground\Login\Blade\Http\Controllers\Sanctum\LogoutRouteTest::test_sanctum_users_can_authenticate_and_logout_and_delete_token"/>
        <covered by="Tests\Feature\Playground\Login\Blade\Http\Controllers\Sanctum\LogoutRouteTest::test_sanctum_users_can_authenticate_and_logout_and_delete_token_with_sessions"/>
      </line>
      <line nr="321">
        <covered by="Tests\Feature\Playground\Login\Blade\Http\Controllers\Laravel\AuthenticationRouteTest::test_users_can_authenticate_using_the_login_screen_laravel"/>
        <covered by="Tests\Feature\Playground\Login\Blade\Http\Controllers\Laravel\AuthenticationRouteTest::test_users_can_authenticate_using_json"/>
        <covered by="Tests\Feature\Playground\Login\Blade\Http\Controllers\Laravel\AuthenticationRouteTest::test_login_repeat_under_rate_limit_and_clear"/>
        <covered by="Tests\Feature\Playground\Login\Blade\Http\Controllers\Playground\AuthenticationRouteTest::test_users_can_authenticate_using_the_login_screen_playground"/>
        <covered by="Tests\Feature\Playground\Login\Blade\Http\Controllers\Playground\AuthenticationRouteTest::test_users_can_authenticate_using_json"/>
        <covered by="Tests\Feature\Playground\Login\Blade\Http\Controllers\Playground\AuthenticationRouteTest::test_login_repeat_under_rate_limit_and_clear"/>
        <covered by="Tests\Feature\Playground\Login\Blade\Http\Controllers\Sanctum\LogoutRouteTest::test_sanctum_users_can_authenticate_and_logout_and_delete_token"/>
        <covered by="Tests\Feature\Playground\Login\Blade\Http\Controllers\Sanctum\LogoutRouteTest::test_sanctum_users_can_authenticate_and_logout_and_delete_token_with_sessions"/>
      </line>
      <line nr="324">
        <covered by="Tests\Feature\Playground\Login\Blade\Http\Controllers\Laravel\AuthenticationRouteTest::test_users_can_authenticate_using_the_login_screen_laravel"/>
        <covered by="Tests\Feature\Playground\Login\Blade\Http\Controllers\Laravel\AuthenticationRouteTest::test_users_can_authenticate_using_json"/>
        <covered by="Tests\Feature\Playground\Login\Blade\Http\Controllers\Laravel\AuthenticationRouteTest::test_login_repeat_under_rate_limit_and_clear"/>
        <covered by="Tests\Feature\Playground\Login\Blade\Http\Controllers\Playground\AuthenticationRouteTest::test_users_can_authenticate_using_the_login_screen_playground"/>
        <covered by="Tests\Feature\Playground\Login\Blade\Http\Controllers\Playground\AuthenticationRouteTest::test_users_can_authenticate_using_json"/>
        <covered by="Tests\Feature\Playground\Login\Blade\Http\Controllers\Playground\AuthenticationRouteTest::test_login_repeat_under_rate_limit_and_clear"/>
        <covered by="Tests\Feature\Playground\Login\Blade\Http\Controllers\Sanctum\LogoutRouteTest::test_sanctum_users_can_authenticate_and_logout_and_delete_token"/>
        <covered by="Tests\Feature\Playground\Login\Blade\Http\Controllers\Sanctum\LogoutRouteTest::test_sanctum_users_can_authenticate_and_logout_and_delete_token_with_sessions"/>
      </line>
      <line nr="325">
        <covered by="Tests\Feature\Playground\Login\Blade\Http\Controllers\Laravel\AuthenticationRouteTest::test_users_can_authenticate_using_the_login_screen_laravel"/>
        <covered by="Tests\Feature\Playground\Login\Blade\Http\Controllers\Laravel\AuthenticationRouteTest::test_users_can_authenticate_using_json"/>
        <covered by="Tests\Feature\Playground\Login\Blade\Http\Controllers\Laravel\AuthenticationRouteTest::test_login_repeat_under_rate_limit_and_clear"/>
        <covered by="Tests\Feature\Playground\Login\Blade\Http\Controllers\Playground\AuthenticationRouteTest::test_users_can_authenticate_using_the_login_screen_playground"/>
        <covered by="Tests\Feature\Playground\Login\Blade\Http\Controllers\Playground\AuthenticationRouteTest::test_users_can_authenticate_using_json"/>
        <covered by="Tests\Feature\Playground\Login\Blade\Http\Controllers\Playground\AuthenticationRouteTest::test_login_repeat_under_rate_limit_and_clear"/>
        <covered by="Tests\Feature\Playground\Login\Blade\Http\Controllers\Sanctum\LogoutRouteTest::test_sanctum_users_can_authenticate_and_logout_and_delete_token"/>
        <covered by="Tests\Feature\Playground\Login\Blade\Http\Controllers\Sanctum\LogoutRouteTest::test_sanctum_users_can_authenticate_and_logout_and_delete_token_with_sessions"/>
      </line>
      <line nr="328">
        <covered by="Tests\Feature\Playground\Login\Blade\Http\Controllers\Laravel\AuthenticationRouteTest::test_users_can_authenticate_using_the_login_screen_laravel"/>
        <covered by="Tests\Feature\Playground\Login\Blade\Http\Controllers\Laravel\AuthenticationRouteTest::test_users_can_authenticate_using_json"/>
        <covered by="Tests\Feature\Playground\Login\Blade\Http\Controllers\Laravel\AuthenticationRouteTest::test_login_repeat_under_rate_limit_and_clear"/>
        <covered by="Tests\Feature\Playground\Login\Blade\Http\Controllers\Playground\AuthenticationRouteTest::test_users_can_authenticate_using_the_login_screen_playground"/>
        <covered by="Tests\Feature\Playground\Login\Blade\Http\Controllers\Playground\AuthenticationRouteTest::test_users_can_authenticate_using_json"/>
        <covered by="Tests\Feature\Playground\Login\Blade\Http\Controllers\Playground\AuthenticationRouteTest::test_login_repeat_under_rate_limit_and_clear"/>
        <covered by="Tests\Feature\Playground\Login\Blade\Http\Controllers\Sanctum\LogoutRouteTest::test_sanctum_users_can_authenticate_and_logout_and_delete_token"/>
        <covered by="Tests\Feature\Playground\Login\Blade\Http\Controllers\Sanctum\LogoutRouteTest::test_sanctum_users_can_authenticate_and_logout_and_delete_token_with_sessions"/>
      </line>
      <line nr="330">
        <covered by="Tests\Feature\Playground\Login\Blade\Http\Controllers\Laravel\AuthenticationRouteTest::test_users_can_authenticate_using_the_login_screen_laravel"/>
        <covered by="Tests\Feature\Playground\Login\Blade\Http\Controllers\Laravel\AuthenticationRouteTest::test_users_can_authenticate_using_json"/>
        <covered by="Tests\Feature\Playground\Login\Blade\Http\Controllers\Laravel\AuthenticationRouteTest::test_login_repeat_under_rate_limit_and_clear"/>
        <covered by="Tests\Feature\Playground\Login\Blade\Http\Controllers\Playground\AuthenticationRouteTest::test_users_can_authenticate_using_the_login_screen_playground"/>
        <covered by="Tests\Feature\Playground\Login\Blade\Http\Controllers\Playground\AuthenticationRouteTest::test_users_can_authenticate_using_json"/>
        <covered by="Tests\Feature\Playground\Login\Blade\Http\Controllers\Playground\AuthenticationRouteTest::test_login_repeat_under_rate_limit_and_clear"/>
        <covered by="Tests\Feature\Playground\Login\Blade\Http\Controllers\Sanctum\LogoutRouteTest::test_sanctum_users_can_authenticate_and_logout_and_delete_token"/>
        <covered by="Tests\Feature\Playground\Login\Blade\Http\Controllers\Sanctum\LogoutRouteTest::test_sanctum_users_can_authenticate_and_logout_and_delete_token_with_sessions"/>
      </line>
      <line nr="335">
        <covered by="Tests\Feature\Playground\Login\Blade\Http\Controllers\Laravel\AuthenticationRouteTest::test_users_can_authenticate_using_the_login_screen_laravel"/>
        <covered by="Tests\Feature\Playground\Login\Blade\Http\Controllers\Laravel\AuthenticationRouteTest::test_users_can_authenticate_using_json"/>
        <covered by="Tests\Feature\Playground\Login\Blade\Http\Controllers\Laravel\AuthenticationRouteTest::test_login_repeat_under_rate_limit_and_clear"/>
        <covered by="Tests\Feature\Playground\Login\Blade\Http\Controllers\Playground\AuthenticationRouteTest::test_users_can_authenticate_using_the_login_screen_playground"/>
        <covered by="Tests\Feature\Playground\Login\Blade\Http\Controllers\Playground\AuthenticationRouteTest::test_users_can_authenticate_using_json"/>
        <covered by="Tests\Feature\Playground\Login\Blade\Http\Controllers\Playground\AuthenticationRouteTest::test_login_repeat_under_rate_limit_and_clear"/>
        <covered by="Tests\Feature\Playground\Login\Blade\Http\Controllers\Sanctum\LogoutRouteTest::test_sanctum_users_can_authenticate_and_logout_and_delete_token"/>
        <covered by="Tests\Feature\Playground\Login\Blade\Http\Controllers\Sanctum\LogoutRouteTest::test_sanctum_users_can_authenticate_and_logout_and_delete_token_with_sessions"/>
      </line>
      <line nr="336">
        <covered by="Tests\Feature\Playground\Login\Blade\Http\Controllers\Laravel\AuthenticationRouteTest::test_users_can_authenticate_using_the_login_screen_laravel"/>
        <covered by="Tests\Feature\Playground\Login\Blade\Http\Controllers\Laravel\AuthenticationRouteTest::test_users_can_authenticate_using_json"/>
        <covered by="Tests\Feature\Playground\Login\Blade\Http\Controllers\Laravel\AuthenticationRouteTest::test_login_repeat_under_rate_limit_and_clear"/>
        <covered by="Tests\Feature\Playground\Login\Blade\Http\Controllers\Playground\AuthenticationRouteTest::test_users_can_authenticate_using_the_login_screen_playground"/>
        <covered by="Tests\Feature\Playground\Login\Blade\Http\Controllers\Playground\AuthenticationRouteTest::test_users_can_authenticate_using_json"/>
        <covered by="Tests\Feature\Playground\Login\Blade\Http\Controllers\Playground\AuthenticationRouteTest::test_login_repeat_under_rate_limit_and_clear"/>
        <covered by="Tests\Feature\Playground\Login\Blade\Http\Controllers\Sanctum\LogoutRouteTest::test_sanctum_users_can_authenticate_and_logout_and_delete_token"/>
        <covered by="Tests\Feature\Playground\Login\Blade\Http\Controllers\Sanctum\LogoutRouteTest::test_sanctum_users_can_authenticate_and_logout_and_delete_token_with_sessions"/>
      </line>
      <line nr="337">
        <covered by="Tests\Feature\Playground\Login\Blade\Http\Controllers\Laravel\AuthenticationRouteTest::test_users_can_authenticate_using_the_login_screen_laravel"/>
        <covered by="Tests\Feature\Playground\Login\Blade\Http\Controllers\Laravel\AuthenticationRouteTest::test_users_can_authenticate_using_json"/>
        <covered by="Tests\Feature\Playground\Login\Blade\Http\Controllers\Laravel\AuthenticationRouteTest::test_login_repeat_under_rate_limit_and_clear"/>
        <covered by="Tests\Feature\Playground\Login\Blade\Http\Controllers\Playground\AuthenticationRouteTest::test_users_can_authenticate_using_the_login_screen_playground"/>
        <covered by="Tests\Feature\Playground\Login\Blade\Http\Controllers\Playground\AuthenticationRouteTest::test_users_can_authenticate_using_json"/>
        <covered by="Tests\Feature\Playground\Login\Blade\Http\Controllers\Playground\AuthenticationRouteTest::test_login_repeat_under_rate_limit_and_clear"/>
        <covered by="Tests\Feature\Playground\Login\Blade\Http\Controllers\Sanctum\LogoutRouteTest::test_sanctum_users_can_authenticate_and_logout_and_delete_token"/>
        <covered by="Tests\Feature\Playground\Login\Blade\Http\Controllers\Sanctum\LogoutRouteTest::test_sanctum_users_can_authenticate_and_logout_and_delete_token_with_sessions"/>
      </line>
      <line nr="338">
        <covered by="Tests\Feature\Playground\Login\Blade\Http\Controllers\Laravel\AuthenticationRouteTest::test_users_can_authenticate_using_the_login_screen_laravel"/>
        <covered by="Tests\Feature\Playground\Login\Blade\Http\Controllers\Laravel\AuthenticationRouteTest::test_users_can_authenticate_using_json"/>
        <covered by="Tests\Feature\Playground\Login\Blade\Http\Controllers\Laravel\AuthenticationRouteTest::test_login_repeat_under_rate_limit_and_clear"/>
        <covered by="Tests\Feature\Playground\Login\Blade\Http\Controllers\Playground\AuthenticationRouteTest::test_users_can_authenticate_using_the_login_screen_playground"/>
        <covered by="Tests\Feature\Playground\Login\Blade\Http\Controllers\Playground\AuthenticationRouteTest::test_users_can_authenticate_using_json"/>
        <covered by="Tests\Feature\Playground\Login\Blade\Http\Controllers\Playground\AuthenticationRouteTest::test_login_repeat_under_rate_limit_and_clear"/>
        <covered by="Tests\Feature\Playground\Login\Blade\Http\Controllers\Sanctum\LogoutRouteTest::test_sanctum_users_can_authenticate_and_logout_and_delete_token"/>
        <covered by="Tests\Feature\Playground\Login\Blade\Http\Controllers\Sanctum\LogoutRouteTest::test_sanctum_users_can_authenticate_and_logout_and_delete_token_with_sessions"/>
      </line>
      <line nr="343">
        <covered by="Tests\Feature\Playground\Login\Blade\Http\Controllers\Laravel\AuthenticationRouteTest::test_users_can_authenticate_using_the_login_screen_laravel"/>
        <covered by="Tests\Feature\Playground\Login\Blade\Http\Controllers\Laravel\AuthenticationRouteTest::test_users_can_authenticate_using_json"/>
        <covered by="Tests\Feature\Playground\Login\Blade\Http\Controllers\Laravel\AuthenticationRouteTest::test_login_repeat_under_rate_limit_and_clear"/>
        <covered by="Tests\Feature\Playground\Login\Blade\Http\Controllers\Playground\AuthenticationRouteTest::test_users_can_authenticate_using_the_login_screen_playground"/>
        <covered by="Tests\Feature\Playground\Login\Blade\Http\Controllers\Playground\AuthenticationRouteTest::test_users_can_authenticate_using_json"/>
        <covered by="Tests\Feature\Playground\Login\Blade\Http\Controllers\Playground\AuthenticationRouteTest::test_login_repeat_under_rate_limit_and_clear"/>
        <covered by="Tests\Feature\Playground\Login\Blade\Http\Controllers\Sanctum\LogoutRouteTest::test_sanctum_users_can_authenticate_and_logout_and_delete_token"/>
        <covered by="Tests\Feature\Playground\Login\Blade\Http\Controllers\Sanctum\LogoutRouteTest::test_sanctum_users_can_authenticate_and_logout_and_delete_token_with_sessions"/>
      </line>
      <line nr="344">
        <covered by="Tests\Feature\Playground\Login\Blade\Http\Controllers\Laravel\AuthenticationRouteTest::test_users_can_authenticate_using_the_login_screen_laravel"/>
        <covered by="Tests\Feature\Playground\Login\Blade\Http\Controllers\Laravel\AuthenticationRouteTest::test_users_can_authenticate_using_json"/>
        <covered by="Tests\Feature\Playground\Login\Blade\Http\Controllers\Laravel\AuthenticationRouteTest::test_login_repeat_under_rate_limit_and_clear"/>
        <covered by="Tests\Feature\Playground\Login\Blade\Http\Controllers\Playground\AuthenticationRouteTest::test_users_can_authenticate_using_the_login_screen_playground"/>
        <covered by="Tests\Feature\Playground\Login\Blade\Http\Controllers\Playground\AuthenticationRouteTest::test_users_can_authenticate_using_json"/>
        <covered by="Tests\Feature\Playground\Login\Blade\Http\Controllers\Playground\AuthenticationRouteTest::test_login_repeat_under_rate_limit_and_clear"/>
        <covered by="Tests\Feature\Playground\Login\Blade\Http\Controllers\Sanctum\LogoutRouteTest::test_sanctum_users_can_authenticate_and_logout_and_delete_token"/>
        <covered by="Tests\Feature\Playground\Login\Blade\Http\Controllers\Sanctum\LogoutRouteTest::test_sanctum_users_can_authenticate_and_logout_and_delete_token_with_sessions"/>
      </line>
      <line nr="345">
        <covered by="Tests\Feature\Playground\Login\Blade\Http\Controllers\Laravel\AuthenticationRouteTest::test_users_can_authenticate_using_the_login_screen_laravel"/>
        <covered by="Tests\Feature\Playground\Login\Blade\Http\Controllers\Laravel\AuthenticationRouteTest::test_users_can_authenticate_using_json"/>
        <covered by="Tests\Feature\Playground\Login\Blade\Http\Controllers\Laravel\AuthenticationRouteTest::test_login_repeat_under_rate_limit_and_clear"/>
        <covered by="Tests\Feature\Playground\Login\Blade\Http\Controllers\Playground\AuthenticationRouteTest::test_users_can_authenticate_using_the_login_screen_playground"/>
        <covered by="Tests\Feature\Playground\Login\Blade\Http\Controllers\Playground\AuthenticationRouteTest::test_users_can_authenticate_using_json"/>
        <covered by="Tests\Feature\Playground\Login\Blade\Http\Controllers\Playground\AuthenticationRouteTest::test_login_repeat_under_rate_limit_and_clear"/>
        <covered by="Tests\Feature\Playground\Login\Blade\Http\Controllers\Sanctum\LogoutRouteTest::test_sanctum_users_can_authenticate_and_logout_and_delete_token"/>
        <covered by="Tests\Feature\Playground\Login\Blade\Http\Controllers\Sanctum\LogoutRouteTest::test_sanctum_users_can_authenticate_and_logout_and_delete_token_with_sessions"/>
      </line>
      <line nr="356">
        <covered by="Tests\Feature\Playground\Login\Blade\Http\Controllers\Laravel\AuthenticationRouteTest::test_users_can_authenticate_using_the_login_screen_laravel"/>
        <covered by="Tests\Feature\Playground\Login\Blade\Http\Controllers\Laravel\AuthenticationRouteTest::test_users_can_authenticate_using_json"/>
        <covered by="Tests\Feature\Playground\Login\Blade\Http\Controllers\Laravel\AuthenticationRouteTest::test_login_repeat_under_rate_limit_and_clear"/>
        <covered by="Tests\Feature\Playground\Login\Blade\Http\Controllers\Playground\AuthenticationRouteTest::test_users_can_authenticate_using_the_login_screen_playground"/>
        <covered by="Tests\Feature\Playground\Login\Blade\Http\Controllers\Playground\AuthenticationRouteTest::test_users_can_authenticate_using_json"/>
        <covered by="Tests\Feature\Playground\Login\Blade\Http\Controllers\Playground\AuthenticationRouteTest::test_login_repeat_under_rate_limit_and_clear"/>
        <covered by="Tests\Feature\Playground\Login\Blade\Http\Controllers\Sanctum\LogoutRouteTest::test_sanctum_users_can_authenticate_and_logout_and_delete_token"/>
        <covered by="Tests\Feature\Playground\Login\Blade\Http\Controllers\Sanctum\LogoutRouteTest::test_sanctum_users_can_authenticate_and_logout_and_delete_token_with_sessions"/>
      </line>
      <line nr="358">
        <covered by="Tests\Feature\Playground\Login\Blade\Http\Controllers\Laravel\AuthenticationRouteTest::test_users_can_authenticate_using_the_login_screen_laravel"/>
        <covered by="Tests\Feature\Playground\Login\Blade\Http\Controllers\Laravel\AuthenticationRouteTest::test_users_can_authenticate_using_json"/>
        <covered by="Tests\Feature\Playground\Login\Blade\Http\Controllers\Laravel\AuthenticationRouteTest::test_login_repeat_under_rate_limit_and_clear"/>
        <covered by="Tests\Feature\Playground\Login\Blade\Http\Controllers\Playground\AuthenticationRouteTest::test_users_can_authenticate_using_the_login_screen_playground"/>
        <covered by="Tests\Feature\Playground\Login\Blade\Http\Controllers\Playground\AuthenticationRouteTest::test_users_can_authenticate_using_json"/>
        <covered by="Tests\Feature\Playground\Login\Blade\Http\Controllers\Playground\AuthenticationRouteTest::test_login_repeat_under_rate_limit_and_clear"/>
        <covered by="Tests\Feature\Playground\Login\Blade\Http\Controllers\Sanctum\LogoutRouteTest::test_sanctum_users_can_authenticate_and_logout_and_delete_token"/>
        <covered by="Tests\Feature\Playground\Login\Blade\Http\Controllers\Sanctum\LogoutRouteTest::test_sanctum_users_can_authenticate_and_logout_and_delete_token_with_sessions"/>
      </line>
      <line nr="359">
        <covered by="Tests\Feature\Playground\Login\Blade\Http\Controllers\Sanctum\LogoutRouteTest::test_sanctum_users_can_authenticate_and_logout_and_delete_token"/>
        <covered by="Tests\Feature\Playground\Login\Blade\Http\Controllers\Sanctum\LogoutRouteTest::test_sanctum_users_can_authenticate_and_logout_and_delete_token_with_sessions"/>
      </line>
      <line nr="361">
        <covered by="Tests\Feature\Playground\Login\Blade\Http\Controllers\Laravel\AuthenticationRouteTest::test_users_can_authenticate_using_the_login_screen_laravel"/>
        <covered by="Tests\Feature\Playground\Login\Blade\Http\Controllers\Laravel\AuthenticationRouteTest::test_users_can_authenticate_using_json"/>
        <covered by="Tests\Feature\Playground\Login\Blade\Http\Controllers\Laravel\AuthenticationRouteTest::test_login_repeat_under_rate_limit_and_clear"/>
        <covered by="Tests\Feature\Playground\Login\Blade\Http\Controllers\Playground\AuthenticationRouteTest::test_users_can_authenticate_using_the_login_screen_playground"/>
        <covered by="Tests\Feature\Playground\Login\Blade\Http\Controllers\Playground\AuthenticationRouteTest::test_users_can_authenticate_using_json"/>
        <covered by="Tests\Feature\Playground\Login\Blade\Http\Controllers\Playground\AuthenticationRouteTest::test_login_repeat_under_rate_limit_and_clear"/>
      </line>
      <line nr="369">
        <covered by="Tests\Feature\Playground\Login\Blade\Http\Controllers\Laravel\AuthenticationRouteTest::test_users_can_authenticate_using_the_login_screen_laravel"/>
        <covered by="Tests\Feature\Playground\Login\Blade\Http\Controllers\Laravel\AuthenticationRouteTest::test_users_can_authenticate_using_json"/>
        <covered by="Tests\Feature\Playground\Login\Blade\Http\Controllers\Laravel\AuthenticationRouteTest::test_login_repeat_under_rate_limit_and_clear"/>
        <covered by="Tests\Feature\Playground\Login\Blade\Http\Controllers\Playground\AuthenticationRouteTest::test_users_can_authenticate_using_the_login_screen_playground"/>
        <covered by="Tests\Feature\Playground\Login\Blade\Http\Controllers\Playground\AuthenticationRouteTest::test_users_can_authenticate_using_json"/>
        <covered by="Tests\Feature\Playground\Login\Blade\Http\Controllers\Playground\AuthenticationRouteTest::test_login_repeat_under_rate_limit_and_clear"/>
        <covered by="Tests\Feature\Playground\Login\Blade\Http\Controllers\Sanctum\LogoutRouteTest::test_sanctum_users_can_authenticate_and_logout_and_delete_token"/>
        <covered by="Tests\Feature\Playground\Login\Blade\Http\Controllers\Sanctum\LogoutRouteTest::test_sanctum_users_can_authenticate_and_logout_and_delete_token_with_sessions"/>
      </line>
      <line nr="380">
        <covered by="Tests\Feature\Playground\Login\Blade\Http\Controllers\Sanctum\LogoutRouteTest::test_sanctum_users_can_authenticate_and_logout_and_delete_token"/>
        <covered by="Tests\Feature\Playground\Login\Blade\Http\Controllers\Sanctum\LogoutRouteTest::test_sanctum_users_can_authenticate_and_logout_and_delete_token_with_sessions"/>
      </line>
      <line nr="385">
        <covered by="Tests\Feature\Playground\Login\Blade\Http\Controllers\Sanctum\LogoutRouteTest::test_sanctum_users_can_authenticate_and_logout_and_delete_token"/>
        <covered by="Tests\Feature\Playground\Login\Blade\Http\Controllers\Sanctum\LogoutRouteTest::test_sanctum_users_can_authenticate_and_logout_and_delete_token_with_sessions"/>
      </line>
      <line nr="387">
        <covered by="Tests\Feature\Playground\Login\Blade\Http\Controllers\Sanctum\LogoutRouteTest::test_sanctum_users_can_authenticate_and_logout_and_delete_token"/>
        <covered by="Tests\Feature\Playground\Login\Blade\Http\Controllers\Sanctum\LogoutRouteTest::test_sanctum_users_can_authenticate_and_logout_and_delete_token_with_sessions"/>
      </line>
      <line nr="389">
        <covered by="Tests\Feature\Playground\Login\Blade\Http\Controllers\Sanctum\LogoutRouteTest::test_sanctum_users_can_authenticate_and_logout_and_delete_token"/>
        <covered by="Tests\Feature\Playground\Login\Blade\Http\Controllers\Sanctum\LogoutRouteTest::test_sanctum_users_can_authenticate_and_logout_and_delete_token_with_sessions"/>
      </line>
      <line nr="395">
        <covered by="Tests\Feature\Playground\Login\Blade\Http\Controllers\Sanctum\LogoutRouteTest::test_sanctum_users_can_authenticate_and_logout_and_delete_token"/>
        <covered by="Tests\Feature\Playground\Login\Blade\Http\Controllers\Sanctum\LogoutRouteTest::test_sanctum_users_can_authenticate_and_logout_and_delete_token_with_sessions"/>
      </line>
      <line nr="396">
        <covered by="Tests\Feature\Playground\Login\Blade\Http\Controllers\Sanctum\LogoutRouteTest::test_sanctum_users_can_authenticate_and_logout_and_delete_token"/>
        <covered by="Tests\Feature\Playground\Login\Blade\Http\Controllers\Sanctum\LogoutRouteTest::test_sanctum_users_can_authenticate_and_logout_and_delete_token_with_sessions"/>
      </line>
      <line nr="397">
        <covered by="Tests\Feature\Playground\Login\Blade\Http\Controllers\Sanctum\LogoutRouteTest::test_sanctum_users_can_authenticate_and_logout_and_delete_token"/>
        <covered by="Tests\Feature\Playground\Login\Blade\Http\Controllers\Sanctum\LogoutRouteTest::test_sanctum_users_can_authenticate_and_logout_and_delete_token_with_sessions"/>
      </line>
      <line nr="401">
        <covered by="Tests\Feature\Playground\Login\Blade\Http\Controllers\Sanctum\LogoutRouteTest::test_sanctum_users_can_authenticate_and_logout_and_delete_token"/>
        <covered by="Tests\Feature\Playground\Login\Blade\Http\Controllers\Sanctum\LogoutRouteTest::test_sanctum_users_can_authenticate_and_logout_and_delete_token_with_sessions"/>
      </line>
      <line nr="402">
        <covered by="Tests\Feature\Playground\Login\Blade\Http\Controllers\Sanctum\LogoutRouteTest::test_sanctum_users_can_authenticate_and_logout_and_delete_token"/>
        <covered by="Tests\Feature\Playground\Login\Blade\Http\Controllers\Sanctum\LogoutRouteTest::test_sanctum_users_can_authenticate_and_logout_and_delete_token_with_sessions"/>
      </line>
      <line nr="403">
        <covered by="Tests\Feature\Playground\Login\Blade\Http\Controllers\Sanctum\LogoutRouteTest::test_sanctum_users_can_authenticate_and_logout_and_delete_token"/>
        <covered by="Tests\Feature\Playground\Login\Blade\Http\Controllers\Sanctum\LogoutRouteTest::test_sanctum_users_can_authenticate_and_logout_and_delete_token_with_sessions"/>
      </line>
      <line nr="406">
        <covered by="Tests\Feature\Playground\Login\Blade\Http\Controllers\Sanctum\LogoutRouteTest::test_sanctum_users_can_authenticate_and_logout_and_delete_token"/>
        <covered by="Tests\Feature\Playground\Login\Blade\Http\Controllers\Sanctum\LogoutRouteTest::test_sanctum_users_can_authenticate_and_logout_and_delete_token_with_sessions"/>
      </line>
      <line nr="407">
        <covered by="Tests\Feature\Playground\Login\Blade\Http\Controllers\Sanctum\LogoutRouteTest::test_sanctum_users_can_authenticate_and_logout_and_delete_token"/>
        <covered by="Tests\Feature\Playground\Login\Blade\Http\Controllers\Sanctum\LogoutRouteTest::test_sanctum_users_can_authenticate_and_logout_and_delete_token_with_sessions"/>
      </line>
      <line nr="408">
        <covered by="Tests\Feature\Playground\Login\Blade\Http\Controllers\Sanctum\LogoutRouteTest::test_sanctum_users_can_authenticate_and_logout_and_delete_token"/>
        <covered by="Tests\Feature\Playground\Login\Blade\Http\Controllers\Sanctum\LogoutRouteTest::test_sanctum_users_can_authenticate_and_logout_and_delete_token_with_sessions"/>
      </line>
      <line nr="409">
        <covered by="Tests\Feature\Playground\Login\Blade\Http\Controllers\Sanctum\LogoutRouteTest::test_sanctum_users_can_authenticate_and_logout_and_delete_token"/>
        <covered by="Tests\Feature\Playground\Login\Blade\Http\Controllers\Sanctum\LogoutRouteTest::test_sanctum_users_can_authenticate_and_logout_and_delete_token_with_sessions"/>
      </line>
      <line nr="411">
        <covered by="Tests\Feature\Playground\Login\Blade\Http\Controllers\Sanctum\LogoutRouteTest::test_sanctum_users_can_authenticate_and_logout_and_delete_token"/>
        <covered by="Tests\Feature\Playground\Login\Blade\Http\Controllers\Sanctum\LogoutRouteTest::test_sanctum_users_can_authenticate_and_logout_and_delete_token_with_sessions"/>
      </line>
      <line nr="414">
        <covered by="Tests\Feature\Playground\Login\Blade\Http\Controllers\Sanctum\LogoutRouteTest::test_sanctum_users_can_authenticate_and_logout_and_delete_token"/>
        <covered by="Tests\Feature\Playground\Login\Blade\Http\Controllers\Sanctum\LogoutRouteTest::test_sanctum_users_can_authenticate_and_logout_and_delete_token_with_sessions"/>
      </line>
      <line nr="161">
        <covered by="Tests\Feature\Playground\Login\Blade\Http\Controllers\Sanctum\LogoutRouteTest::test_sanctum_users_can_authenticate_and_logout_and_delete_token"/>
        <covered by="Tests\Feature\Playground\Login\Blade\Http\Controllers\Sanctum\LogoutRouteTest::test_sanctum_users_can_authenticate_and_logout_and_delete_token_with_sessions"/>
      </line>
      <line nr="162">
        <covered by="Tests\Feature\Playground\Login\Blade\Http\Controllers\Sanctum\LogoutRouteTest::test_sanctum_users_can_authenticate_and_logout_and_delete_token"/>
        <covered by="Tests\Feature\Playground\Login\Blade\Http\Controllers\Sanctum\LogoutRouteTest::test_sanctum_users_can_authenticate_and_logout_and_delete_token_with_sessions"/>
      </line>
      <line nr="410">
        <covered by="Tests\Feature\Playground\Login\Blade\Http\Controllers\Sanctum\LogoutRouteTest::test_sanctum_users_can_authenticate_and_logout_and_delete_token"/>
        <covered by="Tests\Feature\Playground\Login\Blade\Http\Controllers\Sanctum\LogoutRouteTest::test_sanctum_users_can_authenticate_and_logout_and_delete_token_with_sessions"/>
      </line>
    </coverage>
    <source>
      <line no="1">
        <token name="T_OPEN_TAG">&lt;?php</token>
      </line>
      <line no="2"/>
      <line no="3">
        <token name="T_DECLARE">declare</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_STRING">strict_types</token>
        <token name="T_EQUAL">=</token>
        <token name="T_LNUMBER">1</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="4">
        <token name="T_DOC_COMMENT">/**</token>
      </line>
      <line no="5">
        <token name="T_DOC_COMMENT"> * Playground</token>
      </line>
      <line no="6">
        <token name="T_DOC_COMMENT"> */</token>
      </line>
      <line no="7">
        <token name="T_NAMESPACE">namespace</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_NAME_QUALIFIED">Playground\Auth</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="8"/>
      <line no="9">
        <token name="T_USE">use</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_NAME_QUALIFIED">Illuminate\Contracts\Auth\Authenticatable</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="10">
        <token name="T_USE">use</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_NAME_QUALIFIED">Illuminate\Support\Carbon</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="11">
        <token name="T_COMMENT">// use Illuminate\Support\Facades\Auth;</token>
      </line>
      <line no="12">
        <token name="T_USE">use</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_NAME_QUALIFIED">Illuminate\Support\Facades\Log</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="13">
        <token name="T_USE">use</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_NAME_QUALIFIED">Laravel\Sanctum\Contracts\HasApiTokens</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="14">
        <token name="T_USE">use</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_NAME_QUALIFIED">Playground\Models\Contracts\Abilities</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="15">
        <token name="T_USE">use</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_NAME_QUALIFIED">Playground\Models\Contracts\Admin</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="16">
        <token name="T_USE">use</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_NAME_QUALIFIED">Playground\Models\Contracts\Privileges</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="17">
        <token name="T_USE">use</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_NAME_QUALIFIED">Playground\Models\Contracts\Role</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="18"/>
      <line no="19">
        <token name="T_DOC_COMMENT">/**</token>
      </line>
      <line no="20">
        <token name="T_DOC_COMMENT"> * \Playground\Auth\Issuer</token>
      </line>
      <line no="21">
        <token name="T_DOC_COMMENT"> */</token>
      </line>
      <line no="22">
        <token name="T_CLASS">class</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">Issuer</token>
      </line>
      <line no="23">
        <token name="T_OPEN_CURLY">{</token>
      </line>
      <line no="24">
        <token name="T_WHITESPACE">    </token>
        <token name="T_DOC_COMMENT">/**</token>
      </line>
      <line no="25">
        <token name="T_DOC_COMMENT">     * @var array&lt;int, string&gt;</token>
      </line>
      <line no="26">
        <token name="T_DOC_COMMENT">     */</token>
      </line>
      <line no="27">
        <token name="T_WHITESPACE">    </token>
        <token name="T_PROTECTED">protected</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_ARRAY">array</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$abilities</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_EQUAL">=</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_SQUARE">[</token>
        <token name="T_CLOSE_SQUARE">]</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="28"/>
      <line no="29">
        <token name="T_WHITESPACE">    </token>
        <token name="T_PROTECTED">protected</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">bool</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$init</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_EQUAL">=</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">false</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="30"/>
      <line no="31">
        <token name="T_WHITESPACE">    </token>
        <token name="T_PROTECTED">protected</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">bool</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$isRoot</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_EQUAL">=</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">false</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="32"/>
      <line no="33">
        <token name="T_WHITESPACE">    </token>
        <token name="T_PROTECTED">protected</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">bool</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$isAdmin</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_EQUAL">=</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">false</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="34"/>
      <line no="35">
        <token name="T_WHITESPACE">    </token>
        <token name="T_PROTECTED">protected</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">bool</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$isManager</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_EQUAL">=</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">false</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="36"/>
      <line no="37">
        <token name="T_WHITESPACE">    </token>
        <token name="T_PROTECTED">protected</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">bool</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$isUser</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_EQUAL">=</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">false</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="38"/>
      <line no="39">
        <token name="T_WHITESPACE">    </token>
        <token name="T_PROTECTED">protected</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">bool</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$isGuest</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_EQUAL">=</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">false</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="40"/>
      <line no="41">
        <token name="T_WHITESPACE">    </token>
        <token name="T_PROTECTED">protected</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">bool</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$hasAbilities</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_EQUAL">=</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">false</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="42"/>
      <line no="43">
        <token name="T_WHITESPACE">    </token>
        <token name="T_PROTECTED">protected</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">bool</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$hasPrivileges</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_EQUAL">=</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">false</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="44"/>
      <line no="45">
        <token name="T_WHITESPACE">    </token>
        <token name="T_PROTECTED">protected</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">bool</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$hasRoles</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_EQUAL">=</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">false</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="46"/>
      <line no="47">
        <token name="T_WHITESPACE">    </token>
        <token name="T_PROTECTED">protected</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">bool</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$hasSanctum</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_EQUAL">=</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">false</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="48"/>
      <line no="49">
        <token name="T_WHITESPACE">    </token>
        <token name="T_PROTECTED">protected</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">bool</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$useSanctum</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_EQUAL">=</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">false</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="50"/>
      <line no="51">
        <token name="T_WHITESPACE">    </token>
        <token name="T_PROTECTED">protected</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">bool</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$onlyUserAbilities</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_EQUAL">=</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">false</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="52"/>
      <line no="53">
        <token name="T_WHITESPACE">    </token>
        <token name="T_DOC_COMMENT">/**</token>
      </line>
      <line no="54">
        <token name="T_DOC_COMMENT">     * @var array&lt;int, string&gt;</token>
      </line>
      <line no="55">
        <token name="T_DOC_COMMENT">     */</token>
      </line>
      <line no="56">
        <token name="T_WHITESPACE">    </token>
        <token name="T_PROTECTED">protected</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_ARRAY">array</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$rootAccessGroups</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_EQUAL">=</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_SQUARE">[</token>
      </line>
      <line no="57">
        <token name="T_WHITESPACE">        </token>
        <token name="T_CONSTANT_ENCAPSED_STRING">'root'</token>
        <token name="T_COMMA">,</token>
      </line>
      <line no="58">
        <token name="T_WHITESPACE">        </token>
        <token name="T_CONSTANT_ENCAPSED_STRING">'admin'</token>
        <token name="T_COMMA">,</token>
      </line>
      <line no="59">
        <token name="T_WHITESPACE">    </token>
        <token name="T_CLOSE_SQUARE">]</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="60"/>
      <line no="61">
        <token name="T_WHITESPACE">    </token>
        <token name="T_DOC_COMMENT">/**</token>
      </line>
      <line no="62">
        <token name="T_DOC_COMMENT">     * @var array&lt;int, string&gt;</token>
      </line>
      <line no="63">
        <token name="T_DOC_COMMENT">     */</token>
      </line>
      <line no="64">
        <token name="T_WHITESPACE">    </token>
        <token name="T_PROTECTED">protected</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_ARRAY">array</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$rootAbilities</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_EQUAL">=</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_SQUARE">[</token>
      </line>
      <line no="65">
        <token name="T_WHITESPACE">        </token>
        <token name="T_CONSTANT_ENCAPSED_STRING">'*'</token>
        <token name="T_COMMA">,</token>
      </line>
      <line no="66">
        <token name="T_WHITESPACE">        </token>
        <token name="T_CONSTANT_ENCAPSED_STRING">'root'</token>
        <token name="T_COMMA">,</token>
      </line>
      <line no="67">
        <token name="T_WHITESPACE">    </token>
        <token name="T_CLOSE_SQUARE">]</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="68"/>
      <line no="69">
        <token name="T_WHITESPACE">    </token>
        <token name="T_PUBLIC">public</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_FUNCTION">function</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">useSanctum</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_COLON">:</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">bool</token>
      </line>
      <line no="70">
        <token name="T_WHITESPACE">    </token>
        <token name="T_OPEN_CURLY">{</token>
      </line>
      <line no="71">
        <token name="T_WHITESPACE">        </token>
        <token name="T_RETURN">return</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$this</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">useSanctum</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="72">
        <token name="T_WHITESPACE">    </token>
        <token name="T_CLOSE_CURLY">}</token>
      </line>
      <line no="73"/>
      <line no="74">
        <token name="T_WHITESPACE">    </token>
        <token name="T_DOC_COMMENT">/**</token>
      </line>
      <line no="75">
        <token name="T_DOC_COMMENT">     * @return array&lt;int, string&gt;</token>
      </line>
      <line no="76">
        <token name="T_DOC_COMMENT">     */</token>
      </line>
      <line no="77">
        <token name="T_WHITESPACE">    </token>
        <token name="T_PROTECTED">protected</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_FUNCTION">function</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">compileAbilitiesByGroup</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_STRING">string</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$group</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_COLON">:</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_ARRAY">array</token>
      </line>
      <line no="78">
        <token name="T_WHITESPACE">    </token>
        <token name="T_OPEN_CURLY">{</token>
      </line>
      <line no="79">
        <token name="T_WHITESPACE">        </token>
        <token name="T_DOC_COMMENT">/**</token>
      </line>
      <line no="80">
        <token name="T_DOC_COMMENT">         * @var array&lt;int, string&gt; $packages</token>
      </line>
      <line no="81">
        <token name="T_DOC_COMMENT">         */</token>
      </line>
      <line no="82">
        <token name="T_WHITESPACE">        </token>
        <token name="T_VARIABLE">$packages</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_EQUAL">=</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">config</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_CONSTANT_ENCAPSED_STRING">'playground-auth.packages'</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="83"/>
      <line no="84">
        <token name="T_WHITESPACE">        </token>
        <token name="T_IF">if</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_EXCLAMATION_MARK">!</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_EMPTY">empty</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_STRING">config</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_CONSTANT_ENCAPSED_STRING">'playground-auth.require.package_abilities'</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_CURLY">{</token>
      </line>
      <line no="85">
        <token name="T_WHITESPACE">            </token>
        <token name="T_IF">if</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_EXCLAMATION_MARK">!</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">in_array</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_CONSTANT_ENCAPSED_STRING">'playground-auth'</token>
        <token name="T_COMMA">,</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$packages</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_CURLY">{</token>
      </line>
      <line no="86">
        <token name="T_WHITESPACE">                </token>
        <token name="T_STRING">array_unshift</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_VARIABLE">$packages</token>
        <token name="T_COMMA">,</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_CONSTANT_ENCAPSED_STRING">'playground-auth'</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="87">
        <token name="T_WHITESPACE">            </token>
        <token name="T_CLOSE_CURLY">}</token>
      </line>
      <line no="88">
        <token name="T_WHITESPACE">        </token>
        <token name="T_CLOSE_CURLY">}</token>
      </line>
      <line no="89"/>
      <line no="90">
        <token name="T_WHITESPACE">        </token>
        <token name="T_DOC_COMMENT">/**</token>
      </line>
      <line no="91">
        <token name="T_DOC_COMMENT">         * @var array&lt;string, array&lt;string, mixed&gt;&gt; $package_abilities</token>
      </line>
      <line no="92">
        <token name="T_DOC_COMMENT">         */</token>
      </line>
      <line no="93">
        <token name="T_WHITESPACE">        </token>
        <token name="T_VARIABLE">$package_abilities</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_EQUAL">=</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_SQUARE">[</token>
        <token name="T_CLOSE_SQUARE">]</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="94"/>
      <line no="95">
        <token name="T_WHITESPACE">        </token>
        <token name="T_DOC_COMMENT">/**</token>
      </line>
      <line no="96">
        <token name="T_DOC_COMMENT">         * @var array&lt;int, string&gt; $abilities</token>
      </line>
      <line no="97">
        <token name="T_DOC_COMMENT">         */</token>
      </line>
      <line no="98">
        <token name="T_WHITESPACE">        </token>
        <token name="T_VARIABLE">$abilities</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_EQUAL">=</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_SQUARE">[</token>
        <token name="T_CLOSE_SQUARE">]</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="99"/>
      <line no="100">
        <token name="T_WHITESPACE">        </token>
        <token name="T_IF">if</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_EMPTY">empty</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_VARIABLE">$group</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_CURLY">{</token>
      </line>
      <line no="101">
        <token name="T_WHITESPACE">            </token>
        <token name="T_COMMENT">// Set the lowest permission scheme for abilities.</token>
      </line>
      <line no="102">
        <token name="T_WHITESPACE">            </token>
        <token name="T_VARIABLE">$group</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_EQUAL">=</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_CONSTANT_ENCAPSED_STRING">'guest'</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="103">
        <token name="T_WHITESPACE">        </token>
        <token name="T_CLOSE_CURLY">}</token>
      </line>
      <line no="104"/>
      <line no="105">
        <token name="T_WHITESPACE">        </token>
        <token name="T_IF">if</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_EXCLAMATION_MARK">!</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_EMPTY">empty</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_VARIABLE">$packages</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_BOOLEAN_AND">&amp;&amp;</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">is_array</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_VARIABLE">$packages</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_CURLY">{</token>
      </line>
      <line no="106">
        <token name="T_WHITESPACE">            </token>
        <token name="T_FOREACH">foreach</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_VARIABLE">$packages</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_AS">as</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$package</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_CURLY">{</token>
      </line>
      <line no="107">
        <token name="T_WHITESPACE">                </token>
        <token name="T_VARIABLE">$config</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_EQUAL">=</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">config</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_VARIABLE">$package</token>
        <token name="T_DOT">.</token>
        <token name="T_CONSTANT_ENCAPSED_STRING">'.abilities.'</token>
        <token name="T_DOT">.</token>
        <token name="T_VARIABLE">$group</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="108">
        <token name="T_WHITESPACE">                </token>
        <token name="T_VARIABLE">$package_abilities</token>
        <token name="T_OPEN_SQUARE">[</token>
        <token name="T_VARIABLE">$package</token>
        <token name="T_CLOSE_SQUARE">]</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_EQUAL">=</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">is_array</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_VARIABLE">$config</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_QUESTION_MARK">?</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$config</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_COLON">:</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_SQUARE">[</token>
        <token name="T_CLOSE_SQUARE">]</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="109">
        <token name="T_WHITESPACE">            </token>
        <token name="T_CLOSE_CURLY">}</token>
      </line>
      <line no="110">
        <token name="T_WHITESPACE">        </token>
        <token name="T_CLOSE_CURLY">}</token>
      </line>
      <line no="111"/>
      <line no="112">
        <token name="T_WHITESPACE">        </token>
        <token name="T_FOREACH">foreach</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_VARIABLE">$package_abilities</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_AS">as</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$package</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_DOUBLE_ARROW">=&gt;</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$list</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_CURLY">{</token>
      </line>
      <line no="113">
        <token name="T_WHITESPACE">            </token>
        <token name="T_IF">if</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_EXCLAMATION_MARK">!</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_EMPTY">empty</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_VARIABLE">$list</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_CURLY">{</token>
      </line>
      <line no="114">
        <token name="T_WHITESPACE">                </token>
        <token name="T_FOREACH">foreach</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_VARIABLE">$list</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_AS">as</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$ability</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_CURLY">{</token>
      </line>
      <line no="115">
        <token name="T_WHITESPACE">                    </token>
        <token name="T_IF">if</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_EMPTY">empty</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_VARIABLE">$ability</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_BOOLEAN_OR">||</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_EXCLAMATION_MARK">!</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">is_string</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_VARIABLE">$ability</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_CURLY">{</token>
      </line>
      <line no="116">
        <token name="T_WHITESPACE">                        </token>
        <token name="T_IF">if</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_STRING">config</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_CONSTANT_ENCAPSED_STRING">'app.debug'</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_BOOLEAN_AND">&amp;&amp;</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">config</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_CONSTANT_ENCAPSED_STRING">'playground-auth.debug'</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_CURLY">{</token>
      </line>
      <line no="117">
        <token name="T_WHITESPACE">                            </token>
        <token name="T_STRING">Log</token>
        <token name="T_DOUBLE_COLON">::</token>
        <token name="T_STRING">debug</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_METHOD_C">__METHOD__</token>
        <token name="T_COMMA">,</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_SQUARE">[</token>
      </line>
      <line no="118">
        <token name="T_WHITESPACE">                                </token>
        <token name="T_CONSTANT_ENCAPSED_STRING">'error'</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_DOUBLE_ARROW">=&gt;</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_CONSTANT_ENCAPSED_STRING">'Invalid abilities defined in package.'</token>
        <token name="T_COMMA">,</token>
      </line>
      <line no="119">
        <token name="T_WHITESPACE">                                </token>
        <token name="T_CONSTANT_ENCAPSED_STRING">'$ability'</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_DOUBLE_ARROW">=&gt;</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$ability</token>
        <token name="T_COMMA">,</token>
      </line>
      <line no="120">
        <token name="T_WHITESPACE">                                </token>
        <token name="T_CONSTANT_ENCAPSED_STRING">'$group'</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_DOUBLE_ARROW">=&gt;</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$group</token>
        <token name="T_COMMA">,</token>
      </line>
      <line no="121">
        <token name="T_WHITESPACE">                                </token>
        <token name="T_CONSTANT_ENCAPSED_STRING">'$package'</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_DOUBLE_ARROW">=&gt;</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$package</token>
        <token name="T_COMMA">,</token>
      </line>
      <line no="122">
        <token name="T_WHITESPACE">                                </token>
        <token name="T_CONSTANT_ENCAPSED_STRING">'$list'</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_DOUBLE_ARROW">=&gt;</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$list</token>
        <token name="T_COMMA">,</token>
      </line>
      <line no="123">
        <token name="T_WHITESPACE">                            </token>
        <token name="T_CLOSE_SQUARE">]</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="124">
        <token name="T_WHITESPACE">                        </token>
        <token name="T_CLOSE_CURLY">}</token>
      </line>
      <line no="125"/>
      <line no="126">
        <token name="T_WHITESPACE">                        </token>
        <token name="T_CONTINUE">continue</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="127">
        <token name="T_WHITESPACE">                    </token>
        <token name="T_CLOSE_CURLY">}</token>
      </line>
      <line no="128">
        <token name="T_WHITESPACE">                    </token>
        <token name="T_IF">if</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_STRING">in_array</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_CONSTANT_ENCAPSED_STRING">'deny'</token>
        <token name="T_COMMA">,</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$abilities</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_CURLY">{</token>
      </line>
      <line no="129">
        <token name="T_WHITESPACE">                        </token>
        <token name="T_IF">if</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_VARIABLE">$package</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_IS_NOT_IDENTICAL">!==</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_CONSTANT_ENCAPSED_STRING">'playground-auth'</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_CURLY">{</token>
      </line>
      <line no="130">
        <token name="T_WHITESPACE">                            </token>
        <token name="T_IF">if</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_STRING">config</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_CONSTANT_ENCAPSED_STRING">'app.debug'</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_BOOLEAN_AND">&amp;&amp;</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">config</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_CONSTANT_ENCAPSED_STRING">'playground-auth.debug'</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_CURLY">{</token>
      </line>
      <line no="131">
        <token name="T_WHITESPACE">                                </token>
        <token name="T_STRING">Log</token>
        <token name="T_DOUBLE_COLON">::</token>
        <token name="T_STRING">debug</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_METHOD_C">__METHOD__</token>
        <token name="T_COMMA">,</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_SQUARE">[</token>
      </line>
      <line no="132">
        <token name="T_WHITESPACE">                                    </token>
        <token name="T_CONSTANT_ENCAPSED_STRING">'error'</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_DOUBLE_ARROW">=&gt;</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_CONSTANT_ENCAPSED_STRING">'Only the playground-auth configuration may implement deny for a group.'</token>
        <token name="T_COMMA">,</token>
      </line>
      <line no="133">
        <token name="T_WHITESPACE">                                    </token>
        <token name="T_CONSTANT_ENCAPSED_STRING">'$ability'</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_DOUBLE_ARROW">=&gt;</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$ability</token>
        <token name="T_COMMA">,</token>
      </line>
      <line no="134">
        <token name="T_WHITESPACE">                                    </token>
        <token name="T_CONSTANT_ENCAPSED_STRING">'$group'</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_DOUBLE_ARROW">=&gt;</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$group</token>
        <token name="T_COMMA">,</token>
      </line>
      <line no="135">
        <token name="T_WHITESPACE">                                    </token>
        <token name="T_CONSTANT_ENCAPSED_STRING">'$package'</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_DOUBLE_ARROW">=&gt;</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$package</token>
        <token name="T_COMMA">,</token>
      </line>
      <line no="136">
        <token name="T_WHITESPACE">                                    </token>
        <token name="T_CONSTANT_ENCAPSED_STRING">'$list'</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_DOUBLE_ARROW">=&gt;</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$list</token>
        <token name="T_COMMA">,</token>
      </line>
      <line no="137">
        <token name="T_WHITESPACE">                                </token>
        <token name="T_CLOSE_SQUARE">]</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="138">
        <token name="T_WHITESPACE">                            </token>
        <token name="T_CLOSE_CURLY">}</token>
      </line>
      <line no="139"/>
      <line no="140">
        <token name="T_WHITESPACE">                            </token>
        <token name="T_CONTINUE">continue</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="141">
        <token name="T_WHITESPACE">                        </token>
        <token name="T_CLOSE_CURLY">}</token>
      </line>
      <line no="142">
        <token name="T_WHITESPACE">                        </token>
        <token name="T_VARIABLE">$abilities</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_EQUAL">=</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_SQUARE">[</token>
      </line>
      <line no="143">
        <token name="T_WHITESPACE">                            </token>
        <token name="T_CONSTANT_ENCAPSED_STRING">'deny'</token>
        <token name="T_COMMA">,</token>
      </line>
      <line no="144">
        <token name="T_WHITESPACE">                        </token>
        <token name="T_CLOSE_SQUARE">]</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="145">
        <token name="T_WHITESPACE">                    </token>
        <token name="T_CLOSE_CURLY">}</token>
      </line>
      <line no="146">
        <token name="T_WHITESPACE">                    </token>
        <token name="T_IF">if</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_VARIABLE">$ability</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_IS_IDENTICAL">===</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_CONSTANT_ENCAPSED_STRING">'deny'</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_CURLY">{</token>
      </line>
      <line no="147">
        <token name="T_WHITESPACE">                        </token>
        <token name="T_IF">if</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_VARIABLE">$package</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_IS_NOT_IDENTICAL">!==</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_CONSTANT_ENCAPSED_STRING">'playground-auth'</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_CURLY">{</token>
      </line>
      <line no="148">
        <token name="T_WHITESPACE">                            </token>
        <token name="T_IF">if</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_STRING">config</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_CONSTANT_ENCAPSED_STRING">'app.debug'</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_BOOLEAN_AND">&amp;&amp;</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">config</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_CONSTANT_ENCAPSED_STRING">'playground-auth.debug'</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_CURLY">{</token>
      </line>
      <line no="149">
        <token name="T_WHITESPACE">                                </token>
        <token name="T_STRING">Log</token>
        <token name="T_DOUBLE_COLON">::</token>
        <token name="T_STRING">debug</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_METHOD_C">__METHOD__</token>
        <token name="T_COMMA">,</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_SQUARE">[</token>
      </line>
      <line no="150">
        <token name="T_WHITESPACE">                                    </token>
        <token name="T_CONSTANT_ENCAPSED_STRING">'error'</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_DOUBLE_ARROW">=&gt;</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_CONSTANT_ENCAPSED_STRING">'Only the playground-auth configuration may implement deny for a group.'</token>
        <token name="T_COMMA">,</token>
      </line>
      <line no="151">
        <token name="T_WHITESPACE">                                    </token>
        <token name="T_CONSTANT_ENCAPSED_STRING">'$ability'</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_DOUBLE_ARROW">=&gt;</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$ability</token>
        <token name="T_COMMA">,</token>
      </line>
      <line no="152">
        <token name="T_WHITESPACE">                                    </token>
        <token name="T_CONSTANT_ENCAPSED_STRING">'$group'</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_DOUBLE_ARROW">=&gt;</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$group</token>
        <token name="T_COMMA">,</token>
      </line>
      <line no="153">
        <token name="T_WHITESPACE">                                    </token>
        <token name="T_CONSTANT_ENCAPSED_STRING">'$package'</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_DOUBLE_ARROW">=&gt;</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$package</token>
        <token name="T_COMMA">,</token>
      </line>
      <line no="154">
        <token name="T_WHITESPACE">                                    </token>
        <token name="T_CONSTANT_ENCAPSED_STRING">'$list'</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_DOUBLE_ARROW">=&gt;</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$list</token>
        <token name="T_COMMA">,</token>
      </line>
      <line no="155">
        <token name="T_WHITESPACE">                                </token>
        <token name="T_CLOSE_SQUARE">]</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="156">
        <token name="T_WHITESPACE">                            </token>
        <token name="T_CLOSE_CURLY">}</token>
      </line>
      <line no="157"/>
      <line no="158">
        <token name="T_WHITESPACE">                            </token>
        <token name="T_CONTINUE">continue</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="159">
        <token name="T_WHITESPACE">                        </token>
        <token name="T_CLOSE_CURLY">}</token>
      </line>
      <line no="160">
        <token name="T_WHITESPACE">                        </token>
        <token name="T_VARIABLE">$abilities</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_EQUAL">=</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_SQUARE">[</token>
      </line>
      <line no="161">
        <token name="T_WHITESPACE">                            </token>
        <token name="T_CONSTANT_ENCAPSED_STRING">'deny'</token>
        <token name="T_COMMA">,</token>
      </line>
      <line no="162">
        <token name="T_WHITESPACE">                        </token>
        <token name="T_CLOSE_SQUARE">]</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="163">
        <token name="T_WHITESPACE">                    </token>
        <token name="T_CLOSE_CURLY">}</token>
      </line>
      <line no="164">
        <token name="T_WHITESPACE">                    </token>
        <token name="T_IF">if</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_STRING">in_array</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_VARIABLE">$ability</token>
        <token name="T_COMMA">,</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$this</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">rootAbilities</token>
        <token name="T_CLOSE_BRACKET">)</token>
      </line>
      <line no="165">
        <token name="T_WHITESPACE">                        </token>
        <token name="T_BOOLEAN_AND">&amp;&amp;</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_EXCLAMATION_MARK">!</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">in_array</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_VARIABLE">$group</token>
        <token name="T_COMMA">,</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$this</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">rootAccessGroups</token>
        <token name="T_CLOSE_BRACKET">)</token>
      </line>
      <line no="166">
        <token name="T_WHITESPACE">                    </token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_CURLY">{</token>
      </line>
      <line no="167">
        <token name="T_WHITESPACE">                        </token>
        <token name="T_IF">if</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_STRING">config</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_CONSTANT_ENCAPSED_STRING">'app.debug'</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_BOOLEAN_AND">&amp;&amp;</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">config</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_CONSTANT_ENCAPSED_STRING">'playground-auth.debug'</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_CURLY">{</token>
      </line>
      <line no="168">
        <token name="T_WHITESPACE">                            </token>
        <token name="T_STRING">Log</token>
        <token name="T_DOUBLE_COLON">::</token>
        <token name="T_STRING">debug</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_METHOD_C">__METHOD__</token>
        <token name="T_COMMA">,</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_SQUARE">[</token>
      </line>
      <line no="169">
        <token name="T_WHITESPACE">                                </token>
        <token name="T_CONSTANT_ENCAPSED_STRING">'error'</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_DOUBLE_ARROW">=&gt;</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">sprintf</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_CONSTANT_ENCAPSED_STRING">'Root abilites are limited to the groups: %1$s'</token>
        <token name="T_COMMA">,</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">implode</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_CONSTANT_ENCAPSED_STRING">', '</token>
        <token name="T_COMMA">,</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$this</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">rootAccessGroups</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_COMMA">,</token>
      </line>
      <line no="170">
        <token name="T_WHITESPACE">                                </token>
        <token name="T_CONSTANT_ENCAPSED_STRING">'$ability'</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_DOUBLE_ARROW">=&gt;</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$ability</token>
        <token name="T_COMMA">,</token>
      </line>
      <line no="171">
        <token name="T_WHITESPACE">                                </token>
        <token name="T_CONSTANT_ENCAPSED_STRING">'$group'</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_DOUBLE_ARROW">=&gt;</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$group</token>
        <token name="T_COMMA">,</token>
      </line>
      <line no="172">
        <token name="T_WHITESPACE">                                </token>
        <token name="T_CONSTANT_ENCAPSED_STRING">'$package'</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_DOUBLE_ARROW">=&gt;</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$package</token>
        <token name="T_COMMA">,</token>
      </line>
      <line no="173">
        <token name="T_WHITESPACE">                                </token>
        <token name="T_CONSTANT_ENCAPSED_STRING">'$list'</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_DOUBLE_ARROW">=&gt;</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$list</token>
        <token name="T_COMMA">,</token>
      </line>
      <line no="174">
        <token name="T_WHITESPACE">                                </token>
        <token name="T_CONSTANT_ENCAPSED_STRING">'$this-&gt;rootAccessGroups'</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_DOUBLE_ARROW">=&gt;</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$this</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">rootAccessGroups</token>
        <token name="T_COMMA">,</token>
      </line>
      <line no="175">
        <token name="T_WHITESPACE">                                </token>
        <token name="T_CONSTANT_ENCAPSED_STRING">'$this-&gt;rootAbilities'</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_DOUBLE_ARROW">=&gt;</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$this</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">rootAbilities</token>
        <token name="T_COMMA">,</token>
      </line>
      <line no="176">
        <token name="T_WHITESPACE">                            </token>
        <token name="T_CLOSE_SQUARE">]</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="177"/>
      <line no="178">
        <token name="T_WHITESPACE">                        </token>
        <token name="T_CLOSE_CURLY">}</token>
      </line>
      <line no="179"/>
      <line no="180">
        <token name="T_WHITESPACE">                        </token>
        <token name="T_CONTINUE">continue</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="181">
        <token name="T_WHITESPACE">                    </token>
        <token name="T_CLOSE_CURLY">}</token>
      </line>
      <line no="182">
        <token name="T_WHITESPACE">                    </token>
        <token name="T_IF">if</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_EXCLAMATION_MARK">!</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">in_array</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_VARIABLE">$ability</token>
        <token name="T_COMMA">,</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$abilities</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_CURLY">{</token>
      </line>
      <line no="183">
        <token name="T_WHITESPACE">                        </token>
        <token name="T_VARIABLE">$abilities</token>
        <token name="T_OPEN_SQUARE">[</token>
        <token name="T_CLOSE_SQUARE">]</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_EQUAL">=</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$ability</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="184">
        <token name="T_WHITESPACE">                    </token>
        <token name="T_CLOSE_CURLY">}</token>
      </line>
      <line no="185">
        <token name="T_WHITESPACE">                </token>
        <token name="T_CLOSE_CURLY">}</token>
      </line>
      <line no="186">
        <token name="T_WHITESPACE">            </token>
        <token name="T_CLOSE_CURLY">}</token>
      </line>
      <line no="187">
        <token name="T_WHITESPACE">        </token>
        <token name="T_CLOSE_CURLY">}</token>
      </line>
      <line no="188"/>
      <line no="189">
        <token name="T_WHITESPACE">        </token>
        <token name="T_COMMENT">// dump([</token>
      </line>
      <line no="190">
        <token name="T_WHITESPACE">        </token>
        <token name="T_COMMENT">//     '__METHOD__' =&gt; __METHOD__,</token>
      </line>
      <line no="191">
        <token name="T_WHITESPACE">        </token>
        <token name="T_COMMENT">//     '$group' =&gt; $group,</token>
      </line>
      <line no="192">
        <token name="T_WHITESPACE">        </token>
        <token name="T_COMMENT">//     '$abilities' =&gt; $abilities,</token>
      </line>
      <line no="193">
        <token name="T_WHITESPACE">        </token>
        <token name="T_COMMENT">//     '$package_abilities' =&gt; $package_abilities,</token>
      </line>
      <line no="194">
        <token name="T_WHITESPACE">        </token>
        <token name="T_COMMENT">//     '$this-&gt;rootAccessGroups' =&gt; $this-&gt;rootAccessGroups,</token>
      </line>
      <line no="195">
        <token name="T_WHITESPACE">        </token>
        <token name="T_COMMENT">//     '$this-&gt;rootAbilities' =&gt; $this-&gt;rootAbilities,</token>
      </line>
      <line no="196">
        <token name="T_WHITESPACE">        </token>
        <token name="T_COMMENT">//     '$this-&gt;isRoot' =&gt; $this-&gt;isRoot,</token>
      </line>
      <line no="197">
        <token name="T_WHITESPACE">        </token>
        <token name="T_COMMENT">//     '$this-&gt;isAdmin' =&gt; $this-&gt;isAdmin,</token>
      </line>
      <line no="198">
        <token name="T_WHITESPACE">        </token>
        <token name="T_COMMENT">//     '$this-&gt;isManager' =&gt; $this-&gt;isManager,</token>
      </line>
      <line no="199">
        <token name="T_WHITESPACE">        </token>
        <token name="T_COMMENT">//     '$this-&gt;isUser' =&gt; $this-&gt;isUser,</token>
      </line>
      <line no="200">
        <token name="T_WHITESPACE">        </token>
        <token name="T_COMMENT">//     '$this-&gt;isGuest' =&gt; $this-&gt;isGuest,</token>
      </line>
      <line no="201">
        <token name="T_WHITESPACE">        </token>
        <token name="T_COMMENT">// ]);</token>
      </line>
      <line no="202">
        <token name="T_WHITESPACE">        </token>
        <token name="T_RETURN">return</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$abilities</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="203">
        <token name="T_WHITESPACE">    </token>
        <token name="T_CLOSE_CURLY">}</token>
      </line>
      <line no="204"/>
      <line no="205">
        <token name="T_WHITESPACE">    </token>
        <token name="T_DOC_COMMENT">/**</token>
      </line>
      <line no="206">
        <token name="T_DOC_COMMENT">     * @return array&lt;int, string&gt;</token>
      </line>
      <line no="207">
        <token name="T_DOC_COMMENT">     */</token>
      </line>
      <line no="208">
        <token name="T_WHITESPACE">    </token>
        <token name="T_PROTECTED">protected</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_FUNCTION">function</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">abilitiesByGroup</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_STRING">string</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$group</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_COLON">:</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_ARRAY">array</token>
      </line>
      <line no="209">
        <token name="T_WHITESPACE">    </token>
        <token name="T_OPEN_CURLY">{</token>
      </line>
      <line no="210">
        <token name="T_WHITESPACE">        </token>
        <token name="T_RETURN">return</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$this</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">compileAbilitiesByGroup</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_VARIABLE">$group</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="211">
        <token name="T_WHITESPACE">    </token>
        <token name="T_CLOSE_CURLY">}</token>
      </line>
      <line no="212"/>
      <line no="213">
        <token name="T_WHITESPACE">    </token>
        <token name="T_DOC_COMMENT">/**</token>
      </line>
      <line no="214">
        <token name="T_DOC_COMMENT">     * @return array&lt;int, string&gt;</token>
      </line>
      <line no="215">
        <token name="T_DOC_COMMENT">     */</token>
      </line>
      <line no="216">
        <token name="T_WHITESPACE">    </token>
        <token name="T_PROTECTED">protected</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_FUNCTION">function</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">abilities</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_STRING">Authenticatable</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$user</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_COLON">:</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_ARRAY">array</token>
      </line>
      <line no="217">
        <token name="T_WHITESPACE">    </token>
        <token name="T_OPEN_CURLY">{</token>
      </line>
      <line no="218">
        <token name="T_WHITESPACE">        </token>
        <token name="T_VARIABLE">$abilities</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_EQUAL">=</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_SQUARE">[</token>
        <token name="T_CLOSE_SQUARE">]</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="219"/>
      <line no="220">
        <token name="T_WHITESPACE">        </token>
        <token name="T_IF">if</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_VARIABLE">$this</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">onlyUserAbilities</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_CURLY">{</token>
      </line>
      <line no="221">
        <token name="T_WHITESPACE">            </token>
        <token name="T_VARIABLE">$abilities</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_EQUAL">=</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_SQUARE">[</token>
        <token name="T_CLOSE_SQUARE">]</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="222">
        <token name="T_WHITESPACE">        </token>
        <token name="T_CLOSE_CURLY">}</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_ELSEIF">elseif</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_VARIABLE">$this</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">isRoot</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_CURLY">{</token>
      </line>
      <line no="223">
        <token name="T_WHITESPACE">            </token>
        <token name="T_VARIABLE">$abilities</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_EQUAL">=</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$this</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">abilitiesByGroup</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_CONSTANT_ENCAPSED_STRING">'root'</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="224">
        <token name="T_WHITESPACE">        </token>
        <token name="T_CLOSE_CURLY">}</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_ELSEIF">elseif</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_VARIABLE">$this</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">isAdmin</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_CURLY">{</token>
      </line>
      <line no="225">
        <token name="T_WHITESPACE">            </token>
        <token name="T_VARIABLE">$abilities</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_EQUAL">=</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$this</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">abilitiesByGroup</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_CONSTANT_ENCAPSED_STRING">'admin'</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="226">
        <token name="T_WHITESPACE">        </token>
        <token name="T_CLOSE_CURLY">}</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_ELSEIF">elseif</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_VARIABLE">$this</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">isManager</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_CURLY">{</token>
      </line>
      <line no="227">
        <token name="T_WHITESPACE">            </token>
        <token name="T_VARIABLE">$abilities</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_EQUAL">=</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$this</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">abilitiesByGroup</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_CONSTANT_ENCAPSED_STRING">'manager'</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="228">
        <token name="T_WHITESPACE">        </token>
        <token name="T_CLOSE_CURLY">}</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_ELSEIF">elseif</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_VARIABLE">$this</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">isUser</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_CURLY">{</token>
      </line>
      <line no="229">
        <token name="T_WHITESPACE">            </token>
        <token name="T_VARIABLE">$abilities</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_EQUAL">=</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$this</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">abilitiesByGroup</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_CONSTANT_ENCAPSED_STRING">'user'</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="230">
        <token name="T_WHITESPACE">        </token>
        <token name="T_CLOSE_CURLY">}</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_ELSEIF">elseif</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_VARIABLE">$this</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">isGuest</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_CURLY">{</token>
      </line>
      <line no="231">
        <token name="T_WHITESPACE">            </token>
        <token name="T_VARIABLE">$abilities</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_EQUAL">=</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$this</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">abilitiesByGroup</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_CONSTANT_ENCAPSED_STRING">'guest'</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="232">
        <token name="T_WHITESPACE">        </token>
        <token name="T_CLOSE_CURLY">}</token>
      </line>
      <line no="233"/>
      <line no="234">
        <token name="T_WHITESPACE">        </token>
        <token name="T_FOREACH">foreach</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_VARIABLE">$abilities</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_AS">as</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$ability</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_CURLY">{</token>
      </line>
      <line no="235">
        <token name="T_WHITESPACE">            </token>
        <token name="T_IF">if</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_STRING">is_string</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_VARIABLE">$ability</token>
        <token name="T_CLOSE_BRACKET">)</token>
      </line>
      <line no="236">
        <token name="T_WHITESPACE">                </token>
        <token name="T_BOOLEAN_AND">&amp;&amp;</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$ability</token>
      </line>
      <line no="237">
        <token name="T_WHITESPACE">                </token>
        <token name="T_BOOLEAN_AND">&amp;&amp;</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_EXCLAMATION_MARK">!</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">in_array</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_VARIABLE">$ability</token>
        <token name="T_COMMA">,</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$this</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">abilities</token>
        <token name="T_CLOSE_BRACKET">)</token>
      </line>
      <line no="238">
        <token name="T_WHITESPACE">            </token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_CURLY">{</token>
      </line>
      <line no="239">
        <token name="T_WHITESPACE">                </token>
        <token name="T_VARIABLE">$this</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">abilities</token>
        <token name="T_OPEN_SQUARE">[</token>
        <token name="T_CLOSE_SQUARE">]</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_EQUAL">=</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$ability</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="240">
        <token name="T_WHITESPACE">            </token>
        <token name="T_CLOSE_CURLY">}</token>
      </line>
      <line no="241">
        <token name="T_WHITESPACE">        </token>
        <token name="T_CLOSE_CURLY">}</token>
      </line>
      <line no="242"/>
      <line no="243">
        <token name="T_WHITESPACE">        </token>
        <token name="T_IF">if</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_EMPTY">empty</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_VARIABLE">$this</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">abilities</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_CURLY">{</token>
      </line>
      <line no="244">
        <token name="T_WHITESPACE">            </token>
        <token name="T_COMMENT">// $this-&gt;abilities[] = 'deny';</token>
      </line>
      <line no="245">
        <token name="T_WHITESPACE">        </token>
        <token name="T_CLOSE_CURLY">}</token>
      </line>
      <line no="246"/>
      <line no="247">
        <token name="T_WHITESPACE">        </token>
        <token name="T_RETURN">return</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$this</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">abilities</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="248">
        <token name="T_WHITESPACE">    </token>
        <token name="T_CLOSE_CURLY">}</token>
      </line>
      <line no="249"/>
      <line no="250">
        <token name="T_WHITESPACE">    </token>
        <token name="T_PUBLIC">public</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_FUNCTION">function</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">init</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_STRING">Authenticatable</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$user</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_COLON">:</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">self</token>
      </line>
      <line no="251">
        <token name="T_WHITESPACE">    </token>
        <token name="T_OPEN_CURLY">{</token>
      </line>
      <line no="252">
        <token name="T_WHITESPACE">        </token>
        <token name="T_IF">if</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_VARIABLE">$this</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">init</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_CURLY">{</token>
      </line>
      <line no="253">
        <token name="T_WHITESPACE">            </token>
        <token name="T_RETURN">return</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$this</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="254">
        <token name="T_WHITESPACE">        </token>
        <token name="T_CLOSE_CURLY">}</token>
      </line>
      <line no="255"/>
      <line no="256">
        <token name="T_WHITESPACE">        </token>
        <token name="T_VARIABLE">$config</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_EQUAL">=</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">config</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_CONSTANT_ENCAPSED_STRING">'playground-auth'</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="257">
        <token name="T_WHITESPACE">        </token>
        <token name="T_VARIABLE">$config</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_EQUAL">=</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">is_array</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_VARIABLE">$config</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_QUESTION_MARK">?</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$config</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_COLON">:</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_SQUARE">[</token>
        <token name="T_CLOSE_SQUARE">]</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="258"/>
      <line no="259">
        <token name="T_WHITESPACE">        </token>
        <token name="T_IF">if</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_VARIABLE">$user</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_INSTANCEOF">instanceof</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">HasApiTokens</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_BOOLEAN_OR">||</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">is_callable</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_OPEN_SQUARE">[</token>
        <token name="T_VARIABLE">$user</token>
        <token name="T_COMMA">,</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_CONSTANT_ENCAPSED_STRING">'createToken'</token>
        <token name="T_CLOSE_SQUARE">]</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_CURLY">{</token>
      </line>
      <line no="260">
        <token name="T_WHITESPACE">            </token>
        <token name="T_VARIABLE">$this</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">hasSanctum</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_EQUAL">=</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">true</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="261">
        <token name="T_WHITESPACE">        </token>
        <token name="T_CLOSE_CURLY">}</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_ELSE">else</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_CURLY">{</token>
      </line>
      <line no="262">
        <token name="T_WHITESPACE">            </token>
        <token name="T_VARIABLE">$this</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">hasSanctum</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_EQUAL">=</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">false</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="263">
        <token name="T_WHITESPACE">        </token>
        <token name="T_CLOSE_CURLY">}</token>
      </line>
      <line no="264"/>
      <line no="265">
        <token name="T_WHITESPACE">        </token>
        <token name="T_IF">if</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_VARIABLE">$this</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">hasSanctum</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_BOOLEAN_AND">&amp;&amp;</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_EXCLAMATION_MARK">!</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_EMPTY">empty</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_VARIABLE">$config</token>
        <token name="T_OPEN_SQUARE">[</token>
        <token name="T_CONSTANT_ENCAPSED_STRING">'sanctum'</token>
        <token name="T_CLOSE_SQUARE">]</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_CURLY">{</token>
      </line>
      <line no="266">
        <token name="T_WHITESPACE">            </token>
        <token name="T_VARIABLE">$this</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">useSanctum</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_EQUAL">=</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">true</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="267">
        <token name="T_WHITESPACE">        </token>
        <token name="T_CLOSE_CURLY">}</token>
      </line>
      <line no="268">
        <token name="T_WHITESPACE">        </token>
        <token name="T_COMMENT">// dd([</token>
      </line>
      <line no="269">
        <token name="T_WHITESPACE">        </token>
        <token name="T_COMMENT">//     '__METHOD__' =&gt; __METHOD__,</token>
      </line>
      <line no="270">
        <token name="T_WHITESPACE">        </token>
        <token name="T_COMMENT">//     '$user' =&gt; $user-&gt;toArray(),</token>
      </line>
      <line no="271">
        <token name="T_WHITESPACE">        </token>
        <token name="T_COMMENT">//     '$config' =&gt; $config,</token>
      </line>
      <line no="272">
        <token name="T_WHITESPACE">        </token>
        <token name="T_COMMENT">// ]);</token>
      </line>
      <line no="273"/>
      <line no="274">
        <token name="T_WHITESPACE">        </token>
        <token name="T_IF">if</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_VARIABLE">$user</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_INSTANCEOF">instanceof</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">Abilities</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_CURLY">{</token>
      </line>
      <line no="275">
        <token name="T_WHITESPACE">            </token>
        <token name="T_IF">if</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_EMPTY">empty</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_VARIABLE">$config</token>
        <token name="T_OPEN_SQUARE">[</token>
        <token name="T_CONSTANT_ENCAPSED_STRING">'abilities'</token>
        <token name="T_CLOSE_SQUARE">]</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_CURLY">{</token>
      </line>
      <line no="276">
        <token name="T_WHITESPACE">                </token>
        <token name="T_VARIABLE">$this</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">abilities</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_EQUAL">=</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_SQUARE">[</token>
        <token name="T_CLOSE_SQUARE">]</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="277">
        <token name="T_WHITESPACE">                </token>
        <token name="T_VARIABLE">$this</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">onlyUserAbilities</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_EQUAL">=</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">false</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="278">
        <token name="T_WHITESPACE">            </token>
        <token name="T_CLOSE_CURLY">}</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_ELSE">else</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_CURLY">{</token>
      </line>
      <line no="279">
        <token name="T_WHITESPACE">                </token>
        <token name="T_VARIABLE">$abilities</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_EQUAL">=</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$user</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">getAttributeValue</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_CONSTANT_ENCAPSED_STRING">'abilities'</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="280">
        <token name="T_WHITESPACE">                </token>
        <token name="T_VARIABLE">$this</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">abilities</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_EQUAL">=</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">is_array</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_VARIABLE">$abilities</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_QUESTION_MARK">?</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$abilities</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_COLON">:</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_SQUARE">[</token>
        <token name="T_CLOSE_SQUARE">]</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="281">
        <token name="T_WHITESPACE">                </token>
        <token name="T_VARIABLE">$this</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">onlyUserAbilities</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_EQUAL">=</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$config</token>
        <token name="T_OPEN_SQUARE">[</token>
        <token name="T_CONSTANT_ENCAPSED_STRING">'abilities'</token>
        <token name="T_CLOSE_SQUARE">]</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_IS_IDENTICAL">===</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_CONSTANT_ENCAPSED_STRING">'user'</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="282">
        <token name="T_WHITESPACE">            </token>
        <token name="T_CLOSE_CURLY">}</token>
      </line>
      <line no="283">
        <token name="T_WHITESPACE">        </token>
        <token name="T_CLOSE_CURLY">}</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_ELSE">else</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_CURLY">{</token>
      </line>
      <line no="284">
        <token name="T_WHITESPACE">            </token>
        <token name="T_VARIABLE">$this</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">abilities</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_EQUAL">=</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_SQUARE">[</token>
        <token name="T_CLOSE_SQUARE">]</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="285">
        <token name="T_WHITESPACE">            </token>
        <token name="T_VARIABLE">$this</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">onlyUserAbilities</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_EQUAL">=</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">false</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="286">
        <token name="T_WHITESPACE">        </token>
        <token name="T_CLOSE_CURLY">}</token>
      </line>
      <line no="287"/>
      <line no="288">
        <token name="T_WHITESPACE">        </token>
        <token name="T_IF">if</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_VARIABLE">$user</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_INSTANCEOF">instanceof</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">Admin</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_CURLY">{</token>
      </line>
      <line no="289">
        <token name="T_WHITESPACE">            </token>
        <token name="T_VARIABLE">$this</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">isAdmin</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_EQUAL">=</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$user</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">isAdmin</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="290">
        <token name="T_WHITESPACE">        </token>
        <token name="T_CLOSE_CURLY">}</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_ELSE">else</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_CURLY">{</token>
      </line>
      <line no="291">
        <token name="T_WHITESPACE">            </token>
        <token name="T_VARIABLE">$this</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">isAdmin</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_EQUAL">=</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">false</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="292">
        <token name="T_WHITESPACE">        </token>
        <token name="T_CLOSE_CURLY">}</token>
      </line>
      <line no="293"/>
      <line no="294">
        <token name="T_WHITESPACE">        </token>
        <token name="T_IF">if</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_VARIABLE">$user</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_INSTANCEOF">instanceof</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">Privileges</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_CURLY">{</token>
      </line>
      <line no="295">
        <token name="T_WHITESPACE">            </token>
        <token name="T_VARIABLE">$this</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">hasPrivileges</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_EQUAL">=</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_EXCLAMATION_MARK">!</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_EMPTY">empty</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_VARIABLE">$config</token>
        <token name="T_OPEN_SQUARE">[</token>
        <token name="T_CONSTANT_ENCAPSED_STRING">'privileges'</token>
        <token name="T_CLOSE_SQUARE">]</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="296">
        <token name="T_WHITESPACE">        </token>
        <token name="T_CLOSE_CURLY">}</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_ELSE">else</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_CURLY">{</token>
      </line>
      <line no="297">
        <token name="T_WHITESPACE">            </token>
        <token name="T_VARIABLE">$this</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">hasPrivileges</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_EQUAL">=</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">false</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="298">
        <token name="T_WHITESPACE">        </token>
        <token name="T_CLOSE_CURLY">}</token>
      </line>
      <line no="299"/>
      <line no="300">
        <token name="T_WHITESPACE">        </token>
        <token name="T_IF">if</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_VARIABLE">$user</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_INSTANCEOF">instanceof</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">Role</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_CURLY">{</token>
      </line>
      <line no="301">
        <token name="T_WHITESPACE">            </token>
        <token name="T_VARIABLE">$this</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">hasRoles</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_EQUAL">=</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_EXCLAMATION_MARK">!</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_EMPTY">empty</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_VARIABLE">$config</token>
        <token name="T_OPEN_SQUARE">[</token>
        <token name="T_CONSTANT_ENCAPSED_STRING">'roles'</token>
        <token name="T_CLOSE_SQUARE">]</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="302">
        <token name="T_WHITESPACE">            </token>
        <token name="T_IF">if</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_VARIABLE">$this</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">hasRoles</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_CURLY">{</token>
      </line>
      <line no="303">
        <token name="T_WHITESPACE">                </token>
        <token name="T_VARIABLE">$this</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">isRoot</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_EQUAL">=</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$user</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">hasRole</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_CONSTANT_ENCAPSED_STRING">'root'</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="304">
        <token name="T_WHITESPACE">                </token>
        <token name="T_IF">if</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_EXCLAMATION_MARK">!</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$this</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">isAdmin</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_CURLY">{</token>
      </line>
      <line no="305">
        <token name="T_WHITESPACE">                    </token>
        <token name="T_VARIABLE">$this</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">isAdmin</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_EQUAL">=</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$user</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">hasRole</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_CONSTANT_ENCAPSED_STRING">'admin'</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="306">
        <token name="T_WHITESPACE">                </token>
        <token name="T_CLOSE_CURLY">}</token>
      </line>
      <line no="307">
        <token name="T_WHITESPACE">                </token>
        <token name="T_VARIABLE">$this</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">isUser</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_EQUAL">=</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$user</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">hasRole</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_CONSTANT_ENCAPSED_STRING">'user'</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="308">
        <token name="T_WHITESPACE">                </token>
        <token name="T_VARIABLE">$this</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">isManager</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_EQUAL">=</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$user</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">hasRole</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_CONSTANT_ENCAPSED_STRING">'manager'</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="309">
        <token name="T_WHITESPACE">                </token>
        <token name="T_IF">if</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_VARIABLE">$user</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">hasRole</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_CONSTANT_ENCAPSED_STRING">'guest'</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_CURLY">{</token>
      </line>
      <line no="310">
        <token name="T_WHITESPACE">                    </token>
        <token name="T_VARIABLE">$this</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">isGuest</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_EQUAL">=</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">true</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="311">
        <token name="T_WHITESPACE">                </token>
        <token name="T_CLOSE_CURLY">}</token>
      </line>
      <line no="312">
        <token name="T_WHITESPACE">            </token>
        <token name="T_CLOSE_CURLY">}</token>
      </line>
      <line no="313">
        <token name="T_WHITESPACE">        </token>
        <token name="T_CLOSE_CURLY">}</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_ELSE">else</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_CURLY">{</token>
      </line>
      <line no="314">
        <token name="T_WHITESPACE">            </token>
        <token name="T_VARIABLE">$this</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">hasRoles</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_EQUAL">=</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">false</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="315">
        <token name="T_WHITESPACE">            </token>
        <token name="T_VARIABLE">$this</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">isRoot</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_EQUAL">=</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">false</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="316">
        <token name="T_WHITESPACE">            </token>
        <token name="T_VARIABLE">$this</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">isUser</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_EQUAL">=</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">false</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="317">
        <token name="T_WHITESPACE">            </token>
        <token name="T_VARIABLE">$this</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">isGuest</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_EQUAL">=</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">false</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="318">
        <token name="T_WHITESPACE">        </token>
        <token name="T_CLOSE_CURLY">}</token>
      </line>
      <line no="319"/>
      <line no="320">
        <token name="T_WHITESPACE">        </token>
        <token name="T_IF">if</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_EMPTY">empty</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_VARIABLE">$config</token>
        <token name="T_OPEN_SQUARE">[</token>
        <token name="T_CONSTANT_ENCAPSED_STRING">'listed'</token>
        <token name="T_CLOSE_SQUARE">]</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_CURLY">{</token>
      </line>
      <line no="321">
        <token name="T_WHITESPACE">            </token>
        <token name="T_VARIABLE">$this</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">listed</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_VARIABLE">$user</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="322">
        <token name="T_WHITESPACE">        </token>
        <token name="T_CLOSE_CURLY">}</token>
      </line>
      <line no="323"/>
      <line no="324">
        <token name="T_WHITESPACE">        </token>
        <token name="T_IF">if</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_EXCLAMATION_MARK">!</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$this</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">isGuest</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_CURLY">{</token>
      </line>
      <line no="325">
        <token name="T_WHITESPACE">            </token>
        <token name="T_VARIABLE">$this</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">isGuest</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_EQUAL">=</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_EXCLAMATION_MARK">!</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_VARIABLE">$this</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">isRoot</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_BOOLEAN_OR">||</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$this</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">isAdmin</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_BOOLEAN_OR">||</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$this</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">isManager</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_BOOLEAN_OR">||</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$this</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">isUser</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="326">
        <token name="T_WHITESPACE">        </token>
        <token name="T_CLOSE_CURLY">}</token>
      </line>
      <line no="327"/>
      <line no="328">
        <token name="T_WHITESPACE">        </token>
        <token name="T_VARIABLE">$this</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">init</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_EQUAL">=</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">true</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="329"/>
      <line no="330">
        <token name="T_WHITESPACE">        </token>
        <token name="T_RETURN">return</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$this</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="331">
        <token name="T_WHITESPACE">    </token>
        <token name="T_CLOSE_CURLY">}</token>
      </line>
      <line no="332"/>
      <line no="333">
        <token name="T_WHITESPACE">    </token>
        <token name="T_PUBLIC">public</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_FUNCTION">function</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">listed</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_STRING">Authenticatable</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$user</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_COLON">:</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">void</token>
      </line>
      <line no="334">
        <token name="T_WHITESPACE">    </token>
        <token name="T_OPEN_CURLY">{</token>
      </line>
      <line no="335">
        <token name="T_WHITESPACE">        </token>
        <token name="T_VARIABLE">$email</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_EQUAL">=</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$user</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">getAttributeValue</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_CONSTANT_ENCAPSED_STRING">'email'</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="336">
        <token name="T_WHITESPACE">        </token>
        <token name="T_VARIABLE">$managers</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_EQUAL">=</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">config</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_CONSTANT_ENCAPSED_STRING">'playground-auth.managers'</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="337">
        <token name="T_WHITESPACE">        </token>
        <token name="T_IF">if</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_STRING">is_array</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_VARIABLE">$managers</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_CURLY">{</token>
      </line>
      <line no="338">
        <token name="T_WHITESPACE">            </token>
        <token name="T_IF">if</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_VARIABLE">$email</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_BOOLEAN_AND">&amp;&amp;</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">in_array</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_VARIABLE">$email</token>
        <token name="T_COMMA">,</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$managers</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_CURLY">{</token>
      </line>
      <line no="339">
        <token name="T_WHITESPACE">                </token>
        <token name="T_VARIABLE">$this</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">isManager</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_EQUAL">=</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">true</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="340">
        <token name="T_WHITESPACE">            </token>
        <token name="T_CLOSE_CURLY">}</token>
      </line>
      <line no="341">
        <token name="T_WHITESPACE">        </token>
        <token name="T_CLOSE_CURLY">}</token>
      </line>
      <line no="342"/>
      <line no="343">
        <token name="T_WHITESPACE">        </token>
        <token name="T_VARIABLE">$admins</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_EQUAL">=</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">config</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_CONSTANT_ENCAPSED_STRING">'playground-auth.admins'</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="344">
        <token name="T_WHITESPACE">        </token>
        <token name="T_IF">if</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_STRING">is_array</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_VARIABLE">$admins</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_CURLY">{</token>
      </line>
      <line no="345">
        <token name="T_WHITESPACE">            </token>
        <token name="T_IF">if</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_VARIABLE">$email</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_BOOLEAN_AND">&amp;&amp;</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">in_array</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_VARIABLE">$email</token>
        <token name="T_COMMA">,</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$admins</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_CURLY">{</token>
      </line>
      <line no="346">
        <token name="T_WHITESPACE">                </token>
        <token name="T_VARIABLE">$this</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">isAdmin</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_EQUAL">=</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">true</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="347">
        <token name="T_WHITESPACE">            </token>
        <token name="T_CLOSE_CURLY">}</token>
      </line>
      <line no="348">
        <token name="T_WHITESPACE">        </token>
        <token name="T_CLOSE_CURLY">}</token>
      </line>
      <line no="349">
        <token name="T_WHITESPACE">    </token>
        <token name="T_CLOSE_CURLY">}</token>
      </line>
      <line no="350"/>
      <line no="351">
        <token name="T_WHITESPACE">    </token>
        <token name="T_DOC_COMMENT">/**</token>
      </line>
      <line no="352">
        <token name="T_DOC_COMMENT">     * @return array&lt;string, ?string&gt; Returns tokens for authorization.</token>
      </line>
      <line no="353">
        <token name="T_DOC_COMMENT">     */</token>
      </line>
      <line no="354">
        <token name="T_WHITESPACE">    </token>
        <token name="T_PUBLIC">public</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_FUNCTION">function</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">authorize</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_STRING">Authenticatable</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$user</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_COLON">:</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_ARRAY">array</token>
      </line>
      <line no="355">
        <token name="T_WHITESPACE">    </token>
        <token name="T_OPEN_CURLY">{</token>
      </line>
      <line no="356">
        <token name="T_WHITESPACE">        </token>
        <token name="T_VARIABLE">$this</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">init</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_VARIABLE">$user</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="357"/>
      <line no="358">
        <token name="T_WHITESPACE">        </token>
        <token name="T_IF">if</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_VARIABLE">$this</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">hasSanctum</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_BOOLEAN_AND">&amp;&amp;</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$this</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">useSanctum</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_CURLY">{</token>
      </line>
      <line no="359">
        <token name="T_WHITESPACE">            </token>
        <token name="T_VARIABLE">$tokens</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_EQUAL">=</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$this</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">sanctum</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_VARIABLE">$user</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="360">
        <token name="T_WHITESPACE">        </token>
        <token name="T_CLOSE_CURLY">}</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_ELSE">else</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_CURLY">{</token>
      </line>
      <line no="361">
        <token name="T_WHITESPACE">            </token>
        <token name="T_VARIABLE">$tokens</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_EQUAL">=</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_SQUARE">[</token>
        <token name="T_CLOSE_SQUARE">]</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="362">
        <token name="T_WHITESPACE">        </token>
        <token name="T_CLOSE_CURLY">}</token>
      </line>
      <line no="363">
        <token name="T_WHITESPACE">        </token>
        <token name="T_COMMENT">// dd([</token>
      </line>
      <line no="364">
        <token name="T_WHITESPACE">        </token>
        <token name="T_COMMENT">//     '$tokens' =&gt; $tokens,</token>
      </line>
      <line no="365">
        <token name="T_WHITESPACE">        </token>
        <token name="T_COMMENT">//     '$this-&gt;useSanctum' =&gt; $this-&gt;useSanctum,</token>
      </line>
      <line no="366">
        <token name="T_WHITESPACE">        </token>
        <token name="T_COMMENT">//     '$this-&gt;hasSanctum' =&gt; $this-&gt;hasSanctum,</token>
      </line>
      <line no="367">
        <token name="T_WHITESPACE">        </token>
        <token name="T_COMMENT">// ]);</token>
      </line>
      <line no="368"/>
      <line no="369">
        <token name="T_WHITESPACE">        </token>
        <token name="T_RETURN">return</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$tokens</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="370">
        <token name="T_WHITESPACE">    </token>
        <token name="T_CLOSE_CURLY">}</token>
      </line>
      <line no="371"/>
      <line no="372">
        <token name="T_WHITESPACE">    </token>
        <token name="T_DOC_COMMENT">/**</token>
      </line>
      <line no="373">
        <token name="T_DOC_COMMENT">     * @return array&lt;string, ?string&gt;</token>
      </line>
      <line no="374">
        <token name="T_DOC_COMMENT">     */</token>
      </line>
      <line no="375">
        <token name="T_WHITESPACE">    </token>
        <token name="T_PUBLIC">public</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_FUNCTION">function</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">sanctum</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_STRING">Authenticatable</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$user</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_COLON">:</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_ARRAY">array</token>
      </line>
      <line no="376">
        <token name="T_WHITESPACE">    </token>
        <token name="T_OPEN_CURLY">{</token>
      </line>
      <line no="377">
        <token name="T_WHITESPACE">        </token>
        <token name="T_DOC_COMMENT">/**</token>
      </line>
      <line no="378">
        <token name="T_DOC_COMMENT">         * @var array&lt;string, mixed&gt; $config</token>
      </line>
      <line no="379">
        <token name="T_DOC_COMMENT">         */</token>
      </line>
      <line no="380">
        <token name="T_WHITESPACE">        </token>
        <token name="T_VARIABLE">$config</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_EQUAL">=</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">config</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_CONSTANT_ENCAPSED_STRING">'playground-auth.token'</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="381">
        <token name="T_WHITESPACE">        </token>
        <token name="T_COMMENT">// dump([</token>
      </line>
      <line no="382">
        <token name="T_WHITESPACE">        </token>
        <token name="T_COMMENT">//     '$config' =&gt; $config,</token>
      </line>
      <line no="383">
        <token name="T_WHITESPACE">        </token>
        <token name="T_COMMENT">// ]);</token>
      </line>
      <line no="384"/>
      <line no="385">
        <token name="T_WHITESPACE">        </token>
        <token name="T_VARIABLE">$this</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">init</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_VARIABLE">$user</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="386"/>
      <line no="387">
        <token name="T_WHITESPACE">        </token>
        <token name="T_VARIABLE">$tokens</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_EQUAL">=</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_SQUARE">[</token>
        <token name="T_CLOSE_SQUARE">]</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="388"/>
      <line no="389">
        <token name="T_WHITESPACE">        </token>
        <token name="T_IF">if</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_EXCLAMATION_MARK">!</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$this</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">hasSanctum</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_CURLY">{</token>
      </line>
      <line no="390">
        <token name="T_WHITESPACE">            </token>
        <token name="T_STRING">Log</token>
        <token name="T_DOUBLE_COLON">::</token>
        <token name="T_STRING">debug</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_STRING">__</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_CONSTANT_ENCAPSED_STRING">'playground-auth::auth.sanctum.disabled'</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="391"/>
      <line no="392">
        <token name="T_WHITESPACE">            </token>
        <token name="T_RETURN">return</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$tokens</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="393">
        <token name="T_WHITESPACE">        </token>
        <token name="T_CLOSE_CURLY">}</token>
      </line>
      <line no="394"/>
      <line no="395">
        <token name="T_WHITESPACE">        </token>
        <token name="T_VARIABLE">$name</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_EQUAL">=</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_CONSTANT_ENCAPSED_STRING">'app'</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="396">
        <token name="T_WHITESPACE">        </token>
        <token name="T_IF">if</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_EXCLAMATION_MARK">!</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_EMPTY">empty</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_VARIABLE">$config</token>
        <token name="T_OPEN_SQUARE">[</token>
        <token name="T_CONSTANT_ENCAPSED_STRING">'name'</token>
        <token name="T_CLOSE_SQUARE">]</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_BOOLEAN_AND">&amp;&amp;</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">is_string</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_VARIABLE">$config</token>
        <token name="T_OPEN_SQUARE">[</token>
        <token name="T_CONSTANT_ENCAPSED_STRING">'name'</token>
        <token name="T_CLOSE_SQUARE">]</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_CURLY">{</token>
      </line>
      <line no="397">
        <token name="T_WHITESPACE">            </token>
        <token name="T_VARIABLE">$name</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_EQUAL">=</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$config</token>
        <token name="T_OPEN_SQUARE">[</token>
        <token name="T_CONSTANT_ENCAPSED_STRING">'name'</token>
        <token name="T_CLOSE_SQUARE">]</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="398">
        <token name="T_WHITESPACE">        </token>
        <token name="T_CLOSE_CURLY">}</token>
      </line>
      <line no="399"/>
      <line no="400">
        <token name="T_WHITESPACE">        </token>
        <token name="T_COMMENT">// https://github.com/laravel/sanctum/pull/498</token>
      </line>
      <line no="401">
        <token name="T_WHITESPACE">        </token>
        <token name="T_VARIABLE">$expiresAt</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_EQUAL">=</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">null</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="402">
        <token name="T_WHITESPACE">        </token>
        <token name="T_IF">if</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_EXCLAMATION_MARK">!</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_EMPTY">empty</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_VARIABLE">$config</token>
        <token name="T_OPEN_SQUARE">[</token>
        <token name="T_CONSTANT_ENCAPSED_STRING">'expires'</token>
        <token name="T_CLOSE_SQUARE">]</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_BOOLEAN_AND">&amp;&amp;</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">is_string</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_VARIABLE">$config</token>
        <token name="T_OPEN_SQUARE">[</token>
        <token name="T_CONSTANT_ENCAPSED_STRING">'expires'</token>
        <token name="T_CLOSE_SQUARE">]</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_CURLY">{</token>
      </line>
      <line no="403">
        <token name="T_WHITESPACE">            </token>
        <token name="T_VARIABLE">$expiresAt</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_EQUAL">=</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">Carbon</token>
        <token name="T_DOUBLE_COLON">::</token>
        <token name="T_STRING">parse</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_VARIABLE">$config</token>
        <token name="T_OPEN_SQUARE">[</token>
        <token name="T_CONSTANT_ENCAPSED_STRING">'expires'</token>
        <token name="T_CLOSE_SQUARE">]</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="404">
        <token name="T_WHITESPACE">        </token>
        <token name="T_CLOSE_CURLY">}</token>
      </line>
      <line no="405"/>
      <line no="406">
        <token name="T_WHITESPACE">        </token>
        <token name="T_IF">if</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_STRING">is_callable</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_OPEN_SQUARE">[</token>
        <token name="T_VARIABLE">$user</token>
        <token name="T_COMMA">,</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_CONSTANT_ENCAPSED_STRING">'createToken'</token>
        <token name="T_CLOSE_SQUARE">]</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_CURLY">{</token>
      </line>
      <line no="407">
        <token name="T_WHITESPACE">            </token>
        <token name="T_VARIABLE">$tokens</token>
        <token name="T_OPEN_SQUARE">[</token>
        <token name="T_VARIABLE">$name</token>
        <token name="T_CLOSE_SQUARE">]</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_EQUAL">=</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$user</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">createToken</token>
        <token name="T_OPEN_BRACKET">(</token>
      </line>
      <line no="408">
        <token name="T_WHITESPACE">                </token>
        <token name="T_VARIABLE">$name</token>
        <token name="T_COMMA">,</token>
      </line>
      <line no="409">
        <token name="T_WHITESPACE">                </token>
        <token name="T_VARIABLE">$this</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">abilities</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_VARIABLE">$user</token>
        <token name="T_CLOSE_BRACKET">)</token>
      </line>
      <line no="410">
        <token name="T_WHITESPACE">                </token>
        <token name="T_COMMENT">// $expiresAt</token>
      </line>
      <line no="411">
        <token name="T_WHITESPACE">            </token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">plainTextToken</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="412">
        <token name="T_WHITESPACE">        </token>
        <token name="T_CLOSE_CURLY">}</token>
      </line>
      <line no="413"/>
      <line no="414">
        <token name="T_WHITESPACE">        </token>
        <token name="T_RETURN">return</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$tokens</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="415">
        <token name="T_WHITESPACE">    </token>
        <token name="T_CLOSE_CURLY">}</token>
      </line>
      <line no="416">
        <token name="T_CLOSE_CURLY">}</token>
      </line>
      <line no="417"/>
    </source>
  </file>
</phpunit>
